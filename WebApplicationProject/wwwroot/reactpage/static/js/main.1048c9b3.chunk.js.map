{"version":3,"sources":["logo.svg","DAL/customerDAL.js","flightComponents/customerComponents/CustomerDetailsComp.js","flightComponents/customerComponents/CustomerFlightComp.js","flightComponents/customerComponents/CustomerTicketsComp.js","flightComponents/customerComponents/CustomerNavbar.js","flightComponents/customerComponents/MainCustomerComp.js","DAL/airlineDAL.js","flightComponents/airlineComponents/AirlineDetailsComp.js","flightComponents/airlineComponents/AirlineFlightsComp.js","flightComponents/airlineComponents/NewFlightComp.js","flightComponents/airlineComponents/AirlineNavbar.js","flightComponents/airlineComponents/MainAirlineComp.js","DAL/adminDAL.js","flightComponents/adminComponents/AdminsInboxComp.js","flightComponents/adminComponents/AirlinesInboxComp.js","flightComponents/adminComponents/AirlinesComp.js","flightComponents/adminComponents/CustomersComp.js","flightComponents/adminComponents/DetailsComp.js","flightComponents/adminComponents/AdminsComp.js","flightComponents/adminComponents/CountriesComp.js","flightComponents/adminComponents/AdminNavbar.js","flightComponents/adminComponents/MainAdminComp.js","DAL/flightsDAL.js","flightComponents/mainComponents/FlightsComp.js","flightComponents/mainComponents/MainComp.js","App.js","reportWebVitals.js","index.js"],"names":["jwt","localStorage","getItem","getCustomerDetails","a","$","ajax","type","url","contentType","dataType","headers","result","console","log","updatePassword","currentPassword","password","status","error","responseText","updateCustomer","customer","data","deleteTicket","ticket","Authorization","getAllTickets","purchaseTicket","CustomerDetailsComp","history","useHistory","useState","user","setUser","firstName","setFirstName","lastName","setLastName","address","setAddress","phoneNum","setPhoneNum","creditCard","setCreditCard","userName","setUserName","setPassword","confirm","setConfirm","email","setEmail","setCurrentPassword","prefix","setPrefix","useEffect","response","customerDAL","First_Name","Last_Name","Address","Phone_No","Credit_Card_No","split","undefined","User","User_Name","Password","Email","phone","includes","JSON","stringify","Id","User_Id","User_Role","Swal","fire","then","push","text","icon","title","updateDetails","validateDetails","length","style","fontWeight","defaultValue","onChange","e","target","value","id","backgroundColor","height","width","fontSize","fontFamily","onClick","CustomerFlightComp","props","flight","currentDate","Date","Departure_Time","getTime","Ticket_Id","Flight_Id","AirlineCompanyName","OrigionCountry","DestinationCountry","Landing_Time","border","CustomerTicketsComp","flightsToRender","tickets","setTickets","ticketsArr","map","Navigation","styled","header","CustomerNavbar","state","isExpanded","preventDefault","this","setState","className","handleToggle","activeClassName","to","Component","withRouter","MainCustomerComp","path","getAirlineFlights","getFlightsTickets","GetAllCountries","countries","updateFlight","deleteFlight","getAirlineDetails","createNewFlight","updateAirline","airline","AirlineDetailsComp","setAirline","setCountries","companyName","setCompanyName","country","setCountry","airlineDAL","Country_Name","Name","countriesArr","parse","setTimeout","prop","countriesSelector","c","_airline","AirlineFlightsComp","flights","setFlights","flightsTickets","setFlightsTickets","setTicketsArr","flightToUpdate","setFlightToUpdate","showUpdateDiv","setShowUpdateDiv","origionCountry","setOrigionCountry","destinationContry","setDestinationContry","departureTime","setDepartureTime","landingTime","setLandingTime","show","setShow","handleClose","flightsArr","flightsTicketsArr","sort","b","origionCountriesSelector","destinationCountriesSelector","designDate","date","part1","part2","replace","showCustomers","filter","getRow","index","RemainingTickets","showDiv","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","divUpdate","_departureTime","_landingTime","findIndex","ModalContent","Modal","onHide","Header","closeButton","Body","headline","NewFlightComp","now","setMinutes","getMinutes","getTimezoneOffset","currentTime","toISOString","slice","ticketsAmount","seTticketsAmount","min","ticketsNum","parseFloat","Number","isInteger","AirlineNavbar","MainAirlineComp","getWaitingAdmins","approveAdmin","admin","rejectAdmin","getWaitingAirlines","approveAirline","rejectAirline","getAllAirlines","deleteAirline","createNewAirline","GetAllCustomers","deleteCustomer","createNewCustomer","GetAllAdmins","updateAdmin","deleteAdmin","createNewAdmin","updateCountry","deleteCountry","countryId","createNewCountry","updateMyUser","AdminsInboxComp","admins","setAdmins","errorMessage","setErrorMessage","adminDAL","res","dataToDisplay","Level","color","AirlinesInboxComp","airlines","setAirlines","AirlinesComp","airlineToUpdate","setAirlineToUpdate","showCreateDiv","setShowCreateDiv","countryName","setCountryName","airlinesArr","airlinesToRender","_result","createDiv","createBtn","CustomersComp","customers","setCustomers","customerToUpdate","setCustomerToUpdate","customersArr","customersToRender","DetailsComp","setAdmin","notAllowed","setNotAllowed","getUserId","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","toString","join","mainUserId","adminsArr","_admin","find","AdminsComp","adminToUpdate","setAdminToUpdate","level","setLevel","adminsToRender","selected","CountriesComp","editedCountry","setEditedcountry","createdCountry","setCreatedCountry","countryDiv","class","disabled","countryToPresent","countryToUpdate","_country","countryToDelete","mainDiv","AdminNavbar","window","location","href","MainAdminComp","getAllAirlineCompanies","getAllFlights","getAllFlightsVacancy","getFlightsByDepatrureDate","getFlightsByLandingDate","getFlightsByDestinationCountry","getFlightsByOrigionCountry","FlightsComp","mainFligthsArr","setMainFligthsArr","showPurchaseDiv","setShowPurchaseDiv","selectedFlight","setSelectedFlight","flightsDAL","document","getElementById","airlinesSelector","getFlightsByAirlineCompany","showClass","popup","hideClass","showToPurchaseDiv","buyDiv","buyTicket","goBack","MainComp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"4SAAe,I,2DCCTA,EAAMC,aAAaC,QAAQ,OAyGlB,GAAEC,mBAvGO,uCAAG,4BAAAC,EAAA,+EAGJC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,mCACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATlB,cAGnBY,EAHmB,yBAYZA,GAZY,gCAcnBC,QAAQC,IAAR,MAdmB,yDAAH,qDAuGaC,eArFjB,uCAAG,WAAOC,EAAiBC,GAAxB,SAAAb,EAAA,+EAETC,IAAEC,KAAK,CACTC,KAAM,MACNC,IAAI,oDAAD,OAAsDQ,EAAtD,wBAAqFC,GACxFR,YAAa,mBACbE,QAAS,CACL,cAAiB,UAAYX,KAPtB,iCAUR,GAVQ,yDAYR,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAZ7B,wDAAH,wDAqFiCC,eArEjC,uCAAG,WAAOC,GAAP,SAAAlB,EAAA,+EAETC,IAAEC,KAAK,CACTE,IAAK,sCACLD,KAAM,MACNE,YAAa,mBACbc,KAAMD,EACNX,QAAS,CACL,cAAiB,UAAYX,KARtB,iCAWR,GAXQ,yDAaR,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb7B,wDAAH,sDAqEiDI,aApDnD,uCAAG,WAAOC,GAAP,SAAArB,EAAA,+EAEPC,IAAEC,KAAK,CACTC,KAAM,SACNC,IAAK,qCACLC,YAAa,mBACbc,KAAME,EACNd,QAAS,CACLe,cAAe,UAAY1B,KARtB,iCAWN,GAXM,0DAaN,GAbM,wDAAH,sDAoDiE2B,cAnChE,uCAAG,4BAAAvB,EAAA,+EAGCC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,sCACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATvB,cAGdY,EAHc,yBAYPA,GAZO,0DAcP,GAdO,yDAAH,qDAmC+EgB,eAjB9E,uCAAG,WAAOH,GAAP,SAAArB,EAAA,+EAETC,IAAEC,KAAK,CACTC,KAAM,OACNC,IAAK,+BACLC,YAAa,mBACbc,KAAME,EACNd,QAAS,CACLe,cAAe,UAAY1B,KARpB,iCAWR,GAXQ,yDAaR,KAAMkB,QAbE,wDAAH,uD,+BCoHLW,EAvMa,WACxB,IAAIC,EAAUC,cACd,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAgCZ,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAgCd,mBAAS,IAAzC,mBAAOf,EAAP,KAAiB8B,EAAjB,KACA,EAA8Bf,mBAAS,IAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAA8CnB,mBAAS,IAAvD,mBAAOhB,EAAP,KAAwBoC,EAAxB,KACA,EAA4BpB,mBAAS,IAArC,oBAAOqB,GAAP,MAAeC,GAAf,MAEAC,oBAAS,sBAAC,4BAAAnD,EAAA,6DACFoD,EAAW,KADT,SAEWC,EAAYtD,qBAFvB,OAGW,QADjBqD,EAFM,UAIFtB,EAAQsB,GACRpB,EAAaoB,EAASE,YACtBpB,EAAYkB,EAASG,WACrBnB,EAAWgB,EAASI,SACpBlB,EAAYc,EAASK,UACrBjB,EAAcY,EAASM,gBACvBR,GAAUE,EAASK,SAASE,MAAM,KAAK,SAClBC,GAAjBR,EAASS,OACTnB,EAAYU,EAASS,KAAKC,WAC1BnB,EAAYS,EAASS,KAAKE,UAC1BhB,EAASK,EAASS,KAAKG,OACvBhB,EAAmBI,EAASS,KAAKE,UACjClB,EAAWO,EAASS,KAAKE,YAhB3B,2CAmBP,IAEH,IAAM9C,GAAc,uCAAG,kCAAAjB,EAAA,6DAEfiE,EAAQ5B,EAAS6B,SAAS,KAAO7B,EAASsB,MAAM,KAAK,GAAKtB,EAC1DnB,EAAWiD,KAAKC,UAAU,CAC1BC,GAAIxC,EAAKwC,GACTf,WAAYvB,EACZwB,UAAWtB,EACXuB,QAASrB,EACTsB,SAAUR,GAAS,IAAMgB,EACzBP,eAAgBnB,EAChB+B,QAASzC,EAAKyC,QACdT,KAAM,CACFQ,GAAIxC,EAAKyC,QACTR,UAAWrB,EACXsB,SAAUlD,EACVmD,MAAOlB,EACPyB,UAAW,KAhBA,SAmBJlB,EAAYpC,eAAeC,GAnBvB,QAoBJ,KADfV,EAnBmB,QAqBfgE,IAAKC,KACD,6CACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,qBACbjD,EAAQiD,KAAK,yBAGK,MAAlBnE,EAAOM,SACH8D,EAAOpE,EAAOO,MAAM4C,MAAM,KAAK,GACnCa,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAKA,EAAL,yBAGU,MAAlBpE,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CA1CE,2CAAH,qDAgDdG,GAAa,uCAAG,8BAAA/E,EAAA,yDAGJ,MADVe,EAAQiE,MAFM,gBAIdR,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAK7D,KAPC,0BAUVH,IAAoBC,EAVV,iCAWKwC,EAAY1C,eAAeC,EAAiBC,GAXjD,QAYK,KADfL,EAXU,QAaNS,MAEsB,MAAlBT,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CACNF,MAAK,WACJhD,EAAQiD,KAAK,qBACbjD,EAAQiD,KAAK,wBAGC,MAAlBnE,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CACNF,MAAK,WACJhD,EAAQiD,KAAK,qBACbjD,EAAQiD,KAAK,yBAhCf,wBAqCV1D,KArCU,4CAAH,qDA0Cb+D,GAAkB,WACpB,OAAIvC,EAASwC,OAAS,EACX,yBAEHxC,EAASwC,OAAS,GACX,wBAGXpE,IAAa+B,EACN,4CAEP/B,EAASoE,OAAS,EACX,6BAEHpE,EAASoE,OAAS,GACX,4BAGXlD,EAAUkD,OAAS,EACZ,0BAEPhD,EAASgD,OAAS,EACX,yBAEP9C,EAAQ8C,OAAS,GACV,uBAE2B,IAAlC5C,EAASsB,MAAM,KAAK,GAAGsB,OAChB,qCAEe,KAAtB1C,EAAW0C,OACJ,6CAENnC,EAAMoB,SAAS,MAAQpB,EAAMmC,OAAS,EAChC,gCAEJ,IAGX,OAAQ,gCACJ,kDADI,IACsB,uBAC1B,sBAAMC,MAAO,CAAEC,WAAY,QAA3B,2BAFI,IAEsD,uBAAOhF,KAAK,OAAOiF,aAAcvD,EAAKyB,WAC5F+B,SAAU,SAACC,GAAQtD,EAAasD,EAAEC,OAAOC,UAHzC,IAGsD,uBAHtD,IAG6D,uBACjE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BAJI,IAIqD,uBAAOhF,KAAK,OAAOiF,aAAcvD,EAAK0B,UAC3F8B,SAAU,SAACC,GAAQpD,EAAYoD,EAAEC,OAAOC,UALxC,IAKqD,uBALrD,IAK4D,uBAChE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,wBANI,IAMmD,uBAAOhF,KAAK,OAAOiF,aAAcvD,EAAK2B,QACzF6B,SAAU,SAACC,GAAQlD,EAAWkD,EAAEC,OAAOC,UAPvC,IAOoD,uBAPpD,IAO2D,uBAC/D,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,6BACA,yBAAQM,GAAG,YAAYD,MAAOvC,GAAQoC,SAAU,SAACC,GAAD,OAAOpC,GAAUoC,EAAEC,OAAOC,QAA1E,UACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEJ,uBAAOrF,KAAK,OAAOiF,aAAc/C,EAASsB,MAAM,KAAK,GACjD0B,SAAU,SAACC,GAAQhD,EAAYgD,EAAEC,OAAOC,UAlBxC,IAkBqD,uBAlBrD,IAkB4D,uBAChE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,mCAnBI,IAmB8D,uBAAOhF,KAAK,OAAOiF,aAAcvD,EAAK6B,eACpG2B,SAAU,SAACC,GAAQ9C,EAAc8C,EAAEC,OAAOC,UApB1C,IAoBuD,uBApBvD,IAoB8D,uBAClE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BArBI,IAqBqD,uBAAOhF,KAAK,OAAOiF,aAAc3C,EACtF4C,SAAU,SAACC,GAAQ5C,EAAY4C,EAAEC,OAAOC,UAtBxC,IAsBqD,uBAtBrD,IAsB4D,uBAChE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,yBAvBI,IAuBoD,uBAAOhF,KAAK,OAAOiF,aAAcvE,EACrFwE,SAAU,SAACC,GAAQ3C,EAAY2C,EAAEC,OAAOC,UAxBxC,IAwBqD,uBAxBrD,IAwB4D,uBAChE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,iCAzBI,IAyB4D,uBAAOhF,KAAK,OAAOiF,aAAcxC,EAC7FyC,SAAU,SAACC,GAAQzC,EAAWyC,EAAEC,OAAOC,UA1BvC,IA0BoD,uBA1BpD,IA0B2D,uBAC/D,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBA3BI,IA2BiD,uBAAOhF,KAAK,QAAQiF,aAActC,EACnFuC,SAAU,SAACC,GAAQvC,EAASuC,EAAEC,OAAOC,UA5BrC,IA4BkD,uBA5BlD,IA4ByD,uBAC7D,uBAAOrF,KAAK,SAASqF,MAAM,OAAON,MAAO,CAAEQ,gBAAiB,aAAcC,OAAQ,OAAQC,MAAO,QAASC,SAAU,OAAQC,WAAY,0BACpIC,QAAShB,SC5INiB,EAvDY,SAACC,GACxB,IAAIC,EAASD,EAAMC,OACfxE,EAAUC,cAERP,EAAY,uCAAG,8BAAApB,EAAA,yDACbmG,EAAc,IAAIC,OACD,IAAIA,KAAKF,EAAOG,gBAClBC,UAAYH,EAAYG,WAH1B,wBAITjF,EAAS8C,KAAKC,UAAU,CACxBC,GAAI6B,EAAOK,UACXC,UAAWN,EAAO7B,GAClBoC,mBAAoBP,EAAOO,mBAC3BC,eAAgBR,EAAOQ,eACvBC,mBAAoBT,EAAOS,mBAC3BN,eAAgBH,EAAOG,eACvBO,aAAcV,EAAOU,eAXZ,SAaMvD,EAAYjC,aAAaC,GAb/B,QAcE,IAdF,OAeTmD,IAAKC,KACD,2CACA,8CACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,qBACbjD,EAAQiD,KAAK,wBAGjBH,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,mCACPF,KAAK,2CA3BA,wBA+BbJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,mCACPF,KAAK,qCAlCI,4CAAH,qDAuClB,OAAQ,sBAAKM,MAAO,CAAEQ,gBAAiB,aAAcmB,OAAQ,mBAArD,UACJ,sBAAM3B,MAAO,CAAEC,WAAY,QAA3B,wBADI,KACqDe,EAAOO,mBAD5D,IACiF,IACrF,sBAAMvB,MAAO,CAAEC,WAAY,QAA3B,+BAFI,IAE2De,EAAOG,eAAe1C,MAAM,KAAK,GAF5F,IAEiG,IACrG,sBAAMuB,MAAO,CAAEC,WAAY,QAA3B,gCAHI,KAG6De,EAAOQ,eAHpE,IAGqF,IACzF,sBAAMxB,MAAO,CAAEC,WAAY,QAA3B,+BAJI,KAI4De,EAAOG,eAAe1C,MAAM,KAAK,GAJ7F,IAIkG,IAJlG,IAIuG,uBAJvG,IAI8G,uBAClH,sBAAMuB,MAAO,CAAEC,WAAY,QAA3B,oCALI,KAKiEe,EAAOS,mBALxE,IAK6F,IACjG,sBAAMzB,MAAO,CAAEC,WAAY,QAA3B,6BANI,KAM0De,EAAOU,aAAajD,MAAM,KAAK,GANzF,IAM8F,IAClG,sBAAMuB,MAAO,CAAEC,WAAY,QAA3B,6BAPI,KAO0De,EAAOU,aAAajD,MAAM,KAAK,GAPzF,IAO8F,IAP9F,IAOmG,uBAPnG,IAO0G,uBAC9G,uBAAOxD,KAAK,SAAS+E,MAAO,CAAEQ,gBAAiB,UAAYF,MAAM,gBAAgBO,QAAS3E,QC3BnF0F,EA1Ba,WACxB,IAYIC,EAZJ,EAA8BnF,mBAAS,IAAvC,mBAAOoF,EAAP,KAAgBC,EAAhB,KAmBA,OAjBA9D,oBAAS,sBAAC,4BAAAnD,EAAA,sEACiBqD,EAAY9B,gBAD7B,QAEa,KADf2F,EADE,QAGFD,EAAWC,GAGXzG,QAAQC,IAAI,SANV,2CAQP,IAGoB,IAAnBsG,EAAQ/B,SACR8B,EAAkBC,EAAQG,KAAI,SAAAjB,GAC1B,OAAO,cAAC,EAAD,CAAoCA,OAAQA,GAAnBA,EAAOT,QAIvC,gCACJ,kEADI,IACsC,uBADtC,IAC6C,uBAChDsB,EAFG,KAEe,uBAFf,KAEuB,2B,uDCtB7BK,EAAaC,IAAOC,OAAV,4rGAqJVC,E,kDACJ,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXC,YAAY,GAHG,E,gDAOnB,SAAanC,GACXA,EAAEoC,iBACFC,KAAKC,SAAS,CACZH,YAAaE,KAAKH,MAAMC,e,oBAG5B,WAAU,IAAD,OACCA,EAAeE,KAAKH,MAApBC,WACR,OACE,cAACL,EAAD,UACE,sBAAKS,UAAU,MAAf,UACE,mBACEA,UAAU,aACV,cAAY,OACZ9B,QAAS,SAAAT,GAAC,OAAI,EAAKwC,aAAaxC,MAElC,qBAAIuC,UAAS,oBAAeJ,EAAa,cAAgB,IAAzD,UACE,cAAC,IAAD,CAASM,gBAAgB,SAASC,GAAG,oBAArC,SACE,2CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,oBAArC,SACE,2CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,WAArC,SACE,2CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,8BAArC,SACE,uD,GAnCeC,aA2CdC,cAAWX,GC1KXY,G,YAlBU,WACrB,IAAIzG,EAAUC,cAMd,OAJAwB,qBAAU,WACNzB,EAAQiD,KAAK,uBACd,IAEK,gCACJ,cAAC,EAAD,IACA,cAAC,IAAD,UACI,sBAAKkD,UAAU,YAAf,UACI,eAAC,IAAD,CAAOO,KAAK,oBAAZ,cAAiC,cAAC,EAAD,IAAjC,OACA,eAAC,IAAD,CAAOA,KAAK,oBAAZ,cAAiC,cAAC,EAAD,IAAjC,iBCnBVxI,EAAMC,aAAaC,QAAQ,OA2JlB,GACXuI,kBA1JmB,uCAAG,4BAAArI,EAAA,+EAGHC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,oCACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATnB,cAGlBY,EAHkB,yBAYXA,GAZW,gCAclBC,QAAQC,IAAR,MAdkB,yDAAH,qDA0JA4H,kBAxIA,uCAAG,4BAAAtI,EAAA,+EAGHC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,oCACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATnB,cAGlBY,EAHkB,yBAYXA,GAZW,gCAclBC,QAAQC,IAAR,MAdkB,yDAAH,qDAwImB6H,gBAtHrB,uCAAG,4BAAAvI,EAAA,+EAGEC,IAAEC,KAAK,CACrBC,KAAM,MACNC,IAAK,iCACLC,YAAa,qBAND,cAGhBmI,EAHgB,yBAQTA,GARS,gCAWhB/H,QAAQC,IAAR,MAXgB,yDAAH,qDAuHjB+H,aAxGc,uCAAG,WAAOvC,GAAP,SAAAlG,EAAA,+EAEPC,IAAEC,KAAK,CACTC,KAAM,MACNC,IAAK,4BACLC,YAAa,mBACbc,KAAM+E,EACN3F,QAAS,CACL,cAAiB,UAAYX,KARxB,iCAWN,GAXM,0DAaN,GAbM,wDAAH,sDAwGA8I,aAvFA,uCAAG,WAAOxC,GAAP,SAAAlG,EAAA,+EAEPC,IAAEC,KAAK,CACTC,KAAM,SACNC,IAAK,4BACLC,YAAa,mBACbc,KAAM+E,EACN3F,QAAS,CACLe,cAAe,UAAY1B,KARtB,iCAWN,GAXM,0DAaN,GAbM,wDAAH,sDAuFc+I,kBAtET,uCAAG,4BAAA3I,EAAA,+EAGHC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,iCACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATnB,cAGlBY,EAHkB,yBAYXA,GAZW,gCAclBC,QAAQC,IAAR,MAdkB,yDAAH,qDAsE4BkI,gBApD9B,uCAAG,WAAO1C,GAAP,SAAAlG,EAAA,+EAEVC,IAAEC,KAAK,CACTC,KAAM,OACNC,IAAK,+BACLC,YAAa,mBACbc,KAAM+E,EACN3F,QAAS,CACLe,cAAe,UAAY1B,KARnB,iCAWT,GAXS,0DAaT,GAbS,wDAAH,sDAqDjBe,eApCgB,uCAAG,WAAOC,EAAiBC,GAAxB,SAAAb,EAAA,+EAETC,IAAEC,KAAK,CACTC,KAAM,MACNC,IAAI,kDAAD,OAAoDQ,EAApD,wBAAmFC,GACtFR,YAAa,mBACbE,QAAS,CACL,cAAiB,UAAYX,KAPtB,iCAUR,GAVQ,yDAYR,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAZ7B,wDAAH,wDAoCA6H,cApBD,uCAAG,WAAOC,GAAP,SAAA9I,EAAA,+EAERC,IAAEC,KAAK,CACTE,IAAK,oCACLD,KAAM,MACNE,YAAa,mBACbc,KAAM2H,EACNvI,QAAS,CACL,cAAiB,UAAYX,KARvB,iCAWP,GAXO,yDAaP,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb9B,wDAAH,uDCoCJ+H,G,MAxKY,WACvB,IAAIrH,EAAUC,cACd,EAA8BC,mBAAS,IAAvC,mBAAOkH,EAAP,KAAgBE,EAAhB,KACA,EAAkCpH,mBAAS,IAA3C,mBAAO4G,EAAP,KAAkBS,EAAlB,KACA,EAAsCrH,mBAAS,IAA/C,mBAAOsH,EAAP,KAAoBC,EAApB,KACA,EAAgCvH,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAgCd,mBAAS,IAAzC,mBAAOf,EAAP,KAAiB8B,EAAjB,KACA,EAA8Bf,mBAAS,IAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAA8BnB,mBAAS,IAAvC,mBAAOwH,EAAP,KAAgBC,EAAhB,KACA,EAA8CzH,mBAAS,IAAvD,mBAAOhB,EAAP,KAAwBoC,EAAxB,KAEAG,oBAAS,sBAAC,8BAAAnD,EAAA,sEACcsJ,EAAWX,oBADzB,cACFG,EADE,OAENE,EAAWF,GACXO,EAAWP,EAAQS,cACnBJ,EAAeL,EAAQU,WACH5F,GAAhBkF,EAAQjF,OACRnB,EAAYoG,EAAQjF,KAAKC,WACzBnB,EAAYmG,EAAQjF,KAAKE,UACzBhB,EAAS+F,EAAQjF,KAAKG,OACtBhB,EAAmB8F,EAAQjF,KAAKE,UAChClB,EAAWiG,EAAQjF,KAAKE,WAVtB,SAYmBuF,EAAWf,kBAZ9B,OAYFkB,EAZE,OAaNR,EAAa9E,KAAKuF,MAAMD,IACxBE,YAAW,WACP1J,IAAE,8BAAD,OAA+B6I,EAAQS,aAAvC,MAAwDK,KAAK,YAAY,KAC3E,IAhBG,4CAiBP,IAEH,IAAIC,EAAoB,yBAAQpE,GAAG,YAAYJ,SAAU,SAACC,GAAD,OAAO+D,EAAW/D,EAAEC,OAAOC,QAA5D,UACnBgD,EAAUrB,KAAI,SAAA2C,GACX,OAAO,wBAAQtE,MAAOsE,EAAEN,KAAjB,SAAwBM,EAAEN,UAFjB,OAiClBX,EAAa,uCAAG,gCAAA7I,EAAA,6DAEd+J,EAAW5F,KAAKC,UAAU,CAC1BC,GAAIyE,EAAQzE,GACZmF,KAAMN,EACNK,aAAcH,EACd9E,QAASwE,EAAQxE,QACjBT,KAAM,CACFQ,GAAIyE,EAAQxE,QACZR,UAAWrB,EACXsB,SAAUlD,EACVmD,MAAOlB,EACPyB,UAAW,KAZD,SAeH+E,EAAWT,cAAckB,GAftB,QAgBH,KADfvJ,EAfkB,QAiBdgE,IAAKC,KACD,6CACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,oBACbjD,EAAQiD,KAAK,wBAGK,MAAlBnE,EAAOM,SACH8D,EAAOpE,EAAOO,MAAM4C,MAAM,KAAK,GACnCa,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAKA,EAAL,yBAGU,MAAlBpE,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CAtCC,2CAAH,qDA4CbG,EAAa,uCAAG,8BAAA/E,EAAA,yDAGJ,MADVe,EAxEA0B,EAASwC,OAAS,EACX,yBAEHxC,EAASwC,OAAS,GACX,wBAGXpE,IAAa+B,EACN,4CAEP/B,EAASoE,OAAS,EACX,6BAEHpE,EAASoE,OAAS,GACX,4BAGXiE,EAAYjE,OAAS,EACd,6BAENnC,EAAMoB,SAAS,MAAQpB,EAAMmC,OAAS,EAChC,gCAEJ,IA+CW,gBAIdT,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAK7D,KAPC,0BAUVH,IAAoBC,EAVV,iCAWKyI,EAAW3I,eAAeC,EAAiBC,GAXhD,QAYK,KADfL,EAXU,QAaNqI,KAEsB,MAAlBrI,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CACNF,MAAK,WACJhD,EAAQiD,KAAK,oBACbjD,EAAQiD,KAAK,uBAGC,MAAlBnE,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CACNF,MAAK,WACJhD,EAAQiD,KAAK,oBACbjD,EAAQiD,KAAK,wBAhCf,wBAqCVkE,IArCU,4CAAH,qDA0CnB,OAAQ,gCACJ,kDADI,IACsB,uBAC1B,sBAAM3D,MAAO,CAAEC,WAAY,QAA3B,6BAFI,IAEwD,uBAAOhF,KAAK,OAAOiF,aAAc0D,EAAQU,KACjGnE,SAAU,SAACC,GAAQ6D,EAAe7D,EAAEC,OAAOC,UAH3C,IAGwD,uBAHxD,IAG+D,uBACnE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,wBAJI,IAIoD0E,EAJpD,IAIuE,uBAJvE,IAI8E,uBAClF,sBAAM3E,MAAO,CAAEC,WAAY,QAA3B,0BALI,IAKqD,uBAAOhF,KAAK,OAAOiF,aAAc3C,EACtF4C,SAAU,SAACC,GAAQ5C,EAAY4C,EAAEC,OAAOC,UANxC,IAMqD,uBANrD,IAM4D,uBAChE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBAPI,IAOiD,uBAAOhF,KAAK,QAAQiF,aAActC,EACnFuC,SAAU,SAACC,GAAQvC,EAASuC,EAAEC,OAAOC,UARrC,IAQkD,uBARlD,IAQyD,uBAC7D,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,yBATI,IASoD,uBAAOhF,KAAK,OAAOiF,aAAcvE,EACrFwE,SAAU,SAACC,GAAQ3C,EAAY2C,EAAEC,OAAOC,UAVxC,IAUqD,uBAVrD,IAU4D,uBAChE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,iCAXI,IAW4D,uBAAOhF,KAAK,OAAOiF,aAAcxC,EAC7FyC,SAAU,SAACC,GAAQzC,EAAWyC,EAAEC,OAAOC,UAZvC,IAYoD,uBAZpD,IAY2D,uBAC/D,uBAAOrF,KAAK,SAASqF,MAAM,OAAON,MAAO,CAAES,OAAQ,OAAQC,MAAO,QAASC,SAAU,QACjFgC,UAAU,gCAAgC9B,QAAS,kBAAMhB,Y,gBCoGtDiF,EArQY,WACvB,IAAItI,EAAUC,cACd,EAA8BC,mBAAS,IAAvC,mBAAOqI,EAAP,KAAgBC,EAAhB,KACA,EAA4CtI,mBAAS,IAArD,mBAAOuI,EAAP,KAAuBC,EAAvB,KACA,EAAoCxI,mBAAS,IAA7C,mBAAOsF,EAAP,KAAmBmD,EAAnB,KACA,EAAkCzI,mBAAS,IAA3C,mBAAO4G,EAAP,KAAkBS,EAAlB,KACA,EAA4CrH,mBAAS,IAArD,mBAAO0I,EAAP,KAAuBC,EAAvB,KACA,EAA0C3I,oBAAS,GAAnD,mBAAO4I,EAAP,KAAsBC,EAAtB,KAEA,EAA4C7I,mBAAS,IAArD,mBAAO8I,EAAP,KAAuBC,EAAvB,KACA,EAAkD/I,mBAAS,IAA3D,mBAAOgJ,EAAP,KAA0BC,EAA1B,KACA,EAA0CjJ,mBAAS,IAAnD,mBAAOkJ,EAAP,KAAsBC,EAAtB,KACA,EAAsCnJ,mBAAS,IAA/C,mBAAOoJ,EAAP,KAAoBC,EAApB,KAEA,EAAwBrJ,oBAAS,GAAjC,mBAAOsJ,EAAP,KAAaC,GAAb,KACMC,GAAc,kBAAMD,IAAQ,IAGlChI,oBAAS,sBAAC,gCAAAnD,EAAA,sEACiBsJ,EAAWjB,oBAD5B,cACFgD,EADE,OAENnB,EAAWmB,GAFL,SAGwB/B,EAAWhB,oBAHnC,cAGFgD,EAHE,OAINlB,EAAkBkB,GAJZ,UAKmBhC,EAAWf,kBAL9B,QAKFkB,EALE,OAMNR,EAAa9E,KAAKuF,MAAMD,IANlB,4CAOP,IAEHtG,qBAAU,WACNwG,YAAW,WACP1J,IAAE,mCAAD,OAAoCqK,EAAe5D,eAAnD,MAAsEkD,KAAK,YAAY,GACxF3J,IAAE,uCAAD,OAAwCqK,EAAe3D,mBAAvD,MAA8EiD,KAAK,YAAY,KACjG,MACJ,CAACU,IAEAL,GACAA,EAAQsB,MAAK,SAACvL,EAAGwL,GAAJ,OAAWxL,EAAEqE,GAAKmH,EAAEnH,GAAM,EAAKrE,EAAEqE,GAAKmH,EAAEnH,IAAO,EAAI,KAGpE,IAsFI0C,GAtFA0E,GAA2B,yBAAQhG,GAAG,iBAAiBJ,SAAU,SAACC,GAAD,OAAOqF,EAAkBrF,EAAEC,OAAOC,QAAxE,UAC1BgD,EAAUrB,KAAI,SAAA2C,GACX,OAAO,wBAAQtE,MAAOsE,EAAEN,KAAjB,SAAwBM,EAAEN,UAFV,OAI3BkC,GAA+B,yBAAQjG,GAAG,qBAAqBJ,SAAU,SAACC,GAAD,OAAOuF,EAAqBvF,EAAEC,OAAOC,QAA/E,UAC9BgD,EAAUrB,KAAI,SAAA2C,GACX,OAAO,wBAAQtE,MAAOsE,EAAEN,KAAjB,SAAwBM,EAAEN,UAFN,OAK7BmC,GAAa,SAACC,GAChB,IAAIC,EAAQD,EAAKjI,MAAM,KAAK,GACxBmI,EAAQF,EAAKjI,MAAM,KAAK,GAG5B,OADAiI,GADAA,EAAOC,EAAQ,IAAMC,GACTC,QAAQ,IAAK,MAGvBC,GAAgB,SAACvG,GACnB,IAAIyB,EAAaiD,EAAe8B,QAAO,SAAA5K,GAAM,OAAIA,EAAOmF,WAAaf,KACrE4E,EAAcnD,GAxCOiE,IAAQ,IA+F3Be,GAAS,SAAChG,EAAQiG,GACpB,OAAO,qBAAItE,UAAU,YAAd,UACH,oBAAI9B,QAAS,kBAAMiG,GAAc9F,EAAO7B,KAAxC,SAA8C6B,EAAO7B,KACrD,6BAAK6B,EAAOQ,iBACZ,6BAAKR,EAAOS,qBACZ,6BAAKgF,GAAWzF,EAAOG,kBACvB,6BAAKsF,GAAWzF,EAAOU,gBACvB,6BAAKV,EAAOkG,mBACZ,6BAAI,uBAAOjM,KAAK,SAAS4F,QAAS,YA3D1B,SAACG,GACbqE,EAAkBrE,GAClByE,EAAkBzE,EAAOQ,gBACzBmE,EAAqB3E,EAAOS,oBAC5BoE,EAAiB7E,EAAOG,gBACxB4E,EAAe/E,EAAOU,cACtB6D,GAAiB,GAqD6B4B,CAAQnG,IAAW2B,UAAU,gCAAgCrC,MAAM,WAC7G,6BAAI,uBAAOrF,KAAK,SAAS4F,QAAS,YAnDrB,SAACG,GAClB,IAAIC,EAAc,IAAIC,KACD,IAAIA,KAAKF,EAAOG,gBAClBC,UAAYH,EAAYG,UACvC9B,IAAKC,KAAK,CACNK,MAAO,+CACPF,KAAM,mDACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOlE,GAAP,SAAAR,EAAA,0DACAQ,EAAOkM,YADP,gCAEgBpD,EAAWZ,aAAavE,KAAKC,UAAU8B,IAFvD,cAII1B,IAAKC,KACD,uCACA,kDACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,oBACbjD,EAAQiD,KAAK,uBAGjBH,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,4BAhBd,2CARR,uDA8BAJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAK,qCAciC8D,CAAaxC,IAAW2B,UAAU,gCAAgCrC,MAAM,eARhF2G,IAatClC,IACAlD,GAAkB,wBAAOtB,GAAG,aAAaoB,OAAO,IAA9B,UAEd,gCACI,+BACI,oCACA,iDACA,qDACA,gDACA,8CACA,mDACA,sCACA,6CAGR,gCACKoD,EAAQ9C,KAAI,SAACjB,EAAQiG,GAClB,OAAOD,GAAOhG,EAAQiG,YAMtC,IAsDIQ,GACArC,IAAmB,KACnBqC,GACI,qCAAO,uBACH,sBAAMzH,MAAO,CAAEC,WAAY,QAA3B,mBADJ,IACuDmF,EAAejG,GADtE,IAC0E,uBAD1E,IACiF,uBAC7E,sBAAMa,MAAO,CAAEC,WAAY,QAA3B,qCAFJ,IAEyEmF,EAAe7D,mBAFxF,IAE4G,uBAF5G,IAEmH,uBAC/G,sBAAMvB,MAAO,CAAEC,WAAY,QAA3B,gCAHJ,IAGoEsG,GAHpE,IAG8F,uBAH9F,IAGqG,uBACjG,sBAAMvG,MAAO,CAAEC,WAAY,QAA3B,oCAJJ,IAIwEuG,GAJxE,IAIsG,uBAJtG,IAI6G,uBACzG,sBAAMxG,MAAO,CAAEC,WAAY,QAA3B,+BALJ,IAKkE,uBAAOhF,KAAK,iBACtEkF,SAAU,SAACC,GAAD,OAAOyF,EAAiBzF,EAAEC,OAAOC,QAAQJ,aAAckF,EAAejE,iBANxF,IAM2G,uBAN3G,IAMkH,uBAC9G,sBAAMnB,MAAO,CAAEC,WAAY,QAA3B,6BAPJ,IAOgE,uBAAOhF,KAAK,iBACpEkF,SAAU,SAACC,GAAD,OAAO2F,EAAe3F,EAAEC,OAAOC,QAAQJ,aAAckF,EAAe1D,eARtF,IAQuG,uBARvG,IAQ8G,uBAC1G,sBAAM1B,MAAO,CAAEC,WAAY,QAA3B,kCATJ,IASsEmF,EAAe8B,iBATrF,IASuG,uBATvG,IAS8G,uBAC1G,uBAAOjM,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,WAAQ0E,GAAiB,MAV7I,IAU2J,IACvJ,uBAAOtK,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBApExG,WACjB,IAAI6G,EAAiB,IAAIxG,KAAK0E,GAC1B+B,EAAe,IAAIzG,KAAK4E,GAC5B,GAAI4B,EAAetG,UAAYuG,EAAavG,UACxC9B,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,mDAEP,CACH,IAAIsB,EAAS/B,KAAKC,UAAU,CACxBC,GAAIiG,EAAejG,GACnBoC,mBAAoB6D,EAAe7D,mBACnCC,eAAgBgE,EAChB/D,mBAAoBiE,EACpBvE,eAAgByE,EAChBlE,aAAcoE,EACdoB,iBAAkB9B,EAAe8B,mBAErC5H,IAAKC,KAAK,CACNK,MAAO,+BACPF,KAAM,6CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,yBACpB/H,KARH,uCAQQ,WAAOlE,GAAP,SAAAR,EAAA,0DACAQ,EAAOkM,YADP,gCAEgBpD,EAAWb,aAAavC,GAFxC,QAGY,IAHZ,OAII1B,IAAKC,KACD,+CACA,gDACA,WACFC,MAAK,WACH,IAAI2G,EAAapB,EACbkC,EAAQd,EAAWyB,WAAU,SAAA5G,GAAM,OAAIA,EAAO7B,KAAOiG,EAAejG,MACxEgH,EAAWc,GAAShI,KAAKuF,MAAMxD,GAC/BgE,EAAWmB,GACXZ,GAAiB,MAGrBjG,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,oCAnBd,2CARR,wDAiD2H6D,UAKnI,IAAMsE,GAAe,WACjB,OACI,eAACC,EAAA,EAAD,CAAO9B,KAAMA,EAAM+B,OAAQ7B,GAA3B,UACI,cAAC4B,EAAA,EAAME,OAAP,CAAcC,aAAW,IAEzB,cAACH,EAAA,EAAMI,KAAP,UACI,wBAAOvG,OAAO,IAAd,UACI,gCACI,+BACI,oCACA,4CACA,2CACA,yCACA,4CAGR,gCACKK,EAAWC,KAAI,SAAC9F,EAAQ8K,GACrB,OAAO,+BACH,6BAAK9K,EAAOgD,KACZ,6BAAKhD,EAAOiC,aACZ,6BAAKjC,EAAOkC,YACZ,6BAAKlC,EAAOmC,UACZ,6BAAKnC,EAAOoC,aALA0I,iBAcxCkB,GAAWnC,EAAO,sBAAyBV,EAAgB,gBAAkB,UAEjF,OAAQ,gCACJ,6BAAK6C,KACJnC,EAAO,cAAC6B,GAAD,IAAmBvC,EAAgBmC,GAAY5F,OC1JhDuG,EA3GO,WAClB,IAAI5L,EAAUC,cACV4L,EAAM,IAAInH,KACdmH,EAAIC,WAAWD,EAAIE,aAAeF,EAAIG,qBACtC,IAAIC,EAAcJ,EAAIK,cAAcC,MAAM,EAAG,IAE7C,EAAsCjM,mBAAS,IAA/C,mBAAOsH,EAAP,KAAoBC,EAApB,KACA,EAAkCvH,mBAAS,IAA3C,mBAAO4G,EAAP,KAAkBS,EAAlB,KACA,EAA4CrH,mBAAS,IAArD,mBAAO8I,EAAP,KAAuBC,EAAvB,KACA,EAAkD/I,mBAAS,IAA3D,mBAAOgJ,EAAP,KAA0BC,EAA1B,KACA,EAA0CjJ,mBAAS+L,GAAnD,mBAAO7C,EAAP,KAAsBC,EAAtB,KACA,EAAsCnJ,mBAAS+L,GAA/C,mBAAO3C,EAAP,KAAoBC,EAApB,KACA,EAA0CrJ,mBAAS,GAAnD,mBAAOkM,EAAP,KAAsBC,EAAtB,KAEA5K,oBAAS,sBAAC,8BAAAnD,EAAA,sEACcsJ,EAAWX,oBADzB,cACFG,EADE,OAENK,EAAeL,EAAQU,MAFjB,SAGmBF,EAAWf,kBAH9B,OAGFkB,EAHE,OAINkB,EAAkBxG,KAAKuF,MAAMD,GAAc,GAAGD,MAC9CqB,EAAqB1G,KAAKuF,MAAMD,GAAc,GAAGD,MACjDP,EAAa9E,KAAKuF,MAAMD,IANlB,4CAOP,IAEH,IAAIgC,EAA2B,yBAAQhG,GAAG,iBAAiBJ,SAAU,SAACC,GAAD,OAAOqF,EAAkBrF,EAAEC,OAAOC,QAAxE,UAC1BgD,EAAUrB,KAAI,SAAA2C,GACX,OAAO,wBAAQtE,MAAOsE,EAAEN,KAAjB,SAAwBM,EAAEN,UAFV,OAI3BkC,EAA+B,yBAAQjG,GAAG,qBAAqBJ,SAAU,SAACC,GAAD,OAAOuF,EAAqBvF,EAAEC,OAAOC,QAA/E,UAC9BgD,EAAUrB,KAAI,SAAA2C,GACX,OAAO,wBAAQtE,MAAOsE,EAAEN,KAAjB,SAAwBM,EAAEN,UAFN,OAiEnC,OAAQ,gCACJ,mDADI,IACuB,uBAC3B,sBAAMtE,MAAO,CAAEC,WAAY,QAA3B,qCAFI,IAEiE+D,EAFjE,IAE8E,uBAF9E,IAEqF,uBACzF,sBAAMhE,MAAO,CAAEC,WAAY,QAA3B,gCAHI,IAG4DsG,EAH5D,IAGsF,uBAHtF,IAG6F,uBACjG,sBAAMvG,MAAO,CAAEC,WAAY,QAA3B,oCAJI,IAIgEuG,EAJhE,IAI8F,uBAJ9F,IAIqG,uBACzG,sBAAMxG,MAAO,CAAEC,WAAY,QAA3B,+BALI,IAK0D,uBAAOhF,KAAK,iBAAiB6N,IAAKL,EAAavI,aAAcuI,EACvHtI,SAAU,SAACC,GAAD,OAAOyF,EAAiBzF,EAAEC,OAAOC,UAN3C,IAMsD,uBANtD,IAM6D,uBACjE,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,6BAPI,IAOwD,uBAAOhF,KAAK,iBAAiB6N,IAAKL,EAAavI,aAAcuI,EACrHtI,SAAU,SAACC,GAAD,OAAO2F,EAAe3F,EAAEC,OAAOC,UARzC,IAQoD,uBARpD,IAQ2D,uBAC/D,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,+BACA,uBAAOD,MAAO,CAAEU,MAAO,QAAUzF,KAAK,SAAS6N,IAAI,IAAI5I,aAAa,IAAIC,SAAU,SAACC,GAAD,OAAOyI,EAAiBzI,EAAEC,OAAOC,UAV/G,IAU0H,uBAV1H,IAUiI,uBACrI,uBAAOrF,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBAvE7F,WACpB,IAAIkI,EAAaC,WAAWJ,GAC5B,GAAIA,EAAgB,GAAuB,KAAlBA,IAAyBK,OAAOC,UAAUH,GAC/DzJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,wBACPF,KAAM,iDAGT,CACD,IAAIgI,EAAiB,IAAIxG,KAAK0E,GAC1B+B,EAAe,IAAIzG,KAAK4E,GAC5B,GAAI4B,EAAetG,UAAYuG,EAAavG,UACxC9B,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,mDAEP,CACH,IAAIsB,EAAS/B,KAAKC,UAAU,CACxBqC,mBAAoByC,EACpBxC,eAAgBgE,EAChB/D,mBAAoBiE,EACpBvE,eAAgByE,EAChBlE,aAAcoE,EACdoB,iBAAkB0B,IAEtBtJ,IAAKC,KAAK,CACNK,MAAO,+CACPF,KAAM,uDACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOlE,GAAP,SAAAR,EAAA,0DACAQ,EAAOkM,YADP,gCAEgBpD,EAAWV,gBAAgB1C,GAF3C,cAII1B,IAAKC,KACD,sCACA,0CACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,oBACbjD,EAAQiD,KAAK,yBAGjBH,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,4BAhBd,2CARR,yDA4C+GgE,UCzGzHxB,EAAaC,IAAOC,OAAV,4rGAqJV+G,E,kDACJ,WAAYpI,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXC,YAAY,GAHG,E,gDAOnB,SAAanC,GACXA,EAAEoC,iBACFC,KAAKC,SAAS,CACZH,YAAaE,KAAKH,MAAMC,e,oBAG5B,WAAU,IAAD,OACCA,EAAeE,KAAKH,MAApBC,WACR,OACE,cAAC,EAAD,UACE,sBAAKI,UAAU,MAAf,UACE,mBACEA,UAAU,aACV,cAAY,OACZ9B,QAAS,SAAAT,GAAC,OAAI,EAAKwC,aAAaxC,MAElC,qBAAIuC,UAAS,oBAAeJ,EAAa,cAAgB,IAAzD,UACE,cAAC,IAAD,CAASM,gBAAgB,SAASC,GAAG,mBAArC,SACE,8CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,mBAArC,SACE,2CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,qBAArC,SACE,8CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,WAArC,SACE,+CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,8BAArC,SACE,uD,GAtCcC,aA8CbC,cAAWmG,GC3KXC,EAnBS,WACpB,IAAI5M,EAAUC,cAMd,OAJAwB,qBAAU,WACNzB,EAAQiD,KAAK,sBACd,IAEK,gCACJ,cAAC,EAAD,IACA,cAAC,IAAD,UACI,sBAAKkD,UAAU,YAAf,UACI,eAAC,IAAD,CAAOO,KAAK,mBAAZ,cAAgC,cAAC,EAAD,IAAhC,OACA,eAAC,IAAD,CAAOA,KAAK,mBAAZ,cAAgC,cAAC,EAAD,IAAhC,OACA,eAAC,IAAD,CAAOA,KAAK,qBAAZ,cAAkC,cAAC,EAAD,IAAlC,gBCrBVxI,EAAMC,aAAaC,QAAQ,OA6YlB,GACXyO,iBA5YkB,uCAAG,4BAAAvO,EAAA,+EAGFC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,yCACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATpB,cAGjBY,EAHiB,yBAYVA,GAZU,yDAcV,KAAMM,QAdI,yDAAH,qDA4YA0N,aA1XJ,uCAAG,WAAOC,GAAP,SAAAzO,EAAA,+EAGEC,IAAEC,KAAK,CAClBC,KAAM,OACNC,IAAK,kCACLC,YAAa,mBACbc,KAAMsN,EACNlO,QAAS,CACL,cAAiB,UAAYX,KATxB,wCAYN,GAZM,sCAcP,KAAMkB,OAdC,yDAAH,sDA0XkB4N,YAxWnB,uCAAG,WAAOD,GAAP,SAAAzO,EAAA,+EAENC,IAAEC,KAAK,CACTC,KAAM,SACNC,IAAK,iCACLC,YAAa,mBACbc,KAAMsN,EACNlO,QAAS,CACL,cAAiB,UAAYX,KARzB,iCAWL,GAXK,sCAaN,KAAMkB,OAbA,wDAAH,sDAwWgC6N,mBAvVzB,uCAAG,4BAAA3O,EAAA,+EAGJC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,2CACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATlB,cAGnBY,EAHmB,yBAYZA,GAZY,yDAcZ,KAAMM,QAdM,yDAAH,qDAuV6C8N,eArUjD,uCAAG,WAAO9F,GAAP,SAAA9I,EAAA,+EAETC,IAAEC,KAAK,CACTC,KAAM,OACNC,IAAK,oCACLC,YAAa,mBACbc,KAAM2H,EACNvI,QAAS,CACL,cAAiB,UAAYX,KARtB,iCAWR,GAXQ,sCAaT,KAAMkB,OAbG,wDAAH,sDAqUiE+N,cApTlE,uCAAG,WAAO/F,GAAP,SAAA9I,EAAA,+EAERC,IAAEC,KAAK,CACTC,KAAM,SACNC,IAAK,mCACLC,YAAa,mBACbc,KAAM2H,EACNvI,QAAS,CACL,cAAiB,UAAYX,KARvB,iCAWP,GAXO,sCAaR,KAAMkB,OAbE,wDAAH,sDAqTfgO,eApSgB,uCAAG,4BAAA9O,EAAA,+EAGAC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,oCACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATtB,cAGfY,EAHe,yBAYRA,GAZQ,gCAcfC,QAAQC,IAAR,MAde,yDAAH,qDAoSAmI,cAlRD,uCAAG,WAAOC,GAAP,SAAA9I,EAAA,+EAERC,IAAEC,KAAK,CACTE,IAAK,0CACLD,KAAM,MACNE,YAAa,mBACbc,KAAM2H,EACNvI,QAAS,CACL,cAAiB,UAAYX,KARvB,iCAWP,GAXO,yDAaP,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb9B,wDAAH,sDAkRgB+N,cAjQhB,uCAAG,WAAOjG,GAAP,SAAA9I,EAAA,+EAERC,IAAEC,KAAK,CACTC,KAAM,SACNC,IAAK,mCACLC,YAAa,mBACbc,KAAM2H,EACNvI,QAAS,CACLe,cAAe,UAAY1B,KARrB,iCAWP,GAXO,yDAaP,KAAMkB,QAbC,wDAAH,sDAiQ+BkO,iBAhP5B,uCAAG,WAAOlG,GAAP,SAAA9I,EAAA,+EAEXC,IAAEC,KAAK,CACTC,KAAM,OACNC,IAAK,0CACLC,YAAa,mBACbc,KAAM2H,EACNvI,QAAS,CACLe,cAAe,UAAY1B,KARlB,iCAWV,GAXU,yDAaV,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb3B,wDAAH,sDAgP8CiO,gBA/N/C,uCAAG,4BAAAjP,EAAA,+EAGDC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,qCACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATrB,cAGhBY,EAHgB,yBAYTA,GAZS,gCAchBC,QAAQC,IAAR,MAdgB,yDAAH,qDA+NgEO,eA7MjE,uCAAG,WAAOC,GAAP,SAAAlB,EAAA,+EAETC,IAAEC,KAAK,CACTE,IAAK,2CACLD,KAAM,MACNE,YAAa,mBACbc,KAAMD,EACNX,QAAS,CACL,cAAiB,UAAYX,KARtB,iCAWR,GAXQ,yDAaR,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb7B,wDAAH,sDA8MhBkO,eA7LgB,uCAAG,WAAOhO,GAAP,SAAAlB,EAAA,+EAETC,IAAEC,KAAK,CACTC,KAAM,SACNC,IAAK,oCACLC,YAAa,mBACbc,KAAMD,EACNX,QAAS,CACLe,cAAe,UAAY1B,KARpB,iCAWR,GAXQ,yDAaR,KAAMkB,QAbE,wDAAH,sDA6LAqO,kBA5KG,uCAAG,WAAOjO,GAAP,SAAAlB,EAAA,+EAEZC,IAAEC,KAAK,CACTC,KAAM,OACNC,IAAK,oCACLC,YAAa,mBACbc,KAAMD,EACNX,QAAS,CACLe,cAAe,UAAY1B,KARjB,iCAWX,GAXW,yDAaX,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb1B,wDAAH,sDA4KgBoO,aA3JrB,uCAAG,4BAAApP,EAAA,+EAGEC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,kCACLC,YAAa,mBACbC,SAAU,OACVC,QAAS,CACL,cAAiB,UAAYX,KATxB,cAGbY,EAHa,yBAYNA,GAZM,gCAcbC,QAAQC,IAAR,MAda,yDAAH,qDA2JmC2O,YAzIpC,uCAAG,WAAOZ,GAAP,SAAAzO,EAAA,+EAENC,IAAEC,KAAK,CACTE,IAAK,iCACLD,KAAM,MACNE,YAAa,mBACbc,KAAMsN,EACNlO,QAAS,CACL,cAAiB,UAAYX,KARzB,iCAWL,GAXK,yDAaL,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAbhC,wDAAH,sDAyIiDsO,YAxHjD,uCAAG,WAAOb,GAAP,SAAAzO,EAAA,+EAENC,IAAEC,KAAK,CACTE,IAAK,iCACLD,KAAM,SACNE,YAAa,mBACbc,KAAMsN,EACNlO,QAAS,CACLe,cAAe,UAAY1B,KARvB,iCAWL,GAXK,yDAaL,KAAMkB,QAbD,wDAAH,sDAwH8DyO,eAvG3D,uCAAG,WAAOd,GAAP,SAAAzO,EAAA,+EAETC,IAAEC,KAAK,CACTC,KAAM,OACNC,IAAK,iCACLC,YAAa,mBACbc,KAAMsN,EACNlO,QAAS,CACLe,cAAe,UAAY1B,KARpB,iCAWR,GAXQ,yDAaR,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb7B,wDAAH,sDAwGhBwO,cAvFe,uCAAG,WAAOpG,GAAP,SAAApJ,EAAA,+EAERC,IAAEC,KAAK,CACTE,IAAK,mCACLD,KAAM,MACNE,YAAa,mBACbc,KAAMiI,EACN7I,QAAS,CACL,cAAiB,UAAYX,KARvB,iCAWP,GAXO,yDAaP,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb9B,wDAAH,sDAuFAyO,cAtEA,uCAAG,WAAOC,GAAP,SAAA1P,EAAA,+EAERC,IAAEC,KAAK,CACTC,KAAM,SACNC,IAAI,8CAAD,OAAgDsP,GACnDrP,YAAa,mBACbE,QAAS,CACLe,cAAe,UAAY1B,KAPrB,iCAUP,GAVO,yDAYP,KAAMkB,QAZC,wDAAH,sDAsEe6O,iBAtDZ,uCAAG,WAAOvG,GAAP,SAAApJ,EAAA,+EAEXC,IAAEC,KAAK,CACTC,KAAM,OACNC,IAAK,mCACLC,YAAa,mBACbc,KAAMiI,EACN7I,QAAS,CACLe,cAAe,UAAY1B,KARlB,iCAWV,GAXU,yDAaV,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb3B,wDAAH,sDAsD8BL,eArChC,uCAAG,WAAOC,EAAiBC,GAAxB,SAAAb,EAAA,+EAETC,IAAEC,KAAK,CACTC,KAAM,MACNC,IAAI,kDAAD,OAAoDQ,EAApD,wBAAmFC,GACtFR,YAAa,mBACbE,QAAS,CACL,cAAiB,UAAYX,KAPtB,iCAUR,GAVQ,yDAYR,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAZ7B,wDAAH,wDAqCgD4O,aArBlD,uCAAG,WAAOnB,GAAP,SAAAzO,EAAA,+EAEPC,IAAEC,KAAK,CACTE,IAAK,qCACLD,KAAM,MACNE,YAAa,mBACbc,KAAMsN,EACNlO,QAAS,CACL,cAAiB,UAAYX,KARxB,iCAWN,GAXM,yDAaN,CAAEkB,OAAQ,KAAMA,OAAQC,MAAO,KAAMC,eAb/B,wDAAH,uDC1OH6O,EA7IS,WACpB,IAAInO,EAAUC,cACd,EAA4BC,mBAAS,IAArC,mBAAOkO,EAAP,KAAeC,EAAf,KACA,EAAwCnO,mBAAS,IAAjD,mBAAOoO,EAAP,KAAqBC,EAArB,KAEA9M,oBAAS,sBAAC,4BAAAnD,EAAA,sEACUkQ,EAAS3B,mBADnB,OAEc,iBADhB4B,EADE,QAGFJ,EAAUI,GAIVF,EAFkB,MAARE,EAAc,8CACpB,gDANF,2CASP,IAEH,IA8FIC,EAdElE,EAAS,SAACuC,EAAOtC,GACnB,OAAO,qBAAItE,UAAU,YAAd,UACH,6BAAK4G,EAAMnL,aACX,6BAAKmL,EAAMlL,YACX,6BAAKkL,EAAM4B,QACX,6BAAK5B,EAAM5K,KAAKC,YAChB,6BAAK2K,EAAM5K,KAAKE,WAChB,6BAAK0K,EAAM5K,KAAKG,QAChB,6BAAI,uBAAO7D,KAAK,SAAS4F,QAAS,YAxFrB,SAAC0I,GAClBjK,IAAKC,KAAK,CACNK,MAAO,gBACPF,KAAM,wCACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,0BACpB/H,KARH,uCAQQ,WAAOlE,GAAP,SAAAR,EAAA,0DACAQ,EAAOkM,YADP,0CAGUwD,EAAS1B,aAAarK,KAAKC,UAAUqK,IAH/C,OAIIjK,IAAKC,KACD,iCACA,wCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,yBAVrB,gDAakB,KAAV,KACAH,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAM,wCAGVJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,4BAvBlB,yDARR,uDAuF8C4J,CAAaC,IAAUvJ,MAAO,CAAEU,MAAO,QAC7EiC,UAAU,gCAAgCrC,MAAM,aACpD,6BAAI,uBAAOrF,KAAK,SAAS4F,QAAS,YAlDtB,SAAC0I,GACjBjK,IAAKC,KAAK,CACNK,MAAO,gBACPF,KAAM,+BACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,0BACpB/H,KARH,uCAQQ,WAAOlE,GAAP,SAAAR,EAAA,0DACAQ,EAAOkM,YADP,0CAGUwD,EAASxB,YAAYvK,KAAKC,UAAUqK,IAH9C,OAIIjK,IAAKC,KACD,iCACA,sBACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,yBAVrB,gDAakB,KAAV,KACAH,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAM,wCAGVJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,2BAvBlB,yDARR,uDAiD8C8J,CAAYD,IAAU5G,UAAU,0BAA0BrC,MAAM,eATxE2G,IAsC1C,OAvBIiE,EADAN,GAA2B,KAAjBE,EACM,wBAAOnJ,OAAO,IAAd,UACZ,gCACI,+BACI,4CACA,2CACA,uCACA,2CACA,0CACA,uCACA,wCACA,6CAGR,gCACKiJ,EAAO3I,KAAI,SAACsH,EAAOtC,GAChB,OAAOD,EAAOuC,EAAOtC,WAKjB,oBAAIjH,MAAO,CAAEoL,MAAO,OAApB,SAA8BN,IAG1C,gCACc,KAAjBA,GAAuB,8CACvBI,MCEMG,EA3IW,WACtB,IAAI7O,EAAUC,cACd,EAAgCC,mBAAS,IAAzC,mBAAO4O,EAAP,KAAiBC,EAAjB,KACA,EAAwC7O,mBAAS,IAAjD,mBAAOoO,EAAP,KAAqBC,EAArB,KAEA9M,oBAAS,sBAAC,4BAAAnD,EAAA,sEACUkQ,EAASvB,qBADnB,OAEc,iBADhBwB,EADE,QAGFM,EAAYN,GAIZF,EAFkB,MAARE,EAAc,gDACpB,kDANF,2CASP,IAEH,IA6FIC,EAbElE,EAAS,SAACpD,EAASqD,GACrB,OAAO,qBAAItE,UAAU,YAAd,UACH,6BAAKiB,EAAQU,OACb,6BAAKV,EAAQS,eACb,6BAAKT,EAAQjF,KAAKC,YAClB,6BAAKgF,EAAQjF,KAAKE,WAClB,6BAAK+E,EAAQjF,KAAKG,QAClB,6BAAI,uBAAO7D,KAAK,SAAS4F,QAAS,YAvFnB,SAAC+C,GACpBtE,IAAKC,KAAK,CACNK,MAAO,gBACPF,KAAM,8CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oCACpB/H,KARH,uCAQQ,WAAOlE,GAAP,SAAAR,EAAA,0DACAQ,EAAOkM,YADP,0CAGUwD,EAAStB,eAAezK,KAAKC,UAAU0E,IAHjD,OAIItE,IAAKC,KACD,mCACA,0CACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,2BAVrB,gDAakB,KAAV,KACAH,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAM,0CAGVJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,8BAvBlB,yDARR,uDAsF8CgK,CAAe9F,IAAY5D,MAAO,CAAEU,MAAO,QACjFiC,UAAU,gCAAgCrC,MAAM,aACpD,6BAAI,uBAAOrF,KAAK,SAAS4F,QAAS,YAjDpB,SAAC+C,GACnBtE,IAAKC,KAAK,CACNK,MAAO,gBACPF,KAAM,+BACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,4BACpB/H,KARH,uCAQQ,WAAOlE,GAAP,SAAAR,EAAA,0DACAQ,EAAOkM,YADP,0CAGUwD,EAASrB,cAAc1K,KAAKC,UAAU0E,IAHhD,OAIItE,IAAKC,KACD,mCACA,sBACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,2BAVrB,gDAakB,KAAV,KACAH,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAM,0CAGVJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,6BAvBlB,yDARR,uDAgD8CiK,CAAc/F,IAAYjB,UAAU,0BAA0BrC,MAAM,eAR5E2G,IAoC1C,OAtBIiE,EADAI,GAA6B,KAAjBR,EACI,wBAAOnJ,OAAO,IAAd,UACZ,gCACI,+BACI,8CACA,yCACA,2CACA,0CACA,uCACA,wCACA,6CAGR,gCACK2J,EAASrJ,KAAI,SAAC2B,EAASqD,GACpB,OAAOD,EAAOpD,EAASqD,WAKnB,oBAAIjH,MAAO,CAAEoL,MAAO,OAApB,SAA8BN,IAG1C,gCACc,KAAjBA,GAAuB,gDACvBI,MCwNMM,EA7VM,WACjB,IAAIhP,EAAUC,cACd,EAAgCC,mBAAS,IAAzC,mBAAO4O,EAAP,KAAiBC,EAAjB,KACA,EAAkC7O,mBAAS,IAA3C,mBAAO4G,EAAP,KAAkBS,EAAlB,KACA,EAA8CrH,mBAAS,IAAvD,mBAAO+O,EAAP,KAAwBC,EAAxB,KACA,EAA0ChP,oBAAS,GAAnD,mBAAO4I,EAAP,KAAsBC,EAAtB,KACA,EAA0C7I,oBAAS,GAAnD,mBAAOiP,EAAP,KAAsBC,EAAtB,KAEA,EAAsClP,mBAAS,IAA/C,mBAAOsH,EAAP,KAAoBC,EAApB,KACA,EAAsCvH,mBAAS,IAA/C,mBAAOmP,EAAP,KAAoBC,EAApB,KACA,EAAgCpP,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAgCd,mBAAS,IAAzC,mBAAOf,EAAP,KAAiB8B,EAAjB,KACA,EAA8Bf,mBAAS,IAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,GAAd,KAEAI,oBAAS,sBAAC,8BAAAnD,EAAA,sEACkBkQ,EAASpB,iBAD3B,cACFmC,EADE,OAENR,EAAYQ,GAFN,SAGmB3H,EAAWf,kBAH9B,OAGFkB,EAHE,OAINR,EAAa9E,KAAKuF,MAAMD,IAJlB,2CAKP,IAEHtG,qBAAU,WACNwG,YAAW,WACP1J,IAAE,8BAAD,OAA+B0Q,EAAgBpH,aAA/C,MAAgEK,KAAK,YAAY,KACnF,MACJ,CAAC+G,IAEAH,GACAA,EAASjF,MAAK,SAACvL,EAAGwL,GAAJ,OAAWxL,EAAEqE,GAAKmH,EAAEnH,GAAM,EAAKrE,EAAEqE,GAAKmH,EAAEnH,IAAO,EAAI,KAGrE,IAqEI6M,GArEArH,GAAoB,yBAAQpE,GAAG,YAAYJ,SAAU,SAACC,GAAD,OAAO0L,EAAe1L,EAAEC,OAAOC,QAAhE,UACnBgD,EAAUrB,KAAI,SAAA2C,GACX,OAAO,wBAAQtE,MAAOsE,EAAEN,KAAjB,SAAwBM,EAAEN,UAFjB,OAwDlB0C,GAAS,SAACpD,EAASqD,GACrB,OAAO,qBAAItE,UAAU,YAAd,UACH,6BAAKiB,EAAQzE,KACb,6BAAKyE,EAAQU,OACb,6BAAKV,EAAQS,eACb,6BAAKT,EAAQjF,KAAKC,YAClB,6BAAKgF,EAAQjF,KAAKE,WAClB,6BAAK+E,EAAQjF,KAAKG,QAClB,6BAAI,uBAAO7D,KAAK,SAAS4F,QAAS,YA3D1B,SAAC+C,GACb8H,EAAmB9H,GACnBK,EAAeL,EAAQU,MACvBwH,EAAelI,EAAQS,cACvB7G,EAAYoG,EAAQjF,KAAKC,WACzBnB,EAAYmG,EAAQjF,KAAKE,UACzBlB,EAAWiG,EAAQjF,KAAKE,UACxBhB,GAAS+F,EAAQjF,KAAKG,OACtByG,GAAiB,GAmD6B4B,CAAQvD,IAAYjB,UAAU,gCAAgCrC,MAAM,WAC9G,6BAAI,uBAAOrF,KAAK,SAAS4F,QAAS,YAjDpB,SAAC+C,GACnBtE,IAAKC,KAAK,CACNK,MAAO,wDACPF,KAAM,oCACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOlE,GAAP,eAAAR,EAAA,0DACAQ,EAAOkM,YADP,gCAEgBwD,EAASnB,cAAc5K,KAAKC,UAAU0E,IAFtD,QAGY,KADRqH,EAFJ,QAII3L,IAAKC,KACD,uCACA,gCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,sBAGL,MAARwL,EACA3L,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,6BAGVJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAM,kDAvBlB,2CARR,uDAgD8CmK,CAAcjG,IAAYjB,UAAU,gCAAgCrC,MAAM,eARlF2G,IAatCqE,IACAU,GAAmB,wBAAOrK,OAAO,IAAd,UACf,gCACI,+BACI,oCACA,8CACA,yCACA,2CACA,0CACA,uCACA,sCACA,6CAGR,gCACK2J,EAASrJ,KAAI,SAAC2B,EAASqD,GACpB,OAAOD,GAAOpD,EAASqD,YAMvC,IA6FIQ,GA7FE3H,GAAkB,WACpB,OAAIvC,EAASwC,OAAS,EACX,yBAEHxC,EAASwC,OAAS,GACX,wBAGXpE,IAAa+B,EACN,4CAEP/B,EAASoE,OAAS,EACX,6BAEHpE,EAASoE,OAAS,GACX,4BAGXiE,EAAYjE,OAAS,EACd,6BAENnC,EAAMoB,SAAS,MAAQpB,EAAMmC,OAAS,EAChC,gCAEJ,IAsEP0L,IAAoB,KACpBhE,GACI,qCAAO,uBACH,sBAAMzH,MAAO,CAAEC,WAAY,QAA3B,mBADJ,IACuDwL,EAAgBtM,GADvE,IAC2E,uBAD3E,IACkF,uBAC9E,sBAAMa,MAAO,CAAEC,WAAY,QAA3B,qCACA,uBAAOhF,KAAK,OAAOiF,aAAcuL,EAAgBnH,KAAMnE,SAAU,SAACC,GAAD,OAAO6D,EAAe7D,EAAEC,OAAOC,UAHpG,IAG+G,uBAH/G,IAGsH,uBAClH,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,wBAJJ,IAI4D0E,GAJ5D,IAI+E,uBAJ/E,IAIsF,uBAClF,sBAAM3E,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOiF,aAAc3C,EAAU4C,SAAU,SAACC,GAAD,OAAO5C,EAAY4C,EAAEC,OAAOC,UANrF,IAMgG,uBANhG,IAMuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,yBACA,uBAAOhF,KAAK,OAAOiF,aAAcvE,EAAUwE,SAAU,SAACC,GAAD,OAAO3C,EAAY2C,EAAEC,OAAOC,UARrF,IAQgG,uBARhG,IAQuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,iCACA,uBAAOhF,KAAK,OAAOiF,aAAcxC,EAASyC,SAAU,SAACC,GAAD,OAAOzC,EAAWyC,EAAEC,OAAOC,UAVnF,IAU8F,uBAV9F,IAUqG,uBACjG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,uBAAOhF,KAAK,OAAOiF,aAActC,EAAOuC,SAAU,SAACC,GAAD,OAAOvC,GAASuC,EAAEC,OAAOC,UAZ/E,IAY0F,uBAZ1F,IAYiG,uBAC7F,uBAAOrF,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,WAAQ0E,GAAiB,MAb7I,IAa2J,IACvJ,uBAAOtK,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBAnFvG,WAClB,IAAIvF,EACJgE,IAAKC,KAAK,CACNK,MAAO,+BACPF,KAAM,6CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,mBACpB/H,KARH,uCAQQ,WAAOyM,GAAP,mBAAAnR,EAAA,0DACAmR,EAAQzE,YADR,oBAGc,MADV3L,EAAQiE,MAFZ,gBAIIR,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAK7D,KAPjB,8BAUQ+H,EAAU3E,KAAKC,UAAU,CACzBC,GAAIsM,EAAgBtM,GACpBmF,KAAMN,EACNK,aAAcwH,EACdzM,QAASqM,EAAgBrM,QACzBT,KAAM,CACFQ,GAAIsM,EAAgBrM,QACpBR,UAAWrB,EACXsB,SAAUlD,EACVmD,MAAOlB,EACPyB,UAAW,KApBvB,SAuBmB2L,EAASrH,cAAcC,GAvB1C,QAwBmB,KADftI,EAvBJ,QAyBQgE,IAAKC,KACD,kCACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,sBAGK,MAAlBnE,EAAOM,QACH8D,EAAOpE,EAAOO,MAAM4C,MAAM,KAAK,GACnCa,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAKA,EAAL,yBAGc,MAAlBpE,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,0CA9CzB,4CARR,uDAiF+HiE,UAKnI,IAqEIuI,GACAT,IAAoB,KACpBS,GACI,qCAAO,uBACH,sBAAMlM,MAAO,CAAEC,WAAY,QAA3B,qCACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAO6D,EAAe7D,EAAEC,OAAOC,UAFhE,IAE2E,uBAF3E,IAEkF,uBAC9E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,wBAHJ,IAG4D0E,GAH5D,IAG+E,uBAH/E,IAGsF,uBAClF,sBAAM3E,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAO5C,EAAY4C,EAAEC,OAAOC,UAL7D,IAKwE,uBALxE,IAK+E,uBAC3E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,yBACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAO3C,EAAY2C,EAAEC,OAAOC,UAP7D,IAOwE,uBAPxE,IAO+E,uBAC3E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,iCACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAOzC,EAAWyC,EAAEC,OAAOC,UAT5D,IASuE,uBATvE,IAS8E,uBAC1E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAOvC,GAASuC,EAAEC,OAAOC,UAX1D,IAWqE,uBAXrE,IAW4E,uBACxE,uBAAOrF,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,WAAQ+K,GAAiB,MAZ7I,IAY2J,IACvJ,uBAAO3Q,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBArFpG,WACrB,IAAIvF,EACJgE,IAAKC,KAAK,CACNK,MAAO,iCACPF,KAAM,4CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOyM,GAAP,mBAAAnR,EAAA,0DACAmR,EAAQzE,YADR,oBAGc,MADV3L,EAAQiE,MAFZ,gBAIIR,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAK7D,KAPjB,8BAUQ+H,EAAU3E,KAAKC,UAAU,CACzBoF,KAAMN,EACNK,aAAcwH,EACdlN,KAAM,CACFC,UAAWrB,EACXsB,SAAUlD,EACVmD,MAAOlB,EACPyB,UAAW,KAjBvB,SAoBmB2L,EAASlB,iBAAiBlG,GApB7C,QAqBmB,KADftI,EApBJ,QAsBQgE,IAAKC,KACD,0CACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,sBAGK,MAAlBnE,EAAOM,QACH8D,EAAOpE,EAAOO,MAAM4C,MAAM,KAAK,GACnCa,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAKA,EAAL,yBAGc,MAAlBpE,EAAOM,OACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,kDAGTJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,yCAjDzB,4CARR,uDAmF+HoK,UAKnI,IAUIqC,GAAY,uBAAOlR,KAAK,SAASqF,MAAM,qBAAqBqC,UAAU,gCACtE3C,MAAO,CAAEU,MAAO,SAAWG,QAAS,WAVpCoD,EAAe,IACf6H,EAAexI,EAAU,GAAGgB,MAC5B9G,EAAY,IACZC,EAAY,IACZE,EAAW,IACXE,GAAS,IACT+N,GAAiB,MAMrB,OAAQ,gCACJ,0CADI,IACc,wBACftG,IAAkBqG,GAAkBQ,GACtC7G,EAAgBmC,GAAYkE,EAAgBO,GAAYF,OCsDlDI,EAjZO,WAClB,IAAI5P,EAAUC,cACd,EAAkCC,mBAAS,IAA3C,mBAAO2P,EAAP,KAAkBC,EAAlB,KACA,EAAgD5P,mBAAS,IAAzD,mBAAO6P,EAAP,KAAyBC,EAAzB,KACA,EAA0C9P,oBAAS,GAAnD,mBAAO4I,EAAP,KAAsBC,EAAtB,KACA,EAA0C7I,oBAAS,GAAnD,mBAAOiP,EAAP,KAAsBC,EAAtB,KAEA,EAAkClP,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAgCZ,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAgCd,mBAAS,IAAzC,mBAAOf,EAAP,KAAiB8B,EAAjB,KACA,EAA8Bf,mBAAS,IAAvC,oBAAOgB,GAAP,MAAgBC,GAAhB,MACA,GAA0BjB,mBAAS,IAAnC,qBAAOkB,GAAP,MAAcC,GAAd,MACA,GAA4BnB,mBAAS,IAArC,qBAAOqB,GAAP,MAAeC,GAAf,MAEAC,oBAAS,sBAAC,4BAAAnD,EAAA,sEACmBkQ,EAASjB,kBAD5B,OACF0C,EADE,OAENH,EAAaG,GAFP,2CAGP,IAECJ,GACAA,EAAUhG,MAAK,SAACvL,EAAGwL,GAAJ,OAAWxL,EAAEqE,GAAKmH,EAAEnH,GAAM,EAAKrE,EAAEqE,GAAKmH,EAAEnH,IAAO,EAAI,KAGtE,IAuEIuN,GAhBE1F,GAAS,SAAChL,EAAUiL,GACtB,OAAO,qBAAItE,UAAU,YAAd,UACH,6BAAK3G,EAASmD,KACd,6BAAKnD,EAASoC,aACd,6BAAKpC,EAASqC,YACd,6BAAKrC,EAASsC,UACd,6BAAKtC,EAASuC,WACd,6BAAKvC,EAASwC,iBACd,6BAAKxC,EAAS2C,KAAKC,YACnB,6BAAK5C,EAAS2C,KAAKE,WACnB,6BAAK7C,EAAS2C,KAAKG,QACnB,6BAAI,uBAAO7D,KAAK,SAAS4F,QAAS,YAlE1B,SAAC7E,GACbwQ,EAAoBxQ,GACpBc,EAAad,EAASoC,YACtBpB,EAAYhB,EAASqC,WACrBnB,EAAWlB,EAASsC,SACpBN,GAAUhC,EAASuC,SAASE,MAAM,KAAK,IACvCrB,EAAYpB,EAASuC,SAASE,MAAM,KAAK,IACzCnB,EAActB,EAASwC,gBACvBhB,EAAYxB,EAAS2C,KAAKC,WAC1BnB,EAAYzB,EAAS2C,KAAKE,UAC1BlB,GAAW3B,EAAS2C,KAAKE,UACzBhB,GAAS7B,EAAS2C,KAAKG,OACvByG,GAAiB,GAsD6B4B,CAAQnL,IAAa2G,UAAU,gCAAgCrC,MAAM,WAC/G,6BAAI,uBAAOrF,KAAK,SAAS4F,QAAS,YApDnB,SAAC7E,GACpBsD,IAAKC,KAAK,CACNK,MAAO,iDACPF,KAAM,wCACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOlE,GAAP,eAAAR,EAAA,0DACAQ,EAAOkM,YADP,gCAEgBwD,EAAShB,eAAe/K,KAAKC,UAAUlD,IAFvD,QAGY,KADRiP,EAFJ,QAII3L,IAAKC,KACD,wCACA,qDACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,uBAGL,MAARwL,EACA3L,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,8BAGVJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAM,2CAvBlB,2CARR,uDAmD8CsK,CAAehO,IAAa2G,UAAU,gCAAgCrC,MAAM,eAXpF2G,IAgBtCoF,IACAK,GAAoB,wBAAO/K,OAAO,IAAd,UAChB,gCACI,+BACI,oCACA,4CACA,2CACA,yCACA,uCACA,6CACA,2CACA,0CACA,uCACA,sCACA,6CAGR,gCACK0K,EAAUpK,KAAI,SAACjG,EAAUiL,GACtB,OAAOD,GAAOhL,EAAUiL,YAMxC,IA4GIQ,GA5GE3H,GAAkB,WACpB,OAAIvC,EAASwC,OAAS,EACX,yBAEHxC,EAASwC,OAAS,GACX,wBAGXpE,IAAa+B,GACN,4CAEP/B,EAASoE,OAAS,EACX,6BAEHpE,EAASoE,OAAS,GACX,4BAGXlD,EAAUkD,OAAS,EACZ,0BAEPhD,EAASgD,OAAS,EACX,yBAEP9C,EAAQ8C,OAAS,GACV,uBAEa,IAApB5C,EAAS4C,OACF,qCAEe,KAAtB1C,EAAW0C,OACJ,6CAENnC,GAAMoB,SAAS,MAAQpB,GAAMmC,OAAS,EAChC,gCAEJ,IAyEPwM,IAAqB,KACrB9E,GACI,qCAAO,uBACH,sBAAMzH,MAAO,CAAEC,WAAY,QAA3B,mBADJ,IACuDsM,EAAiBpN,GADxE,IAC4E,uBAD5E,IACmF,uBAC/E,sBAAMa,MAAO,CAAEC,WAAY,QAA3B,2BACA,uBAAOhF,KAAK,OAAOiF,aAAcrD,EAAWsD,SAAU,SAACC,GAAD,OAAOtD,EAAasD,EAAEC,OAAOC,UAHvF,IAGkG,uBAHlG,IAGyG,uBACrG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOiF,aAAcnD,EAAUoD,SAAU,SAACC,GAAD,OAAOpD,EAAYoD,EAAEC,OAAOC,UALrF,IAKgG,uBALhG,IAKuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,wBACA,uBAAOhF,KAAK,OAAOiF,aAAcjD,EAASkD,SAAU,SAACC,GAAD,OAAOlD,EAAWkD,EAAEC,OAAOC,UAPnF,IAO8F,uBAP9F,IAOqG,uBACjG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,yBAAQM,GAAG,YAAYD,MAAOvC,GAAQoC,SAAU,SAACC,GAAD,OAAOpC,GAAUoC,EAAEC,OAAOC,QAA1E,UACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEJ,uBAAOrF,KAAK,OAAOiF,aAAc/C,EAAUgD,SAAU,SAACC,GAAD,OAAOhD,EAAYgD,EAAEC,OAAOC,UAjBrF,IAiBgG,uBAjBhG,IAiBuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,4BACA,uBAAOhF,KAAK,OAAOiF,aAAc7C,EAAY8C,SAAU,SAACC,GAAD,OAAO9C,EAAc8C,EAAEC,OAAOC,UAnBzF,IAmBoG,uBAnBpG,IAmB2G,uBACvG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOiF,aAAc3C,EAAU4C,SAAU,SAACC,GAAD,OAAO5C,EAAY4C,EAAEC,OAAOC,UArBrF,IAqBgG,uBArBhG,IAqBuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,yBACA,uBAAOhF,KAAK,OAAOiF,aAAcvE,EAAUwE,SAAU,SAACC,GAAD,OAAO3C,EAAY2C,EAAEC,OAAOC,UAvBrF,IAuBgG,uBAvBhG,IAuBuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,iCACA,uBAAOhF,KAAK,OAAOiF,aAAcxC,GAASyC,SAAU,SAACC,GAAD,OAAOzC,GAAWyC,EAAEC,OAAOC,UAzBnF,IAyB8F,uBAzB9F,IAyBqG,uBACjG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,uBAAOhF,KAAK,OAAOiF,aAActC,GAAOuC,SAAU,SAACC,GAAD,OAAOvC,GAASuC,EAAEC,OAAOC,UA3B/E,IA2B0F,uBA3B1F,IA2BiG,uBAC7F,uBAAOrF,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,WAAQ0E,GAAiB,MA5B7I,IA4B2J,IACvJ,uBAAOtK,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBArGtG,WACnB,IAAIvF,EACJgE,IAAKC,KAAK,CACNK,MAAO,+BACPF,KAAM,6CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,mBACpB/H,KARH,uCAQQ,WAAOyM,GAAP,mBAAAnR,EAAA,0DACAmR,EAAQzE,YADR,oBAGc,MADV3L,EAAQiE,MAFZ,gBAIIR,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAK7D,KAPjB,8BAUQG,EAAWiD,KAAKC,UAAU,CAC1BC,GAAIoN,EAAiBpN,GACrBf,WAAYvB,EACZwB,UAAWtB,EACXuB,QAASrB,EACTsB,SAAUR,GAAS,IAAMZ,EACzBqB,eAAgBnB,EAChB+B,QAASmN,EAAiBnN,QAC1BT,KAAM,CACFQ,GAAIoN,EAAiBnN,QACrBR,UAAWrB,EACXsB,SAAUlD,EACVmD,MAAOlB,GACPyB,UAAW,KAvBvB,SA0BmB2L,EAASjP,eAAeC,GA1B3C,QA2BmB,KADfV,EA1BJ,QA4BQgE,IAAKC,KACD,mCACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,uBAGK,MAAlBnE,EAAOM,QACH8D,EAAOpE,EAAOO,MAAM4C,MAAM,KAAK,GACnCa,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAKA,EAAL,yBAGc,MAAlBpE,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,0CAjDzB,4CARR,uDAmG+H3D,UAKnI,IAwEImQ,GACAK,IAAqB,KACrBL,GACI,qCAAO,uBACH,sBAAMlM,MAAO,CAAEC,WAAY,QAA3B,2BACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAOtD,EAAasD,EAAEC,OAAOC,UAF9D,IAEyE,uBAFzE,IAEgF,uBAC5E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAOpD,EAAYoD,EAAEC,OAAOC,UAJ7D,IAIwE,uBAJxE,IAI+E,uBAC3E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,wBACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAOlD,EAAWkD,EAAEC,OAAOC,UAN5D,IAMuE,uBANvE,IAM8E,uBAC1E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,yBAAQE,SAAU,SAACC,GAAD,OAAOpC,GAAUoC,EAAEC,OAAOC,QAA5C,UACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEJ,uBAAOrF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAOhD,EAAYgD,EAAEC,OAAOC,UAhB7D,IAgBwE,uBAhBxE,IAgB+E,uBAC3E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,4BACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAO9C,EAAc8C,EAAEC,OAAOC,UAlB/D,IAkB0E,uBAlB1E,IAkBiF,uBAC7E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAO5C,EAAY4C,EAAEC,OAAOC,UApB7D,IAoBwE,uBApBxE,IAoB+E,uBAC3E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,yBACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAO3C,EAAY2C,EAAEC,OAAOC,UAtB7D,IAsBwE,uBAtBxE,IAsB+E,uBAC3E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,iCACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAOzC,GAAWyC,EAAEC,OAAOC,UAxB5D,IAwBuE,uBAxBvE,IAwB8E,uBAC1E,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAD,OAAOvC,GAASuC,EAAEC,OAAOC,UA1B1D,IA0BqE,uBA1BrE,IA0B4E,uBACxE,uBAAOrF,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,WAAQ+K,GAAiB,MA3B7I,IA2B2J,IACvJ,uBAAO3Q,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBAvGnG,WACtB,IAAIvF,EACJgE,IAAKC,KAAK,CACNK,MAAO,iCACPF,KAAM,4CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOyM,GAAP,mBAAAnR,EAAA,0DACAmR,EAAQzE,YADR,oBAGc,MADV3L,EAAQiE,MAFZ,gBAIIR,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAK7D,KAPjB,8BAUQG,EAAWiD,KAAKC,UAAU,CAC1Bd,WAAYvB,EACZwB,UAAWtB,EACXuB,QAASrB,EACTsB,SAAUR,GAAS,IAAMZ,EACzBqB,eAAgBnB,EAChBsB,KAAM,CACFC,UAAWrB,EACXsB,SAAUlD,EACVmD,MAAOlB,GACPyB,UAAW,KApBvB,SAuBmB2L,EAASf,kBAAkBjO,GAvB9C,QAwBmB,KADfV,EAvBJ,QAyBQgE,IAAKC,KACD,mCACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,uBAGK,MAAlBnE,EAAOM,QACH8D,EAAOpE,EAAOO,MAAM4C,MAAM,KAAK,GACnCa,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAKA,EAAL,yBAGc,MAAlBpE,EAAOM,OACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CAGTJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,kCApDzB,4CARR,uDAqG+HuK,UAKnI,IAcIkC,GAAY,uBAAOlR,KAAK,SAASqF,MAAM,sBAAsBqC,UAAU,gCACvE3C,MAAO,CAAEU,MAAO,SAAWG,QAAS,WAdpC/D,EAAa,IACbE,EAAY,IACZE,EAAW,IACXc,GAAU,OACVZ,EAAY,IACZE,EAAc,IACdE,EAAY,IACZC,EAAY,IACZE,GAAW,IACXE,GAAS,IACT+N,GAAiB,MAMrB,OAAQ,gCACJ,2CADI,IACe,wBAChBtG,IAAkBqG,GAAkBQ,GACtC7G,EAAgBmC,GAAYkE,EAAgBO,GAAYQ,OCrNlDC,EAxLK,WAChB,IAAInQ,EAAUC,cACd,EAA0BC,mBAAS,IAAnC,mBAAO6M,EAAP,KAAcqD,EAAd,KACA,EAAkClQ,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAgCd,mBAAS,IAAzC,mBAAOf,EAAP,KAAiB8B,EAAjB,KACA,EAA8Bf,mBAAS,IAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAA8CnB,mBAAS,IAAvD,mBAAOhB,EAAP,KAAwBoC,EAAxB,KACA,EAAoCpB,oBAAS,GAA7C,mBAAOmQ,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,WACd,IAEIC,EAFQrS,aAAaC,QAAQ,OACb6D,MAAM,KAAK,GACRoI,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACpDoG,EAAcC,mBAAmBC,KAAKH,GAAQvO,MAAM,IAAIwD,KAAI,SAAU2C,GACtE,MAAO,KAAO,KAAOA,EAAEwI,WAAW,GAAGC,SAAS,KAAK1E,OAAO,MAC3D2E,KAAK,KACR,OAAOrO,KAAKuF,MAAMyI,GAAaM,YAGnCtP,oBAAS,sBAAC,gCAAAnD,EAAA,sEACgBkQ,EAASd,eADzB,OACFsD,EADE,OAGI,IADNjN,EAAKwM,MAEDU,EAASD,EAAUE,MAAK,SAAAnE,GAAK,OAAIA,EAAMpK,IAAMoB,KACjDqM,EAASa,GACT3Q,EAAa2Q,EAAOrP,YACpBpB,EAAYyQ,EAAOpP,gBACCK,IAAhB+O,EAAO9O,OACPnB,EAAYiQ,EAAO9O,KAAKC,WACxBnB,EAAYgQ,EAAO9O,KAAKE,UACxBlB,EAAW8P,EAAO9O,KAAKE,UACvBf,EAAmB2P,EAAO9O,KAAKE,UAC/BhB,EAAS4P,EAAO9O,KAAKG,SAGzBgO,GAAc,GAhBZ,2CAkBP,IAEH,IA8BM3C,EAAW,uCAAG,gCAAArP,EAAA,6DAEZ2S,EAASxO,KAAKC,UAAU,CACxBC,GAAIoK,EAAMpK,GACVf,WAAYvB,EACZwB,UAAWtB,EACXoO,MAAO5B,EAAM4B,MACb/L,QAASmK,EAAMnK,QACfT,KAAM,CACFQ,GAAIoK,EAAMnK,QACVR,UAAWrB,EACXsB,SAAUlD,EACVmD,MAAOlB,EACPyB,UAAW,KAbH,SAgBD2L,EAASN,aAAa+C,GAhBrB,QAiBD,KADfnS,EAhBgB,QAkBZgE,IAAKC,KACD,6CACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,mBACbjD,EAAQiD,KAAK,sBAGK,MAAlBnE,EAAOM,SACH8D,EAAOpE,EAAOO,MAAM4C,MAAM,KAAK,GACnCa,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAKA,EAAL,yBAGU,MAAlBpE,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CAvCD,2CAAH,qDA6CXG,EAAa,uCAAG,8BAAA/E,EAAA,yDAGJ,MADVe,EA5EA0B,EAASwC,OAAS,EACX,yBAEHxC,EAASwC,OAAS,GACX,wBAGXpE,IAAa+B,EACN,4CAEP/B,EAASoE,OAAS,EACX,6BAEHpE,EAASoE,OAAS,GACX,4BAGXlD,EAAUkD,OAAS,EACZ,0BAEPhD,EAASgD,OAAS,EACX,0BAENnC,EAAMoB,SAAS,MAAQpB,EAAMmC,OAAS,EAChC,gCAEJ,IAgDW,gBAIdT,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAK7D,KAPC,0BAUVH,IAAoBC,EAVV,iCAWKqP,EAASvP,eAAeC,EAAiBC,GAX9C,QAYK,KADfL,EAXU,QAaN6O,KAEsB,MAAlB7O,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CACNF,MAAK,WACJhD,EAAQiD,KAAK,oBACbjD,EAAQiD,KAAK,uBAGC,MAAlBnE,EAAOM,QACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,2CACNF,MAAK,WACJhD,EAAQiD,KAAK,mBACbjD,EAAQiD,KAAK,sBAhCf,wBAqCV0K,IArCU,4CAAH,qDA0CnB,OAAQ,8BACF0C,EAmBI,oBAAI7M,MAAO,CAAEoL,MAAO,OAApB,yDAlBF,gCACI,kDACA,sBAAMpL,MAAO,CAAEC,WAAY,QAA3B,mBAFJ,IAEuDsJ,EAAMpK,GAF7D,IAEiE,uBAFjE,IAEwE,uBACpE,sBAAMa,MAAO,CAAEC,WAAY,QAA3B,2BACA,uBAAOhF,KAAK,OAAOiF,aAAcrD,EAAWsD,SAAU,SAACC,GAAD,OAAOtD,EAAasD,EAAEC,OAAOC,UAJvF,IAIkG,uBAJlG,IAIyG,uBACrG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOiF,aAAcnD,EAAUoD,SAAU,SAACC,GAAD,OAAOpD,EAAYoD,EAAEC,OAAOC,UANrF,IAMgG,uBANhG,IAMuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBAPJ,IAO0DsJ,EAAM4B,MAPhE,IAOuE,uBAPvE,IAO8E,uBAC1E,sBAAMnL,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOiF,aAAc3C,EAAU4C,SAAU,SAACC,GAAD,OAAO5C,EAAY4C,EAAEC,OAAOC,UATrF,IASgG,uBAThG,IASuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,yBACA,uBAAOhF,KAAK,OAAOiF,aAAcvE,EAAUwE,SAAU,SAACC,GAAD,OAAO3C,EAAY2C,EAAEC,OAAOC,UAXrF,IAWgG,uBAXhG,IAWuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,iCACA,uBAAOhF,KAAK,OAAOiF,aAAcxC,EAASyC,SAAU,SAACC,GAAD,OAAOzC,EAAWyC,EAAEC,OAAOC,UAbnF,IAa8F,uBAb9F,IAaqG,uBACjG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,uBAAOhF,KAAK,OAAOiF,aAActC,EAAOuC,SAAU,SAACC,GAAD,OAAOvC,EAASuC,EAAEC,OAAOC,UAf/E,IAe0F,uBAf1F,IAeiG,uBAC7F,uBAAOrF,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBAAMhB,aCsMxH8N,EAvXI,WACf,IAAInR,EAAUC,cACd,EAA4BC,mBAAS,IAArC,mBAAOkO,EAAP,KAAeC,EAAf,KACA,EAA0CnO,mBAAS,IAAnD,mBAAOkR,EAAP,KAAsBC,EAAtB,KACA,EAA0CnR,oBAAS,GAAnD,mBAAO4I,EAAP,KAAsBC,EAAtB,KACA,EAA0C7I,oBAAS,GAAnD,mBAAOiP,EAAP,KAAsBC,EAAtB,KAEA,EAAkClP,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOoR,EAAP,KAAcC,EAAd,KACA,EAAgCrR,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAgCd,mBAAS,IAAzC,mBAAOf,EAAP,KAAiB8B,EAAjB,KACA,EAA8Bf,mBAAS,IAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KAEMkP,EAAY,WACd,IAEIC,EAFQrS,aAAaC,QAAQ,OACb6D,MAAM,KAAK,GACRoI,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACpDoG,EAAcC,mBAAmBC,KAAKH,GAAQvO,MAAM,IAAIwD,KAAI,SAAU2C,GACtE,MAAO,KAAO,KAAOA,EAAEwI,WAAW,GAAGC,SAAS,KAAK1E,OAAO,MAC3D2E,KAAK,KACR,OAAOrO,KAAKuF,MAAMyI,GAAaM,YAGnCtP,oBAAS,sBAAC,8BAAAnD,EAAA,sEACgBkQ,EAASd,eADzB,OACFsD,EADE,OAEFjN,EAAKwM,IACTS,EAAYA,EAAUzG,QAAO,SAAAwC,GAAK,OAAIA,EAAMpK,IAAMoB,KAClDsK,EAAU2C,GAJJ,2CAKP,IAEC5C,GACAA,EAAOvE,MAAK,SAACvL,EAAGwL,GAAJ,OAAWxL,EAAEqE,GAAKmH,EAAEnH,GAAM,EAAKrE,EAAEqE,GAAKmH,EAAEnH,IAAO,EAAI,KAGnE,IAmEI6O,GAdEhH,GAAS,SAACuC,EAAOtC,GACnB,OAAO,qBAAItE,UAAU,YAAd,UACH,6BAAK4G,EAAMpK,KACX,6BAAKoK,EAAMnL,aACX,6BAAKmL,EAAMlL,YACX,6BAAKkL,EAAM4B,QACX,6BAAK5B,EAAM5K,KAAKC,YAChB,6BAAK2K,EAAM5K,KAAKE,WAChB,6BAAK0K,EAAM5K,KAAKG,QAChB,6BAAI,uBAAO7D,KAAK,SAAS4F,QAAS,YA9D1B,SAAC0I,GACbsE,EAAiBtE,GACjBzM,EAAayM,EAAMnL,YACnBpB,EAAYuM,EAAMlL,WAClBb,EAAY+L,EAAM5K,KAAKC,WACvBnB,EAAY8L,EAAM5K,KAAKE,UACvBlB,EAAW4L,EAAM5K,KAAKE,UACtBhB,EAAS0L,EAAM5K,KAAKG,OACpByG,GAAiB,GAsD6B4B,CAAQoC,IAAU5G,UAAU,gCAAgCrC,MAAM,WAC5G,6BAAI,uBAAOrF,KAAK,SAAS4F,QAAS,YApDtB,SAAC0I,GACjBjK,IAAKC,KAAK,CACNK,MAAO,8CACPF,KAAM,0CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOlE,GAAP,eAAAR,EAAA,0DACAQ,EAAOkM,YADP,gCAEgBwD,EAASZ,YAAYnL,KAAKC,UAAUqK,IAFpD,QAGY,KADR0B,EAFJ,QAII3L,IAAKC,KACD,qCACA,6CACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,oBAGL,MAARwL,EACA3L,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,2BAGE,MAARuL,GACA3L,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAM,wCAxBtB,2CARR,uDAmD8C0K,CAAYb,IAAU5G,UAAU,gCAAgCrC,MAAM,eAT9E2G,IActC2D,IACAoD,GAAiB,wBAAOrM,OAAO,IAAd,UACb,gCACI,+BACI,oCACA,4CACA,2CACA,uCACA,2CACA,0CACA,uCACA,sCACA,6CAGR,gCACKiJ,EAAO3I,KAAI,SAACsH,EAAOtC,GAChB,OAAOD,GAAOuC,EAAOtC,YAMrC,IAuGIQ,GAvGE3H,GAAkB,WACpB,OAAIvC,EAASwC,OAAS,EACX,yBAEHxC,EAASwC,OAAS,GACX,wBAGXpE,IAAa+B,EACN,4CAEP/B,EAASoE,OAAS,EACX,6BAEHpE,EAASoE,OAAS,GACX,4BAGXlD,EAAUkD,OAAS,EACZ,0BAEPhD,EAASgD,OAAS,EACX,0BAENnC,EAAMoB,SAAS,MAAQpB,EAAMmC,OAAS,EAChC,gCAEJ,IA6EP6N,IAAkB,KAClBnG,GACI,qCAAO,uBACH,sBAAMzH,MAAO,CAAEC,WAAY,QAA3B,mBADJ,IACuD2N,EAAczO,GADrE,IACyE,uBADzE,IACgF,uBAC5E,sBAAMa,MAAO,CAAEC,WAAY,QAA3B,2BACA,uBAAOhF,KAAK,OAAOiF,aAAcrD,EAAWsD,SAAU,SAACC,GAAD,OAAOtD,EAAasD,EAAEC,OAAOC,UAHvF,IAGkG,uBAHlG,IAGyG,uBACrG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOiF,aAAcnD,EAAUoD,SAAU,SAACC,GAAD,OAAOpD,EAAYoD,EAAEC,OAAOC,UALrF,IAKgG,uBALhG,IAKuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBANJ,IAM0D2N,EAAczC,MANxE,IAM+E,uBAN/E,IAMsF,uBAClF,sBAAMnL,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOiF,aAAc3C,EAAU4C,SAAU,SAACC,GAAD,OAAO5C,EAAY4C,EAAEC,OAAOC,UARrF,IAQgG,uBARhG,IAQuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,yBACA,uBAAOhF,KAAK,OAAOiF,aAAcvE,EAAUwE,SAAU,SAACC,GAAD,OAAO3C,EAAY2C,EAAEC,OAAOC,UAVrF,IAUgG,uBAVhG,IAUuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,iCACA,uBAAOhF,KAAK,OAAOiF,aAAcxC,EAASyC,SAAU,SAACC,GAAD,OAAOzC,EAAWyC,EAAEC,OAAOC,UAZnF,IAY8F,uBAZ9F,IAYqG,uBACjG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,uBAAOhF,KAAK,OAAOiF,aAActC,EAAOuC,SAAU,SAACC,GAAD,OAAOvC,EAASuC,EAAEC,OAAOC,UAd/E,IAc0F,uBAd1F,IAciG,uBAC7F,uBAAOrF,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,WAAQ0E,GAAiB,MAf7I,IAe2J,IACvJ,uBAAOtK,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBA5FzG,WAChB,IAAIvF,EACJgE,IAAKC,KAAK,CACNK,MAAO,+BACPF,KAAM,6CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,mBACpB/H,KARH,uCAQQ,WAAOyM,GAAP,mBAAAnR,EAAA,0DACAmR,EAAQzE,YADR,oBAGc,MADV3L,EAAQiE,MAFZ,gBAIIR,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAK7D,KAPjB,8BAUQ0N,EAAQtK,KAAKC,UAAU,CACvBC,GAAIyO,EAAczO,GAClBf,WAAYvB,EACZwB,UAAWtB,EACXoO,MAAOyC,EAAczC,MACrB/L,QAASwO,EAAcxO,QACvBT,KAAM,CACFQ,GAAIyO,EAAcxO,QAClBR,UAAWrB,EACXsB,SAAUlD,EACVmD,MAAOlB,EACPyB,UAAW,KArBvB,SAwBmB2L,EAASb,YAAYZ,GAxBxC,QAyBmB,KADfjO,EAxBJ,QA0BQgE,IAAKC,KACD,kCACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,oBAGK,MAAlBnE,EAAOM,QACH8D,EAAOpE,EAAOO,MAAM4C,MAAM,KAAK,GACnCa,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAKA,EAAL,yBAGc,MAAlBpE,EAAOM,OACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,0CAGTJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,6BArDzB,4CARR,uDA0F+HyK,UAKnI,IAuEI+B,GACA0B,IAAkB,KAClB1B,GACI,qCAAO,uBACH,sBAAMlM,MAAO,CAAEC,WAAY,QAA3B,mBADJ,IACuD2N,EAAczO,GADrE,IACyE,uBADzE,IACgF,uBAC5E,sBAAMa,MAAO,CAAEC,WAAY,QAA3B,2BACA,uBAAOhF,KAAK,OAAOiF,aAAcrD,EAAWsD,SAAU,SAACC,GAAD,OAAOtD,EAAasD,EAAEC,OAAOC,UAHvF,IAGkG,uBAHlG,IAGyG,uBACrG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOiF,aAAcnD,EAAUoD,SAAU,SAACC,GAAD,OAAOpD,EAAYoD,EAAEC,OAAOC,UALrF,IAKgG,uBALhG,IAKuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,yBAAQM,GAAG,QAAQJ,SAAU,SAACC,GAAD,OAAO2N,EAAS3N,EAAEC,OAAOC,QAAtD,UACI,wBAAQA,MAAM,IAAI2N,UAAQ,EAA1B,0BACA,wBAAQ3N,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BAVR,IAWc,uBAXd,IAWqB,uBACjB,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,0BACA,uBAAOhF,KAAK,OAAOiF,aAAc3C,EAAU4C,SAAU,SAACC,GAAD,OAAO5C,EAAY4C,EAAEC,OAAOC,UAbrF,IAagG,uBAbhG,IAauG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,yBACA,uBAAOhF,KAAK,OAAOiF,aAAcvE,EAAUwE,SAAU,SAACC,GAAD,OAAO3C,EAAY2C,EAAEC,OAAOC,UAfrF,IAegG,uBAfhG,IAeuG,uBACnG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,iCACA,uBAAOhF,KAAK,OAAOiF,aAAcxC,EAASyC,SAAU,SAACC,GAAD,OAAOzC,EAAWyC,EAAEC,OAAOC,UAjBnF,IAiB8F,uBAjB9F,IAiBqG,uBACjG,sBAAMN,MAAO,CAAEC,WAAY,QAA3B,sBACA,uBAAOhF,KAAK,OAAOiF,aAActC,EAAOuC,SAAU,SAACC,GAAD,OAAOvC,EAASuC,EAAEC,OAAOC,UAnB/E,IAmB0F,uBAnB1F,IAmBiG,uBAC7F,uBAAOrF,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,WAAQ+K,GAAiB,MApB7I,IAoB2J,IACvJ,uBAAO3Q,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBA/FtG,WACnB,IAAIvF,EACJgE,IAAKC,KAAK,CACNK,MAAO,iCACPF,KAAM,4CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOyM,GAAP,mBAAAnR,EAAA,0DACAmR,EAAQzE,YADR,oBAGc,MADV3L,EAAQiE,MAFZ,gBAIIR,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAK7D,KAPjB,8BAUQ0N,EAAQtK,KAAKC,UAAU,CACvBd,WAAYvB,EACZwB,UAAWtB,EACXoO,MAAO2C,EACP1O,QAASwO,EAAcxO,QACvBT,KAAM,CACFC,UAAWrB,EACXsB,SAAUlD,EACVmD,MAAOlB,EACPyB,UAAW,KAnBvB,SAsBmB2L,EAASX,eAAed,GAtB3C,QAuBmB,KADfjO,EAtBJ,QAwBQgE,IAAKC,KACD,gCACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,oBAGK,MAAlBnE,EAAOM,QACH8D,EAAOpE,EAAOO,MAAM4C,MAAM,KAAK,GACnCa,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,GAAD,OAAKA,EAAL,yBAGc,MAAlBpE,EAAOM,OACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,wCAGTJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,+BAnDzB,4CARR,uDA6F+H2K,UAKnI,IAWI8B,GAAY,uBAAOlR,KAAK,SAASqF,MAAM,mBAAmBqC,UAAU,gCACpE3C,MAAO,CAAEU,MAAO,SAAWG,QAAS,WAXpC/D,EAAa,IACbE,EAAY,IACZ+Q,EAAS,KACTvQ,EAAY,IACZC,EAAY,IACZE,EAAW,IACXE,EAAS,IACT+N,GAAiB,MAMrB,OAAQ,gCACJ,wCADI,IACY,wBACbtG,IAAkBqG,GAAkBQ,GACtC7G,EAAgBmC,GAAYkE,EAAgBO,GAAY8B,OC7HlDE,G,MApPO,WAClB,IAAI1R,EAAUC,cACd,EAAkCC,mBAAS,IAA3C,mBAAO4G,EAAP,KAAkBS,EAAlB,KACA,EAA8BrH,mBAAS,IAAvC,mBAAOwH,EAAP,KAAgBC,EAAhB,KACA,EAA0CzH,mBAAS,IAAnD,mBAAOyR,EAAP,KAAsBC,EAAtB,KACA,EAA4C1R,mBAAS,IAArD,mBAAO2R,EAAP,KAAuBC,EAAvB,KACA,EAA0C5R,oBAAS,GAAnD,mBAAO4I,EAAP,KAAsBC,EAAtB,KACA,EAA0C7I,oBAAS,GAAnD,mBAAOiP,EAAP,KAAsBC,EAAtB,KAEA3N,oBAAS,sBAAC,4BAAAnD,EAAA,sEACmBsJ,EAAWf,kBAD9B,OACFkB,EADE,OAENR,EAAa9E,KAAKuF,MAAMD,IAFlB,2CAGP,IAEHtG,qBAAU,YACgB,IAAlBqH,GACA8I,EAAiBlK,KAEtB,CAACoB,IAEJ,IAgHIiJ,EAhHA5J,EAAoB,yBAAQ6J,MAAM,cAAcjO,GAAG,YACnDJ,SAAU,SAACC,GACP+D,EAAW/D,EAAEC,OAAOC,OACpBiF,GAAiB,IAHD,UAKpB,wBAAQjF,MAAM,GAAGmO,UAAQ,EAACR,UAAQ,IACjC3K,EAAUrB,KAAI,SAAA2C,GACX,OAAO,wBAAQtE,MAAOsE,EAAEN,KAAjB,SAAwBM,EAAEN,UAPjB,OAiHxB,GAAgB,KAAZJ,EAAgB,CAChB,IAAIwK,EAAoBpJ,EAA0B,uBAAOrK,KAAK,OAAOiF,aAAcgE,EAC/E/D,SAAU,SAACC,GAAQgO,EAAiBhO,EAAEC,OAAOC,UADT4D,EAExCqK,EAAa,gCACT,sBAAMvO,MAAO,CAAEC,WAAY,QAA3B,qBADS,IAC4CyO,EAD5C,IAC8D,uBAD9D,KACsE,uBAC7EpJ,EACoB,uBAAOrK,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCACtF9B,QAAS,WA7GrBvB,IAAKC,KAAK,CACNK,MAAO,gBACPF,KAAM,6DACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,mBACpB/H,KARH,uCAQQ,WAAOlE,GAAP,iBAAAR,EAAA,0DACAQ,EAAOkM,YADP,sBAEI2G,EAAcpO,OAAS,GAF3B,gBAGIT,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,+BANb,8BASQiP,EAAkBrL,EAAUoK,MAAK,SAAAkB,GAAQ,OAAIA,EAAStK,OAASJ,MACnDI,KAAO6J,EAV3B,SAWoBnD,EAASV,cAAcrL,KAAKC,UAAUyP,IAX1D,QAYgB,KADR1D,EAXR,QAaQ3L,IAAKC,KACD,uCACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,wBAGjBkP,EAAgBrK,KAAOJ,EACJ,MAAf+G,EAAIrP,OACJ0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,mCAGU,MAAfuL,EAAIrP,OACJ0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,0CAGTJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,8BAxCzB,4CARR,0DA2GsB,uBAAOzE,KAAK,SAAS4F,QAAS,WAAQ0E,GAAiB,IAAS5C,UAAU,gCACxFrC,MAAM,SAHD,IAIwC,IAC/CgF,EAEI,uBAAOrK,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,WAAQ0E,GAAiB,MAF7H,uBAAOtK,KAAK,SAAS0H,UAAU,gCAAgCrC,MAAM,SACnFO,QAAS,WApDjBvB,IAAKC,KAAK,CACNK,MAAO,gDACPF,KAAM,oDACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOlE,GAAP,iBAAAR,EAAA,0DACAQ,EAAOkM,YADP,uBAEIqH,EAAkBvL,EAAUoK,MAAK,SAAAkB,GAAQ,OAAIA,EAAStK,OAASJ,KAFnE,SAGgB8G,EAAST,cAActL,KAAKC,UAAU2P,EAAgB1P,KAHtE,QAIY,KADR8L,EAHJ,QAKI3L,IAAKC,KACD,uCACA,6CACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,uBAGL,MAARwL,EACA3L,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,6BAGE,MAARuL,GACA3L,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAM,0CAzBtB,2CARR,6DAyDJ,IA4DIwM,EAAY,gCACZ,oDADY,IACgB,uBAC5B,sBAAMlM,MAAO,CAAEC,WAAY,QAA3B,qBACA,uBAAOhF,KAAK,OAAOkF,SAAU,SAACC,GAAQkO,EAAkBlO,EAAEC,OAAOC,UAHrD,IAGkE,uBAHlE,KAG0E,uBACtF,uBAAOrF,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCACnE9B,QAAS,WACL+K,GAAiB,GACjB0C,EAAkB,OAPd,IAQD,IACX,uBAAOrT,KAAK,SAASqF,MAAM,SAASN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBArE5F,WACrB,IAAIvF,EACJgE,IAAKC,KAAK,CACNK,MAAO,kCACPF,KAAM,0CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB/H,KARH,uCAQQ,WAAOyM,GAAP,eAAAnR,EAAA,0DACAmR,EAAQzE,YADR,sBAEI6G,EAAetO,OAAS,GAF5B,gBAGIT,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,+BANb,8BASQwE,EAAUjF,KAAKC,UAAU,CACzBoF,KAAM+J,IAVd,SAYmBrD,EAASP,iBAAiBvG,GAZ7C,QAamB,KADf5I,EAZJ,QAcQgE,IAAKC,KACD,kCACA,kCACA,WACFC,MAAK,WACHhD,EAAQiD,KAAK,kBACbjD,EAAQiD,KAAK,uBAGK,MAAlBnE,EAAOM,OACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,mCAGa,MAAlBpE,EAAOM,OACP0D,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,0CAGTJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,UACPF,KAAK,iCAxCzB,4CARR,uDAmEuH+K,SAGvHqE,EAAU,gCACV,wDADU,IACqB,uBAC/B,qBAAKN,MAAM,OAAX,SACI,sBAAKA,MAAM,SAAX,UACK7J,EACD,sBAAM6J,MAAM,qBACZ,sBAAMA,MAAM,eACZ,uBAAOA,MAAM,eAAb,yBAPE,IASH,uBATG,IASI,uBATJ,IASW,uBACpBD,EAVS,IAUG,uBAVH,IAUU,wBAClBjJ,GAAiB,uBAAOrK,KAAK,SAASqF,MAAM,qBAAqBqC,UAAU,gCACzE3C,MAAO,CAAEU,MAAO,SAChBG,QAAS,WACL+K,GAAiB,GACjB0C,EAAkB,UAI9B,OAAQ,gCACJ,2CADI,IACe,uBACjB3C,EAA0BO,EAAV4C,OCpPpB5M,GAAaC,IAAOC,OAAV,4rGAqJV2M,G,kDACJ,WAAYhO,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXC,YAAY,GAHG,E,gDAOnB,SAAanC,GACXA,EAAEoC,iBACFC,KAAKC,SAAS,CACZH,YAAaE,KAAKH,MAAMC,e,oBAG5B,WAAU,IAAD,OACCA,EAAeE,KAAKH,MAApBC,WACR,OACE,cAAC,GAAD,UACE,sBAAKI,UAAU,MAAf,UACE,mBACEA,UAAU,aACV,cAAY,OACZ9B,QAAS,SAAAT,GAAC,OAAI,EAAKwC,aAAaxC,MAElC,qBAAIuC,UAAS,oBAAeJ,EAAa,cAAgB,IAAzD,UACE,cAAC,IAAD,CAASM,gBAAgB,SAASC,GAAG,qBAArC,SACE,gDAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,uBAArC,SACE,kDAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,kBAArC,SACE,4CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,mBAArC,SACE,6CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,gBAArC,SACE,0CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,mBAArC,SACE,6CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,iBAArC,SACE,2CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,WAArC,SACE,2CAEF,cAAC,IAAD,CAASD,gBAAgB,SAASC,GAAG,8BAArC,SACE,2CAEF,wBAAQjC,QAAS,kBAAMmO,OAAOC,SAASC,KAAO,+BAA9C,mC,GApDcnM,aA2DXC,eAAW+L,IChLXI,GAvBO,WAClB,IAAI3S,EAAUC,cAMd,OAJAwB,qBAAU,WACNzB,EAAQiD,KAAK,oBACd,IAEK,gCACJ,cAAC,GAAD,IACA,cAAC,IAAD,UACI,sBAAKkD,UAAU,YAAf,UACI,eAAC,IAAD,CAAOO,KAAK,qBAAZ,cAAkC,cAAC,EAAD,IAAlC,OACA,eAAC,IAAD,CAAOA,KAAK,uBAAZ,cAAoC,cAAC,EAAD,IAApC,OACA,eAAC,IAAD,CAAOA,KAAK,kBAAZ,cAA+B,cAAC,EAAD,IAA/B,OACA,eAAC,IAAD,CAAOA,KAAK,mBAAZ,cAAgC,cAAC,EAAD,IAAhC,OACA,eAAC,IAAD,CAAOA,KAAK,gBAAZ,cAA6B,cAAC,EAAD,IAA7B,OACA,eAAC,IAAD,CAAOA,KAAK,mBAAZ,cAAgC,cAAC,EAAD,IAAhC,OACA,eAAC,IAAD,CAAOA,KAAK,iBAAZ,cAA8B,cAAC,EAAD,IAA9B,gBC6ED,IACXkM,uBA1GwB,uCAAG,4BAAAtU,EAAA,+EAGRC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,wCACLC,YAAa,mBACbC,SAAU,SAPS,cAGvBE,EAHuB,yBAShBA,GATgB,gCAWvBC,QAAQC,IAAR,MAXuB,yDAAH,qDA0GA6T,cA3FT,uCAAG,4BAAAvU,EAAA,+EAGCC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,+BACLC,YAAa,mBACbC,SAAU,SAPA,cAGdE,EAHc,yBASPA,GATO,gCAWdC,QAAQC,IAAR,MAXc,yDAAH,qDA2FwB8T,qBA5EjB,uCAAG,4BAAAxU,EAAA,+EAGNC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAK,sCACLC,YAAa,mBACbC,SAAU,SAPO,cAGrBE,EAHqB,yBASdA,GATc,gCAWrBC,QAAQC,IAAR,MAXqB,yDAAH,qDA4EuC+T,0BA7DlC,uCAAG,WAAO7I,GAAP,eAAA5L,EAAA,+EAGXC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAI,iDAAD,OAAmDwL,GACtDvL,YAAa,mBACbC,SAAU,SAPY,cAG1BE,EAH0B,yBASnBA,GATmB,gCAW1BC,QAAQC,IAAR,MAX0B,yDAAH,sDA8D3BgU,wBA/CyB,uCAAG,WAAO9I,GAAP,eAAA5L,EAAA,+EAGTC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAI,+CAAD,OAAiDwL,GACpDvL,YAAa,mBACbC,SAAU,SAPU,cAGxBE,EAHwB,yBASjBA,GATiB,gCAWxBC,QAAQC,IAAR,MAXwB,yDAAH,sDA+CAiU,+BAhCO,uCAAG,WAAO5D,GAAP,eAAA/Q,EAAA,+EAGhBC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAI,6DAAD,OAA+D2Q,GAClE1Q,YAAa,mBACbC,SAAU,SAPiB,cAG/BE,EAH+B,yBASxBA,GATwB,gCAW/BC,QAAQC,IAAR,MAX+B,yDAAH,sDAgCyBkU,2BAjB7B,uCAAG,WAAO7D,GAAP,eAAA/Q,EAAA,+EAGZC,IAAEC,KAAK,CAClBC,KAAM,MACNC,IAAI,wDAAD,OAA0D2Q,GAC7D1Q,YAAa,mBACbC,SAAU,SAPa,cAG3BE,EAH2B,yBASpBA,GAToB,gCAW3BC,QAAQC,IAAR,MAX2B,yDAAH,uDCmMjBmU,GAtRK,WAChB,IAAInT,EAAUC,cACd,EAA8BC,mBAAS,IAAvC,mBAAOqI,EAAP,KAAgBC,EAAhB,KACA,EAA4CtI,mBAAS,IAArD,mBAAOkT,EAAP,KAAuBC,EAAvB,KACA,EAAgCnT,mBAAS,IAAzC,mBAAO4O,EAAP,KAAiBC,EAAjB,KACA,EAAkC7O,mBAAS,IAA3C,mBAAO4G,EAAP,KAAkBS,EAAlB,KACA,EAA8CrH,oBAAS,GAAvD,mBAAOoT,EAAP,KAAwBC,EAAxB,KACA,EAA4CrT,mBAAS,IAArD,mBAAOsT,EAAP,KAAuBC,EAAvB,KAEAhS,oBAAS,sBAAC,gCAAAnD,EAAA,sEACmBsJ,EAAWf,kBAD9B,cACFkB,EADE,OAENR,EAAa9E,KAAKuF,MAAMD,IAFlB,SAGiB2L,GAAWb,gBAH5B,cAGFlJ,EAHE,OAINnB,EAAWmB,GACX0J,EAAkB1J,GALZ,UAMkB+J,GAAWd,yBAN7B,QAMFrD,EANE,OAONR,EAAYQ,GAPN,4CAQP,IAEChH,GACAA,EAAQsB,MAAK,SAACvL,EAAGwL,GAAJ,OAAWxL,EAAEqE,GAAKmH,EAAEnH,GAAM,EAAKrE,EAAEqE,GAAKmH,EAAEnH,IAAO,EAAI,KAGpE,IA0GI0C,EA1GE6N,EAA0B,uCAAG,WAAOxL,GAAP,eAAApJ,EAAA,6DAC/BqV,SAASC,eAAe,WAAW9P,MAAQ,eAC3C6P,SAASC,eAAe,eAAe9P,MAAQ,sBAFhB,SAGR4P,GAAWR,2BAA2BxL,GAH9B,OAG3BiC,EAH2B,OAI/BnB,EAAWmB,GAJoB,2CAAH,sDAO1BsJ,EAA8B,uCAAG,WAAOvL,GAAP,eAAApJ,EAAA,6DACnCqV,SAASC,eAAe,WAAW9P,MAAQ,eAC3C6P,SAASC,eAAe,WAAW9P,MAAQ,kBAFR,SAGZ4P,GAAWT,+BAA+BvL,GAH9B,OAG/BiC,EAH+B,OAInCnB,EAAWmB,GAJwB,2CAAH,sDAc9BoJ,EAAyB,uCAAG,WAAO7I,GAAP,eAAA5L,EAAA,6DAC9BqV,SAASC,eAAe,WAAW9P,MAAQ,eAC3C6P,SAASC,eAAe,WAAW9P,MAAQ,kBAC3C6P,SAASC,eAAe,eAAe9P,MAAQ,sBAHjB,SAIP4P,GAAWX,0BAA0B7I,GAJ9B,OAI1BP,EAJ0B,OAK9BnB,EAAWmB,GALmB,2CAAH,sDAQzBqJ,EAAuB,uCAAG,WAAO9I,GAAP,eAAA5L,EAAA,6DAC5BqV,SAASC,eAAe,WAAW9P,MAAQ,eAC3C6P,SAASC,eAAe,WAAW9P,MAAQ,kBAC3C6P,SAASC,eAAe,eAAe9P,MAAQ,sBAHnB,SAIL4P,GAAWV,wBAAwB9I,GAJ9B,OAIxBP,EAJwB,OAK5BnB,EAAWmB,GALiB,2CAAH,sDAQzBkK,EAAmB,yBAAQrQ,MAAO,CAAEQ,gBAAiB,SAAWgO,MAAM,cAAcjO,GAAG,UACvFJ,SAAU,SAACC,IAxBoB,SAACwD,GAChCuM,SAASC,eAAe,WAAW9P,MAAQ,kBAC3C6P,SAASC,eAAe,eAAe9P,MAAQ,sBAC/C,IAAI6F,EAAayJ,EAAe7I,QAAO,SAAA/F,GAAM,OAAIA,EAAOO,oBAAsBqC,KAC9EoB,EAAWmB,GAoBQmK,CAA2BlQ,EAAEC,OAAOC,QADpC,UAEnB,wBAAQmO,UAAQ,EAACR,UAAQ,EAAzB,0BACC3C,EAASrJ,KAAI,SAAAnH,GACV,OAAO,wBAAQwF,MAAOxF,EAAEwJ,KAAjB,SAAwBxJ,EAAEwJ,UAJlB,OAOnBiC,EAA2B,yBAAQvG,MAAO,CAAEQ,gBAAiB,SAAWgO,MAAM,cAAcjO,GAAG,UAC/FJ,SAAU,SAACC,GAAQsP,EAA2BtP,EAAEC,OAAOC,QAD5B,UAE3B,wBAAQmO,UAAQ,EAACR,UAAQ,EAAzB,6BACC3K,EAAUrB,KAAI,SAAA2C,GACX,OAAO,wBAAQtE,MAAOsE,EAAEN,KAAjB,SAAwBM,EAAEN,UAJV,OAO3BkC,EAA+B,yBAAQxG,MAAO,CAAEQ,gBAAiB,SAAWgO,MAAM,cAAcjO,GAAG,cACnGJ,SAAU,SAACC,GAAQqP,EAA+BrP,EAAEC,OAAOC,QAD5B,UAE/B,wBAAQmO,UAAQ,EAACR,UAAQ,EAAzB,iCACC3K,EAAUrB,KAAI,SAAA2C,GACX,OAAO,wBAAQtE,MAAOsE,EAAEN,KAAjB,SAAwBM,EAAEN,UAJN,OAO7BmC,EAAa,SAACC,GAChB,IAAIC,EAAQD,EAAKjI,MAAM,KAAK,GACxBmI,EAAQF,EAAKjI,MAAM,KAAK,GAG5B,OADAiI,GADAA,EAAOC,EAAQ,IAAMC,GACTC,QAAQ,IAAK,MAgCvBG,EAAS,SAAChG,EAAQiG,GACpB,OAAO,qBAAIpG,QAAS,YA7BE,SAACG,GACvB,IAAIC,EAAc,IAAIC,KACD,IAAIA,KAAKF,EAAOG,gBAClBC,UAAYH,EAAYG,UAE1B,aADFzG,aAAaC,QAAQ,OAE5B0E,IAAKC,KAAK,CACNK,MAAO,gCACP2Q,UAAW,CACPC,MAAO,yCAEXC,UAAW,CACPD,MAAO,2CAIfT,GAAmB,GACnBE,EAAkBjP,IAGtB1B,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,sCACPF,KAAK,qCAMegR,CAAkB1P,IAAW2B,UAAU,YAA5D,UACH,6BAAK3B,EAAO7B,KACZ,6BAAK6B,EAAOO,qBACZ,6BAAKP,EAAOQ,iBACZ,6BAAKR,EAAOS,qBACZ,6BAAKgF,EAAWzF,EAAOG,kBACvB,6BAAKsF,EAAWzF,EAAOU,gBACvB,6BAAKV,EAAOkG,qBAPoED,IAYpFlC,IACAlD,EAAkB,wBAAOtB,GAAG,aAAaoB,OAAO,IAA9B,UAEd,gCACI,+BACI,oCACA,iDACA,iDACA,qDACA,gDACA,8CACA,wDAGR,gCACKoD,EAAQ9C,KAAI,SAACjB,EAAQiG,GAClB,OAAOD,EAAOhG,EAAQiG,YAMtC,IAuFI0J,EAkBJ,MAjBuC,OAAnC1R,KAAKC,UAAU8Q,KACfW,EACI,qCAAO,uBAAP,IAAc,uBACV,iDADJ,IAC6B,uBACzB,sBAAM3Q,MAAO,CAAEC,WAAY,QAA3B,mBAFJ,IAEuD+P,EAAe7Q,GAFtE,IAE0E,uBAF1E,IAEiF,uBAC7E,sBAAMa,MAAO,CAAEC,WAAY,QAA3B,qCAHJ,IAGyE+P,EAAezO,mBAHxF,IAG4G,uBAH5G,IAGmH,uBAC/G,sBAAMvB,MAAO,CAAEC,WAAY,QAA3B,gCAJJ,IAIoE+P,EAAexO,eAJnF,IAImG,uBAJnG,IAI0G,uBACtG,sBAAMxB,MAAO,CAAEC,WAAY,QAA3B,oCALJ,IAKwE+P,EAAevO,mBALvF,IAK2G,uBAL3G,IAKkH,uBAC9G,sBAAMzB,MAAO,CAAEC,WAAY,QAA3B,+BANJ,IAMmEwG,EAAWuJ,EAAe7O,gBAAgB,uBAN7G,IAMoH,uBAChH,sBAAMnB,MAAO,CAAEC,WAAY,QAA3B,6BAPJ,IAOiEwG,EAAWuJ,EAAetO,cAP3F,IAO0G,uBAP1G,IAOiH,uBAC7G,sBAAM1B,MAAO,CAAEC,WAAY,QAA3B,kCARJ,IAQsE+P,EAAe9I,iBARrF,IAQuG,uBARvG,IAQ8G,uBAC1G,uBAAOjM,KAAK,SAASqF,MAAM,QAAQN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,WAAQkP,GAAmB,MAT/I,IAS6J,IACzJ,uBAAO9U,KAAK,SAASqF,MAAM,WAAWN,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgC9B,QAAS,kBA3F7G,WACd,IAAIG,EAAS/B,KAAKC,UAAU,CACxBC,GAAI6Q,EAAe7Q,GACnBoC,mBAAoByO,EAAezO,mBACnCC,eAAgBwO,EAAexO,eAC/BC,mBAAoBuO,EAAevO,mBACnCN,eAAgB6O,EAAe7O,eAC/BO,aAAcsO,EAAetO,aAC7BwF,iBAAkB8I,EAAe9I,mBAErC5H,IAAKC,KAAK,CACNK,MAAO,gBACPF,KAAM,6CACNC,KAAM,UACNyH,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,iBACpB/H,KARH,uCAQQ,WAAOlE,GAAP,eAAAR,EAAA,0DACAQ,EAAOkM,YADP,gCAEgBrJ,EAAY7B,eAAe0E,GAF3C,QAGY,KADRiK,EAFJ,QAII3L,IAAKC,KACD,mCACA,gCACA,WACFC,MAAK,WACH,IAAI2G,EAAapB,EACbkC,EAAQd,EAAWyB,WAAU,SAAA5G,GAAM,OAAIA,EAAO7B,KAAO6Q,EAAe7Q,MACxEgH,EAAWc,GAAOC,mBAClBlC,EAAWmB,GACX8J,EAAkB,IAClBF,GAAmB,MAGX,MAAR9E,EACA3L,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,4BACPF,KAAM,oCAGE,MAARuL,EACA3L,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,kBACPF,KAAM,oCAGVJ,IAAKC,KAAK,CACNI,KAAM,QACNC,MAAO,0BACPF,KAAM,8BAlCtB,2CARR,uDAiFiIkR,UAK7H,oCAAM,uBACRd,EAgBIa,EAfF,gCACI,yCADJ,KACsB,uBADtB,IAC6B,uBACzB,uBAAO1V,KAAK,SAAS4F,QAAS,WA5GtCsP,SAASC,eAAe,WAAW9P,MAAQ,eAC3C6P,SAASC,eAAe,WAAW9P,MAAQ,kBAC3C6P,SAASC,eAAe,eAAe9P,MAAQ,sBAC/C6P,SAASC,eAAe,aAAa9P,MAAQ,GAC7C6P,SAASC,eAAe,WAAW9P,MAAQ,GAC3C0E,EAAW4K,IAwGCjN,UAAU,gCAAgC3C,MAAO,CAAEU,MAAO,QAAUJ,MAAM,cAHlF,IAGkG,IAC9F,uBAAOrF,KAAK,SAAS+E,MAAO,CAAEU,MAAO,QAAUiC,UAAU,gCAAgCrC,MAAM,UAC3FO,QAAS,YA1CV,WAEX,OADWlG,aAAaC,QAAQ,QAE5B,IAAK,gBACD4B,EAAQiD,KAAK,kBACb,MACJ,IAAK,kBACDjD,EAAQiD,KAAK,oBACb,MACJ,IAAK,WACDjD,EAAQiD,KAAK,qBACb,MACJ,QACIuP,OAAOC,SAASC,KAAO,+BA6BF2B,MALzB,IAKwC,uBALxC,IAK+C,uBAC1CR,EANL,IAMwB,IACnB9J,EAPL,IAOgC,IAC3BC,EARL,IAQoC,IARpC,IAQyC,uBARzC,IAQgD,uBAC5C,qDACA,uBAAOvL,KAAK,OAAOsF,GAAG,YAAYJ,SAAU,SAACC,GAAQmP,EAA0BnP,EAAEC,OAAOC,UAV5F,IAU0G,IACtG,mDACA,uBAAOrF,KAAK,OAAOsF,GAAG,UAAUJ,SAAU,SAACC,GAAQoP,EAAwBpP,EAAEC,OAAOC,UAZxF,IAYqG,uBAZrG,IAY4G,uBACvGuB,SCpPFiP,GA9BE,WACb,IAAItU,EAAUC,cAmBd,OAjBAwB,qBAAU,WAEN,OADWtD,aAAaC,QAAQ,SAE5B,IAAK,gBACD4B,EAAQiD,KAAK,kBACb,MACJ,IAAK,kBACDjD,EAAQiD,KAAK,oBACb,MACJ,IAAK,WACDjD,EAAQiD,KAAK,qBACb,MACJ,QACIjD,EAAQiD,KAAK,eAEtB,IAEK,qBAAKc,GAAG,KAAR,SACJ,eAAC,IAAD,WACI,eAAC,IAAD,CAAO2C,KAAK,YAAZ,cAAyB,cAAC,EAAD,IAAzB,OACA,eAAC,IAAD,CAAOA,KAAK,WAAZ,cAAwB,cAAC,EAAD,IAAxB,OACA,eAAC,IAAD,CAAOA,KAAK,SAAZ,cAAuB,cAAC,GAAD,IAAvB,OACA,eAAC,IAAD,CAAOA,KAAK,WAAZ,cAAyB,cAAC,GAAD,IAAzB,aCpBG6N,OARf,WACE,OACE,qBAAKpO,UAAU,MAAf,SACE,cAAC,GAAD,OCKSqO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1R,MAAK,YAAkD,IAA/C2R,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFtB,SAASC,eAAe,SAM1BY,O","file":"static/js/main.1048c9b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import $ from 'jquery';\r\nconst jwt = localStorage.getItem('JWT')\r\n\r\nconst getCustomerDetails = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Customer/GetCustomerDetails',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst updatePassword = async (currentPassword, password) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"PUT\",\r\n            url: `/api/Customer/ChangeCustomerPassword?oldPassword=${currentPassword}&newPassword=${password}`,\r\n            contentType: 'application/json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst updateCustomer = async (customer) => {\r\n    try {\r\n        await $.ajax({\r\n            url: \"/api/Customer/UpdateCustomerDetails\",\r\n            type: \"PUT\",\r\n            contentType: 'application/json',\r\n            data: customer,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst deleteTicket = async (ticket) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"DELETE\",\r\n            url: '/api/Customer/CancelTicketPurchase',\r\n            contentType: 'application/json',\r\n            data: ticket,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n\r\nconst getAllTickets = async () => {\r\n    let result\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Customer/GetAllCustomerFlights',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst purchaseTicket = async (ticket) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"POST\",\r\n            url: '/api/Customer/PurchaseTicket',\r\n            contentType: 'application/json',\r\n            data: ticket,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return error.status\r\n    }\r\n}\r\n\r\nexport default { getCustomerDetails, updatePassword, updateCustomer, deleteTicket, getAllTickets, purchaseTicket }","import React, { Component, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport customerDAL from '../../DAL/customerDAL.js'\r\nimport Swal from 'sweetalert2';\r\nimport '../alerts.css'\r\n\r\nconst CustomerDetailsComp = () => {\r\n    let history = useHistory();\r\n    const [user, setUser] = useState({})\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [phoneNum, setPhoneNum] = useState('')\r\n    const [creditCard, setCreditCard] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n    const [prefix, setPrefix] = useState('')\r\n\r\n    useEffect(async () => {\r\n        let response = null\r\n        response = await customerDAL.getCustomerDetails()\r\n        if (response !== null) {\r\n            setUser(response)\r\n            setFirstName(response.First_Name)\r\n            setLastName(response.Last_Name)\r\n            setAddress(response.Address)\r\n            setPhoneNum(response.Phone_No)\r\n            setCreditCard(response.Credit_Card_No)\r\n            setPrefix(response.Phone_No.split('-')[0])\r\n            if (response.User != undefined) {\r\n                setUserName(response.User.User_Name)\r\n                setPassword(response.User.Password)\r\n                setEmail(response.User.Email)\r\n                setCurrentPassword(response.User.Password)\r\n                setConfirm(response.User.Password)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const updateCustomer = async () => {\r\n        let result\r\n        let phone = phoneNum.includes('-') ? phoneNum.split('-')[1] : phoneNum;\r\n        let customer = JSON.stringify({\r\n            Id: user.Id,\r\n            First_Name: firstName,\r\n            Last_Name: lastName,\r\n            Address: address,\r\n            Phone_No: prefix + '-' + phone,\r\n            Credit_Card_No: creditCard,\r\n            User_Id: user.User_Id,\r\n            User: {\r\n                Id: user.User_Id,\r\n                User_Name: userName,\r\n                Password: password,\r\n                Email: email,\r\n                User_Role: 3\r\n            }\r\n        })\r\n        result = await customerDAL.updateCustomer(customer)\r\n        if (result === true) {\r\n            Swal.fire(\r\n                'Your details have been updated succefully!',\r\n                'You can change it again anytime',\r\n                'success'\r\n            ).then(() => {\r\n                history.push('/customer/tickets')\r\n                history.push('/customer/details')\r\n            })\r\n        } else {\r\n            if (result.status === 403) {\r\n                let text = result.error.split(\"_\")[1];\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: `${text} is allready taken`\r\n                })\r\n            }\r\n            if (result.status === 401) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: `You are not allowed to update details`\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateDetails = async () => {\r\n        let result;\r\n        let error = validateDetails();\r\n        if (error !== '') {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: `${error}`\r\n            })\r\n        } else {\r\n            if (currentPassword !== password) {\r\n                result = await customerDAL.updatePassword(currentPassword, password)\r\n                if (result === true) {\r\n                    updateCustomer();\r\n                } else {\r\n                    if (result.status === 403) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: `New password can\\'t be like the old one`\r\n                        }).then(() => {\r\n                            history.push('/customer/tickets')\r\n                            history.push('/customer/details')\r\n                        })\r\n                    }\r\n                    if (result.status === 401) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: `You are not allowed to change password`\r\n                        }).then(() => {\r\n                            history.push('/customer/tickets')\r\n                            history.push('/customer/details')\r\n                        })\r\n                    }\r\n                }\r\n            } else {\r\n                updateCustomer();\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateDetails = () => {\r\n        if (userName.length < 5) {\r\n            return 'User name is too short'\r\n        } else {\r\n            if (userName.length > 20) {\r\n                return 'User name is too long'\r\n            }\r\n        }\r\n        if (password !== confirm) {\r\n            return 'You must confirm your password currectly!'\r\n        }\r\n        if (password.length < 5) {\r\n            return 'Your password is too short'\r\n        } else {\r\n            if (password.length > 20) {\r\n                return 'Your password is too long'\r\n            }\r\n        }\r\n        if (firstName.length < 2) {\r\n            return 'First name is too short'\r\n        }\r\n        if (lastName.length < 2) {\r\n            return 'Last name is too short'\r\n        }\r\n        if (address.length < 10) {\r\n            return 'Address is too short'\r\n        }\r\n        if (phoneNum.split('-')[1].length !== 7) {\r\n            return 'Phone number must include 7 digits'\r\n        }\r\n        if (creditCard.length !== 16) {\r\n            return 'Credit card number must include 16 digits'\r\n        }\r\n        if (!email.includes('@') || email.length < 4) {\r\n            return 'Email must be in right format'\r\n        }\r\n        return '';\r\n    }\r\n\r\n    return (<div>\r\n        <h1>Personal Details</h1> <br />\r\n        <span style={{ fontWeight: 'bold' }}> First Name: </span> <input type='text' defaultValue={user.First_Name}\r\n            onChange={(e) => { setFirstName(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Last Name: </span> <input type='text' defaultValue={user.Last_Name}\r\n            onChange={(e) => { setLastName(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Address: </span> <input type='text' defaultValue={user.Address}\r\n            onChange={(e) => { setAddress(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Phone Number: </span>\r\n        <select id=\"prefixNum\" value={prefix} onChange={(e) => setPrefix(e.target.value)}>\r\n            <option value=\"050\">050</option>\r\n            <option value=\"051\">051</option>\r\n            <option value=\"052\">052</option>\r\n            <option value=\"053\">053</option>\r\n            <option value=\"054\">054</option>\r\n            <option value=\"055\">055</option>\r\n        </select>\r\n        <input type='text' defaultValue={phoneNum.split('-')[1]}\r\n            onChange={(e) => { setPhoneNum(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Credit Card Number: </span> <input type='text' defaultValue={user.Credit_Card_No}\r\n            onChange={(e) => { setCreditCard(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> User Name: </span> <input type='text' defaultValue={userName}\r\n            onChange={(e) => { setUserName(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Password: </span> <input type='text' defaultValue={password}\r\n            onChange={(e) => { setPassword(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Confirm Password: </span> <input type='text' defaultValue={confirm}\r\n            onChange={(e) => { setConfirm(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Email: </span> <input type='email' defaultValue={email}\r\n            onChange={(e) => { setEmail(e.target.value) }} /> <br /> <br />\r\n        <input type='button' value='Edit' style={{ backgroundColor: 'whitesmoke', height: '50px', width: '100px', fontSize: '25px', fontFamily: 'Franklin Gothic Medium' }}\r\n            onClick={updateDetails} />\r\n    </div>)\r\n}\r\n\r\nexport default CustomerDetailsComp;","import React, { Component } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport customerDAL from '../../DAL/customerDAL.js'\r\nimport Swal from 'sweetalert2';\r\nimport '../alerts.css'\r\n\r\nconst CustomerFlightComp = (props) => {\r\n    let flight = props.flight\r\n    let history = useHistory();\r\n\r\n    const deleteTicket = async () => {\r\n        let currentDate = new Date();\r\n        let detpartureDate = new Date(flight.Departure_Time)\r\n        if (detpartureDate.getTime() > currentDate.getTime()) {\r\n            let ticket = JSON.stringify({\r\n                Id: flight.Ticket_Id,\r\n                Flight_Id: flight.Id,\r\n                AirlineCompanyName: flight.AirlineCompanyName,\r\n                OrigionCountry: flight.OrigionCountry,\r\n                DestinationCountry: flight.DestinationCountry,\r\n                Departure_Time: flight.Departure_Time,\r\n                Landing_Time: flight.Landing_Time\r\n            })\r\n            let result = await customerDAL.deleteTicket(ticket)\r\n            if (result === true) {\r\n                Swal.fire(\r\n                    'Ticket purchase was canceled succefully!',\r\n                    'You can purchase tickets to another flights',\r\n                    'success'\r\n                ).then(() => {\r\n                    history.push('/customer/details')\r\n                    history.push('/customer/tickets')\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'You can\\'t cancel ticket purchase',\r\n                    text: `You are not allowed to cancel purchase`\r\n                })\r\n            };\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'You can\\'t cancel ticket purchase',\r\n                text: `The flight has already taken off`\r\n            })\r\n        }\r\n    }\r\n\r\n    return (<div style={{ backgroundColor: 'whitesmoke', border: '1px solid black' }} >\r\n        <span style={{ fontWeight: 'bold' }}> Company: </span>  {flight.AirlineCompanyName} {' '}\r\n        <span style={{ fontWeight: 'bold' }}> Departure date: </span> {flight.Departure_Time.split('T')[0]} {' '}\r\n        <span style={{ fontWeight: 'bold' }}> Origion Country: </span>  {flight.OrigionCountry} {' '}\r\n        <span style={{ fontWeight: 'bold' }}> Departure Time: </span>  {flight.Departure_Time.split('T')[1]} {' '} <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Destination Country: </span>  {flight.DestinationCountry} {' '}\r\n        <span style={{ fontWeight: 'bold' }}> Landing date: </span>  {flight.Landing_Time.split('T')[0]} {' '}\r\n        <span style={{ fontWeight: 'bold' }}> Landing Time: </span>  {flight.Landing_Time.split('T')[1]} {' '} <br /> <br />\r\n        <input type=\"button\" style={{ backgroundColor: 'salmon' }} value=\"Cancel Ticket\" onClick={deleteTicket} />\r\n    </div>)\r\n}\r\n\r\nexport default CustomerFlightComp;","import React, { useEffect, useState } from 'react'\r\nimport CustomerFlightComp from './CustomerFlightComp';\r\nimport customerDAL from '../../DAL/customerDAL.js'\r\n\r\nconst CustomerTicketsComp = () => {\r\n    const [tickets, setTickets] = useState([])\r\n\r\n    useEffect(async () => {\r\n        let ticketsArr = await customerDAL.getAllTickets()\r\n        if (ticketsArr !== false) {\r\n            setTickets(ticketsArr)\r\n        }\r\n        else {\r\n            console.log(\"error\");\r\n        }\r\n    }, [])\r\n\r\n    let flightsToRender;\r\n    if (tickets.length !== 0) {\r\n        flightsToRender = tickets.map(flight => {\r\n            return <CustomerFlightComp key={flight.id} flight={flight} />\r\n        })\r\n    }\r\n\r\n    return (<div>\r\n        <h1> viewing & managing your tickets</h1> <br /> <br />\r\n        {flightsToRender}  <br />  <br />\r\n    </div>)\r\n}\r\n\r\nexport default CustomerTicketsComp;","import React, { Component } from 'react'\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nconst Navigation = styled.header`\r\n  width: 100%;\r\n  border-bottom: 10px solid #222;\r\n  z-index: 1;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0px 100px 0;\r\n  height: 140px;\r\n  margin-bottom: 60px;\r\n  background: #f8f8f8;\r\n\r\n  .logo a {\r\n    padding-top: 33px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    clear: both;\r\n    padding-bottom: 30px;\r\n    text-decoration: none;\r\n\r\n    p {\r\n      width: 500px;\r\n      display: block;\r\n    }\r\n    em {\r\n      font-size: 0.5em;\r\n      float: left;\r\n      display: block;\r\n      img {\r\n        display: inline-block;\r\n        margin-top: 5px;\r\n        width: 15px;\r\n        float: left;\r\n      }\r\n      .letterhead {\r\n        display: inline-block;\r\n        line-height: 260%;\r\n        float: left;\r\n      }\r\n    }\r\n  }\r\n  .gray {\r\n    color: #ccc;\r\n  }\r\n  a {\r\n    color: #222;\r\n    opacity: 0.55;\r\n    transition: all 0.6s;\r\n    color: #222;\r\n    font-size: 1em;\r\n  }\r\n  a:hover {\r\n    opacity: 1;\r\n  }\r\n  .fa-bars {\r\n    display: none;\r\n    color: #222;\r\n    font-size: 2rem;\r\n  }\r\n  nav {\r\n    ul {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    li {\r\n      margin: 0 15px;\r\n      justify-content: space-between;\r\n      font-size: 1em;\r\n    }\r\n    a {\r\n      font-size: 1em;\r\n      text-decoration: none;\r\n      .active {\r\n        color: tomato;\r\n      }\r\n    }\r\n    a.active {\r\n      color: #222;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    padding: 0px;\r\n    .logo {\r\n      padding-left: 15px;\r\n      padding-top: 0px !important;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    height: auto;\r\n    min-height: 50px;\r\n    display: block;\r\n    position: relative;\r\n    .logo {\r\n      width: 100%;\r\n      display: block;\r\n      padding-top: 20px;\r\n      margin: 0px;\r\n      margin-left: -5px;\r\n      a {\r\n        padding: 20px 0px;\r\n      }\r\n    }\r\n    .fa-bars {\r\n      display: inline-block;\r\n      position: absolute;\r\n      top: 10px;\r\n      right: 10px;\r\n      cursor: pointer;\r\n    }\r\n    ul.collapsed {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      flex-wrap: wrap;\r\n\r\n      overflow: hidden;\r\n      max-height: 0;\r\n      -moz-transition-duration: 0.4s;\r\n      -webkit-transition-duration: 0.4s;\r\n      -o-transition-duration: 0.4s;\r\n      transition-duration: 0.4s;\r\n      -moz-transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n      -webkit-transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n      -o-transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n      transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n\r\n      &.is-expanded {\r\n        overflow: hidden;\r\n        max-height: 500px; /* approximate max height */\r\n        -moz-transition-duration: 0.4s;\r\n        -webkit-transition-duration: 0.4s;\r\n        -o-transition-duration: 0.4s;\r\n        transition-duration: 0.4s;\r\n        -moz-transition-timing-function: ease-in;\r\n        -webkit-transition-timing-function: ease-in;\r\n        -o-transition-timing-function: ease-in;\r\n        transition-timing-function: ease-in;\r\n      }\r\n      li {\r\n        padding: 15px 10px;\r\n        margin: 0px 0px;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass CustomerNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isExpanded: false\r\n    };\r\n  }\r\n\r\n  handleToggle(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded\r\n    });\r\n  }\r\n  render() {\r\n    const { isExpanded } = this.state;\r\n    return (\r\n      <Navigation>\r\n        <nav className=\"nav\">\r\n          <i\r\n            className=\"fa fa-bars\"\r\n            aria-hidden=\"true\"\r\n            onClick={e => this.handleToggle(e)}\r\n          />\r\n          <ul className={`collapsed ${isExpanded ? \"is-expanded\" : \"\"}`}>\r\n            <NavLink activeClassName=\"active\" to=\"/customer/tickets\">\r\n              <li>Tickets</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/customer/details\">\r\n              <li>Details</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/flights\">\r\n              <li>Flights</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/FlightPages/loginPage.html\">\r\n              <li>Log Out</li>\r\n            </NavLink>\r\n          </ul>\r\n        </nav>\r\n      </Navigation>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(CustomerNavbar)","import React, { Component, useEffect } from 'react'\r\nimport { Route, useHistory, Switch } from 'react-router-dom';\r\nimport CustomerDetailsComp from './CustomerDetailsComp.js'\r\nimport CustomerTicketsComp from './CustomerTicketsComp'\r\nimport Navbar from './CustomerNavbar.js'\r\nimport '../navbar.css'\r\nimport '../background.css'\r\n\r\nconst MainCustomerComp = () => {\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        history.push('/customer/tickets')\r\n    }, [])\r\n\r\n    return (<div>\r\n        <Navbar />\r\n        <Switch>\r\n            <div className=\"container\">\r\n                <Route path='/customer/tickets'> <CustomerTicketsComp /> </Route>\r\n                <Route path='/customer/details'> <CustomerDetailsComp /> </Route>\r\n            </div>\r\n        </Switch>\r\n    </div>)\r\n}\r\n\r\nexport default MainCustomerComp;","import $ from 'jquery';\r\nconst jwt = localStorage.getItem('JWT')\r\n\r\nconst getAirlineFlights = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Airline/GetAllAirlineFlights',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getFlightsTickets = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Airline/GetAllAirlineTickets',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst GetAllCountries = async () => {\r\n    let countries;\r\n    try {\r\n        countries = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Anonymous/GetAllCountries',\r\n            contentType: 'application/json'\r\n        })\r\n        return countries\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst updateFlight = async (flight) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"PUT\",\r\n            url: '/api/Airline/UpdateFlight',\r\n            contentType: 'application/json',\r\n            data: flight,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return false\r\n    }\r\n}\r\n\r\nconst deleteFlight = async (flight) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"DELETE\",\r\n            url: '/api/Airline/CancelFlight',\r\n            contentType: 'application/json',\r\n            data: flight,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n\r\nconst getAirlineDetails = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Airline/GetAirlineDetails',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst createNewFlight = async (flight) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"POST\",\r\n            url: '/api/Airline/CreateNewFlight',\r\n            contentType: 'application/json',\r\n            data: flight,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n\r\nconst updatePassword = async (currentPassword, password) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"PUT\",\r\n            url: `/api/Airline/ChangeAirlinePassword?oldPassword=${currentPassword}&newPassword=${password}`,\r\n            contentType: 'application/json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst updateAirline = async (airline) => {\r\n    try {\r\n        await $.ajax({\r\n            url: \"/api/Airline/UpdateAirlineDetails\",\r\n            type: \"PUT\",\r\n            contentType: 'application/json',\r\n            data: airline,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nexport default {\r\n    getAirlineFlights, getFlightsTickets, GetAllCountries,\r\n    updateFlight, deleteFlight, getAirlineDetails, createNewFlight,\r\n    updatePassword, updateAirline\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport airlineDAL from '../../DAL/airlineDAL.js'\r\nimport '../../tableDesign.css'\r\nimport $ from 'jquery';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AirlineDetailsComp = () => {\r\n    let history = useHistory();\r\n    const [airline, setAirline] = useState({})\r\n    const [countries, setCountries] = useState([])\r\n    const [companyName, setCompanyName] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n\r\n    useEffect(async () => {\r\n        let airline = await airlineDAL.getAirlineDetails();\r\n        setAirline(airline)\r\n        setCountry(airline.Country_Name)\r\n        setCompanyName(airline.Name)\r\n        if (airline.User != undefined) {\r\n            setUserName(airline.User.User_Name)\r\n            setPassword(airline.User.Password)\r\n            setEmail(airline.User.Email)\r\n            setCurrentPassword(airline.User.Password)\r\n            setConfirm(airline.User.Password)\r\n        }\r\n        let countriesArr = await airlineDAL.GetAllCountries();\r\n        setCountries(JSON.parse(countriesArr))\r\n        setTimeout(() => {\r\n            $(`#countries option:contains(${airline.Country_Name})`).prop('selected', true)\r\n        }, 10)\r\n    }, [])\r\n\r\n    let countriesSelector = <select id=\"countries\" onChange={(e) => setCountry(e.target.value)}>\r\n        {countries.map(c => {\r\n            return <option value={c.Name}>{c.Name}</option>\r\n        })} </select>\r\n\r\n\r\n    const validateDetails = () => {\r\n        if (userName.length < 5) {\r\n            return 'User name is too short'\r\n        } else {\r\n            if (userName.length > 20) {\r\n                return 'User name is too long'\r\n            }\r\n        }\r\n        if (password !== confirm) {\r\n            return 'You must confirm your password currectly!'\r\n        }\r\n        if (password.length < 5) {\r\n            return 'Your password is too short'\r\n        } else {\r\n            if (password.length > 20) {\r\n                return 'Your password is too long'\r\n            }\r\n        }\r\n        if (companyName.length < 3) {\r\n            return 'Company name is too short'\r\n        }\r\n        if (!email.includes('@') || email.length < 4) {\r\n            return 'Email must be in right format'\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const updateAirline = async () => {\r\n        let result\r\n        let _airline = JSON.stringify({\r\n            Id: airline.Id,\r\n            Name: companyName,\r\n            Country_Name: country,\r\n            User_Id: airline.User_Id,\r\n            User: {\r\n                Id: airline.User_Id,\r\n                User_Name: userName,\r\n                Password: password,\r\n                Email: email,\r\n                User_Role: 2\r\n            }\r\n        })\r\n        result = await airlineDAL.updateAirline(_airline)\r\n        if (result === true) {\r\n            Swal.fire(\r\n                'Your details have been updated succefully!',\r\n                'You can change it again anytime',\r\n                'success'\r\n            ).then(() => {\r\n                history.push('/airline/flights')\r\n                history.push('/airline/details')\r\n            })\r\n        } else {\r\n            if (result.status === 403) {\r\n                let text = result.error.split(\"_\")[1];\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: `${text} is allready taken`\r\n                })\r\n            }\r\n            if (result.status === 401) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: `You are not allowed to update details`\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateDetails = async () => {\r\n        let result;\r\n        let error = validateDetails();\r\n        if (error !== '') {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: `${error}`\r\n            })\r\n        } else {\r\n            if (currentPassword !== password) {\r\n                result = await airlineDAL.updatePassword(currentPassword, password)\r\n                if (result === true) {\r\n                    updateAirline();\r\n                } else {\r\n                    if (result.status === 403) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: `New password can\\'t be like the old one`\r\n                        }).then(() => {\r\n                            history.push('/airline/flights')\r\n                            history.push('/airline/details')\r\n                        })\r\n                    }\r\n                    if (result.status === 401) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: `You are not allowed to change password`\r\n                        }).then(() => {\r\n                            history.push('/airline/flights')\r\n                            history.push('/airline/details')\r\n                        })\r\n                    }\r\n                }\r\n            } else {\r\n                updateAirline();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        <h1>Personal Details</h1> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Company Name: </span> <input type='text' defaultValue={airline.Name}\r\n            onChange={(e) => { setCompanyName(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Country: </span> {countriesSelector} <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> User Name: </span> <input type='text' defaultValue={userName}\r\n            onChange={(e) => { setUserName(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Email: </span> <input type='email' defaultValue={email}\r\n            onChange={(e) => { setEmail(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Password: </span> <input type='text' defaultValue={password}\r\n            onChange={(e) => { setPassword(e.target.value) }} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Confirm Password: </span> <input type='text' defaultValue={confirm}\r\n            onChange={(e) => { setConfirm(e.target.value) }} /> <br /> <br />\r\n        <input type='button' value='Edit' style={{ height: '50px', width: '100px', fontSize: '25px' }}\r\n            className=\"button btnBorder btnLightBlue\" onClick={() => updateDetails()} />\r\n    </div>)\r\n}\r\n\r\nexport default AirlineDetailsComp;","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport airlineDAL from '../../DAL/airlineDAL.js'\r\nimport $ from 'jquery';\r\nimport '../../tableDesign.css'\r\nimport 'bootstrap';\r\nimport { Modal } from 'react-bootstrap'\r\nimport Swal from 'sweetalert2';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst AirlineFlightsComp = () => {\r\n    let history = useHistory();\r\n    const [flights, setFlights] = useState([])\r\n    const [flightsTickets, setFlightsTickets] = useState([])\r\n    const [ticketsArr, setTicketsArr] = useState([])\r\n    const [countries, setCountries] = useState([])\r\n    const [flightToUpdate, setFlightToUpdate] = useState({})\r\n    const [showUpdateDiv, setShowUpdateDiv] = useState(false)\r\n\r\n    const [origionCountry, setOrigionCountry] = useState('')\r\n    const [destinationContry, setDestinationContry] = useState('')\r\n    const [departureTime, setDepartureTime] = useState('')\r\n    const [landingTime, setLandingTime] = useState('')\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    useEffect(async () => {\r\n        let flightsArr = await airlineDAL.getAirlineFlights();\r\n        setFlights(flightsArr)\r\n        let flightsTicketsArr = await airlineDAL.getFlightsTickets();\r\n        setFlightsTickets(flightsTicketsArr)\r\n        let countriesArr = await airlineDAL.GetAllCountries();\r\n        setCountries(JSON.parse(countriesArr))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            $(`#origionCountry option:contains(${flightToUpdate.OrigionCountry})`).prop('selected', true)\r\n            $(`#destinationCountry option:contains(${flightToUpdate.DestinationCountry})`).prop('selected', true)\r\n        }, 10)\r\n    }, [flightToUpdate])\r\n\r\n    if (flights) {\r\n        flights.sort((a, b) => (a.Id > b.Id) ? 1 : (a.Id < b.Id) ? -1 : 0)\r\n    }\r\n\r\n    let origionCountriesSelector = <select id=\"origionCountry\" onChange={(e) => setOrigionCountry(e.target.value)}>\r\n        {countries.map(c => {\r\n            return <option value={c.Name}>{c.Name}</option>\r\n        })} </select>\r\n    let destinationCountriesSelector = <select id=\"destinationCountry\" onChange={(e) => setDestinationContry(e.target.value)}>\r\n        {countries.map(c => {\r\n            return <option value={c.Name}>{c.Name}</option>\r\n        })} </select>\r\n\r\n    const designDate = (date) => {\r\n        let part1 = date.split(':')[0]\r\n        let part2 = date.split(':')[1]\r\n        date = part1 + ':' + part2\r\n        date = date.replace('T', ' ')\r\n        return date\r\n    }\r\n    const showCustomers = (id) => {\r\n        let ticketsArr = flightsTickets.filter(ticket => ticket.Flight_Id == id);\r\n        setTicketsArr(ticketsArr)\r\n        handleShow()\r\n    }\r\n\r\n    const showDiv = (flight) => {\r\n        setFlightToUpdate(flight)\r\n        setOrigionCountry(flight.OrigionCountry)\r\n        setDestinationContry(flight.DestinationCountry)\r\n        setDepartureTime(flight.Departure_Time)\r\n        setLandingTime(flight.Landing_Time)\r\n        setShowUpdateDiv(true)\r\n    }\r\n\r\n    const deleteFlight = (flight) => {\r\n        let currentDate = new Date();\r\n        let detpartureDate = new Date(flight.Departure_Time)\r\n        if (detpartureDate.getTime() > currentDate.getTime()) {\r\n            Swal.fire({\r\n                title: 'Are you sure you want to cancel this flight?',\r\n                text: \"All customers tickets purchases will be canceled\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, cancel it!'\r\n            }).then(async (result) => {\r\n                if (result.isConfirmed) {\r\n                    let res = await airlineDAL.deleteFlight(JSON.stringify(flight))\r\n                    if (res) {\r\n                        Swal.fire(\r\n                            'Flight has been canceled succefully!',\r\n                            'All customers tickets purchases are be canceled',\r\n                            'success'\r\n                        ).then(() => {\r\n                            history.push('/airline/details')\r\n                            history.push('/airline/flights')\r\n                        })\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not delete flight'\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'You can\\'t cancel Flight',\r\n                text: `The flight has already taken off`\r\n            })\r\n        }\r\n    }\r\n\r\n    const getRow = (flight, index) => {\r\n        return <tr className=\"popupOpen\" key={index}>\r\n            <td onClick={() => showCustomers(flight.Id)}>{flight.Id}</td>\r\n            <td>{flight.OrigionCountry}</td>\r\n            <td>{flight.DestinationCountry}</td>\r\n            <td>{designDate(flight.Departure_Time)}</td>\r\n            <td>{designDate(flight.Landing_Time)}</td>\r\n            <td>{flight.RemainingTickets}</td>\r\n            <td><input type='button' onClick={() => { showDiv(flight) }} className=\"button btnBorder btnBlueGreen\" value='Edit' /></td>\r\n            <td><input type='button' onClick={() => { deleteFlight(flight) }} className=\"button btnBorder btnLightBlue\" value='Cancel' /></td>\r\n        </tr>\r\n    }\r\n\r\n    let flightsToRender;\r\n    if (flights) {\r\n        flightsToRender = <table id='flightsTbl' border='1'>\r\n            {/* Creating table header */}\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Origion Country</th>\r\n                    <th>Destination Country</th>\r\n                    <th>Departure Time</th>\r\n                    <th>Landing Time</th>\r\n                    <th>Remaining Tickets</th>\r\n                    <th>Edit</th>\r\n                    <th>Cancel</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {flights.map((flight, index) => {\r\n                    return getRow(flight, index)\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    }\r\n\r\n    const updateFlight = () => {\r\n        let _departureTime = new Date(departureTime)\r\n        let _landingTime = new Date(landingTime)\r\n        if (_departureTime.getTime() > _landingTime.getTime()) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Could not update flight',\r\n                text: 'Departure time must be before landing time'\r\n            })\r\n        } else {\r\n            let flight = JSON.stringify({\r\n                Id: flightToUpdate.Id,\r\n                AirlineCompanyName: flightToUpdate.AirlineCompanyName,\r\n                OrigionCountry: origionCountry,\r\n                DestinationCountry: destinationContry,\r\n                Departure_Time: departureTime,\r\n                Landing_Time: landingTime,\r\n                RemainingTickets: flightToUpdate.RemainingTickets\r\n            })\r\n            Swal.fire({\r\n                title: 'Are you Ok with the changes?',\r\n                text: \"You might want to review the changed again\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, update details!'\r\n            }).then(async (result) => {\r\n                if (result.isConfirmed) {\r\n                    let res = await airlineDAL.updateFlight(flight)\r\n                    if (res === true) {\r\n                        Swal.fire(\r\n                            'Flight details have been updated succefully!',\r\n                            'Updated Data will be displayed in the website',\r\n                            'success'\r\n                        ).then(() => {\r\n                            let flightsArr = flights\r\n                            let index = flightsArr.findIndex(flight => flight.Id === flightToUpdate.Id)\r\n                            flightsArr[index] = JSON.parse(flight)\r\n                            setFlights(flightsArr)\r\n                            setShowUpdateDiv(false)\r\n                        })\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not update flight details'\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    let divUpdate\r\n    if (flightToUpdate !== {}) {\r\n        divUpdate = (\r\n            <div>  <br />\r\n                <span style={{ fontWeight: 'bold' }}> ID: </span> {flightToUpdate.Id} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Airline Company Name: </span> {flightToUpdate.AirlineCompanyName} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Origion Country: </span> {origionCountriesSelector} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Destination Country: </span> {destinationCountriesSelector} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Departure Time: </span> <input type='datetime-local'\r\n                    onChange={(e) => setDepartureTime(e.target.value)} defaultValue={flightToUpdate.Departure_Time} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Landing Time: </span> <input type='datetime-local'\r\n                    onChange={(e) => setLandingTime(e.target.value)} defaultValue={flightToUpdate.Landing_Time} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Remaining Tickets: </span> {flightToUpdate.RemainingTickets} <br /> <br />\r\n                <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\" onClick={() => { setShowUpdateDiv(false) }} /> {' '}\r\n                <input type='button' value='Update' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => updateFlight()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const ModalContent = () => {\r\n        return (\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <table border='1'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>First Name</th>\r\n                                <th>Last Name</th>\r\n                                <th>Address</th>\r\n                                <th>Phone</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {ticketsArr.map((ticket, index) => {\r\n                                return <tr key={index}>\r\n                                    <td>{ticket.Id}</td>\r\n                                    <td>{ticket.First_Name}</td>\r\n                                    <td>{ticket.Last_Name}</td>\r\n                                    <td>{ticket.Address}</td>\r\n                                    <td>{ticket.Phone_No}</td>\r\n                                </tr>\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n    let headline = show ? 'Flight\\'s passengers' : showUpdateDiv ? 'Update Flight' : 'Flights'\r\n\r\n    return (<div>\r\n        <h1>{headline}</h1>\r\n        {show ? <ModalContent /> : showUpdateDiv ? divUpdate : flightsToRender}\r\n    </div>)\r\n}\r\n\r\nexport default AirlineFlightsComp;","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport airlineDAL from '../../DAL/airlineDAL.js'\r\nimport '../../tableDesign.css'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst NewFlightComp = () => {\r\n    let history = useHistory();\r\n    let now = new Date();\r\n    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n    let currentTime = now.toISOString().slice(0, 16);\r\n\r\n    const [companyName, setCompanyName] = useState('')\r\n    const [countries, setCountries] = useState([])\r\n    const [origionCountry, setOrigionCountry] = useState('')\r\n    const [destinationContry, setDestinationContry] = useState('')\r\n    const [departureTime, setDepartureTime] = useState(currentTime)\r\n    const [landingTime, setLandingTime] = useState(currentTime)\r\n    const [ticketsAmount, seTticketsAmount] = useState(1)\r\n\r\n    useEffect(async () => {\r\n        let airline = await airlineDAL.getAirlineDetails();\r\n        setCompanyName(airline.Name)\r\n        let countriesArr = await airlineDAL.GetAllCountries();\r\n        setOrigionCountry(JSON.parse(countriesArr)[0].Name)\r\n        setDestinationContry(JSON.parse(countriesArr)[0].Name)\r\n        setCountries(JSON.parse(countriesArr))\r\n    }, [])\r\n\r\n    let origionCountriesSelector = <select id=\"origionCountry\" onChange={(e) => setOrigionCountry(e.target.value)}>\r\n        {countries.map(c => {\r\n            return <option value={c.Name}>{c.Name}</option>\r\n        })} </select>\r\n    let destinationCountriesSelector = <select id=\"destinationCountry\" onChange={(e) => setDestinationContry(e.target.value)}>\r\n        {countries.map(c => {\r\n            return <option value={c.Name}>{c.Name}</option>\r\n        })} </select>\r\n\r\n    const createNewFlight = () => {\r\n        let ticketsNum = parseFloat(ticketsAmount)\r\n        if (ticketsAmount < 1 || ticketsAmount === '' || !Number.isInteger(ticketsNum)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Invalid ticket amount',\r\n                text: 'Must be at least 1 and an integer number'\r\n            })\r\n        }\r\n        else {\r\n            let _departureTime = new Date(departureTime)\r\n            let _landingTime = new Date(landingTime)\r\n            if (_departureTime.getTime() > _landingTime.getTime()) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Could not create flight',\r\n                    text: 'Departure time must be before landing time'\r\n                })\r\n            } else {\r\n                let flight = JSON.stringify({\r\n                    AirlineCompanyName: companyName,\r\n                    OrigionCountry: origionCountry,\r\n                    DestinationCountry: destinationContry,\r\n                    Departure_Time: departureTime,\r\n                    Landing_Time: landingTime,\r\n                    RemainingTickets: ticketsAmount\r\n                })\r\n                Swal.fire({\r\n                    title: 'Are you sure you are OK with flight details?',\r\n                    text: \"you can review details before approving the creation\",\r\n                    icon: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#3085d6',\r\n                    cancelButtonColor: '#d33',\r\n                    confirmButtonText: 'Yes, create it!'\r\n                }).then(async (result) => {\r\n                    if (result.isConfirmed) {\r\n                        let res = await airlineDAL.createNewFlight(flight)\r\n                        if (res) {\r\n                            Swal.fire(\r\n                                'Flight has been created succefully!',\r\n                                'Flight will be displayed in the website',\r\n                                'success'\r\n                            ).then(() => {\r\n                                history.push('/airline/details')\r\n                                history.push('/airline/newFlight')\r\n                            })\r\n                        } else {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Something wrong happend',\r\n                                text: 'Could not create flight'\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        <h1>Create New flight</h1> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Airline Company Name: </span> {companyName} <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Origion Country: </span> {origionCountriesSelector} <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Destination Country: </span> {destinationCountriesSelector} <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Departure Time: </span> <input type='datetime-local' min={currentTime} defaultValue={currentTime}\r\n            onChange={(e) => setDepartureTime(e.target.value)} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Landing Time: </span> <input type='datetime-local' min={currentTime} defaultValue={currentTime}\r\n            onChange={(e) => setLandingTime(e.target.value)} /> <br /> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Tickets Amount: </span>\r\n        <input style={{ width: '60px' }} type='number' min='1' defaultValue='1' onChange={(e) => seTticketsAmount(e.target.value)} /> <br /> <br />\r\n        <input type='button' value='Create' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => createNewFlight()} />\r\n    </div>)\r\n}\r\n\r\nexport default NewFlightComp;","import React, { Component } from 'react'\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nconst Navigation = styled.header`\r\n  width: 100%;\r\n  border-bottom: 10px solid #222;\r\n  z-index: 1;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0px 100px 0;\r\n  height: 140px;\r\n  margin-bottom: 60px;\r\n  background: #f8f8f8;\r\n\r\n  .logo a {\r\n    padding-top: 33px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    clear: both;\r\n    padding-bottom: 30px;\r\n    text-decoration: none;\r\n\r\n    p {\r\n      width: 500px;\r\n      display: block;\r\n    }\r\n    em {\r\n      font-size: 0.5em;\r\n      float: left;\r\n      display: block;\r\n      img {\r\n        display: inline-block;\r\n        margin-top: 5px;\r\n        width: 15px;\r\n        float: left;\r\n      }\r\n      .letterhead {\r\n        display: inline-block;\r\n        line-height: 260%;\r\n        float: left;\r\n      }\r\n    }\r\n  }\r\n  .gray {\r\n    color: #ccc;\r\n  }\r\n  a {\r\n    color: #222;\r\n    opacity: 0.55;\r\n    transition: all 0.6s;\r\n    color: #222;\r\n    font-size: 1em;\r\n  }\r\n  a:hover {\r\n    opacity: 1;\r\n  }\r\n  .fa-bars {\r\n    display: none;\r\n    color: #222;\r\n    font-size: 2rem;\r\n  }\r\n  nav {\r\n    ul {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    li {\r\n      margin: 0 15px;\r\n      justify-content: space-between;\r\n      font-size: 1em;\r\n    }\r\n    a {\r\n      font-size: 1em;\r\n      text-decoration: none;\r\n      .active {\r\n        color: tomato;\r\n      }\r\n    }\r\n    a.active {\r\n      color: #222;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    padding: 0px;\r\n    .logo {\r\n      padding-left: 15px;\r\n      padding-top: 0px !important;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    height: auto;\r\n    min-height: 50px;\r\n    display: block;\r\n    position: relative;\r\n    .logo {\r\n      width: 100%;\r\n      display: block;\r\n      padding-top: 20px;\r\n      margin: 0px;\r\n      margin-left: -5px;\r\n      a {\r\n        padding: 20px 0px;\r\n      }\r\n    }\r\n    .fa-bars {\r\n      display: inline-block;\r\n      position: absolute;\r\n      top: 10px;\r\n      right: 10px;\r\n      cursor: pointer;\r\n    }\r\n    ul.collapsed {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      flex-wrap: wrap;\r\n\r\n      overflow: hidden;\r\n      max-height: 0;\r\n      -moz-transition-duration: 0.4s;\r\n      -webkit-transition-duration: 0.4s;\r\n      -o-transition-duration: 0.4s;\r\n      transition-duration: 0.4s;\r\n      -moz-transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n      -webkit-transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n      -o-transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n      transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n\r\n      &.is-expanded {\r\n        overflow: hidden;\r\n        max-height: 500px; /* approximate max height */\r\n        -moz-transition-duration: 0.4s;\r\n        -webkit-transition-duration: 0.4s;\r\n        -o-transition-duration: 0.4s;\r\n        transition-duration: 0.4s;\r\n        -moz-transition-timing-function: ease-in;\r\n        -webkit-transition-timing-function: ease-in;\r\n        -o-transition-timing-function: ease-in;\r\n        transition-timing-function: ease-in;\r\n      }\r\n      li {\r\n        padding: 15px 10px;\r\n        margin: 0px 0px;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass AirlineNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isExpanded: false\r\n    };\r\n  }\r\n\r\n  handleToggle(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded\r\n    });\r\n  }\r\n  render() {\r\n    const { isExpanded } = this.state;\r\n    return (\r\n      <Navigation>\r\n        <nav className=\"nav\">\r\n          <i\r\n            className=\"fa fa-bars\"\r\n            aria-hidden=\"true\"\r\n            onClick={e => this.handleToggle(e)}\r\n          />\r\n          <ul className={`collapsed ${isExpanded ? \"is-expanded\" : \"\"}`}>\r\n            <NavLink activeClassName=\"active\" to=\"/airline/flights\">\r\n              <li>My Flights</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/airline/details\">\r\n              <li>Details</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/airline/newFlight\">\r\n              <li>New Flight</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/flights\">\r\n              <li>All Flights</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/FlightPages/loginPage.html\">\r\n              <li>Log Out</li>\r\n            </NavLink>\r\n          </ul>\r\n        </nav>\r\n      </Navigation>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(AirlineNavbar)","import React, { useEffect } from 'react'\r\nimport { Route, useHistory, Switch } from 'react-router-dom';\r\nimport AirlineDetailsComp from './AirlineDetailsComp';\r\nimport AirlineFlightsComp from './AirlineFlightsComp';\r\nimport NewFlightComp from './NewFlightComp';\r\nimport Navbar from './AirlineNavbar'\r\nimport '../navbar.css'\r\nimport '../background.css'\r\n\r\nconst MainAirlineComp = () => {\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        history.push('/airline/details')\r\n    }, [])\r\n\r\n    return (<div>\r\n        <Navbar />\r\n        <Switch>\r\n            <div className=\"container\">\r\n                <Route path='/airline/flights'> <AirlineFlightsComp /> </Route>\r\n                <Route path='/airline/details'> <AirlineDetailsComp /> </Route>\r\n                <Route path='/airline/newFlight'> <NewFlightComp /> </Route>\r\n            </div>\r\n        </Switch>\r\n    </div>)\r\n}\r\n\r\nexport default MainAirlineComp;","import $ from 'jquery';\r\nconst jwt = localStorage.getItem('JWT')\r\n\r\nconst getWaitingAdmins = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Administrator/GetAllWaitingAdmins',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        return error.status;\r\n    }\r\n}\r\n\r\nconst approveAdmin = async (admin) => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"POST\",\r\n            url: '/api/Administrator/ApproveAdmin',\r\n            contentType: 'application/json',\r\n            data: admin,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        throw error.status;\r\n    }\r\n}\r\n\r\nconst rejectAdmin = async (admin) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"DELETE\",\r\n            url: '/api/Administrator/RejectAdmin',\r\n            contentType: 'application/json',\r\n            data: admin,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        throw error.status;\r\n    }\r\n}\r\n\r\nconst getWaitingAirlines = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Administrator/GetAllWaitingAirlines',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        return error.status;\r\n    }\r\n}\r\n\r\nconst approveAirline = async (airline) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"POST\",\r\n            url: '/api/Administrator/ApproveAirline',\r\n            contentType: 'application/json',\r\n            data: airline,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        throw error.status;\r\n    }\r\n}\r\n\r\nconst rejectAirline = async (airline) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"DELETE\",\r\n            url: '/api/Administrator/RejectAirline',\r\n            contentType: 'application/json',\r\n            data: airline,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        throw error.status;\r\n    }\r\n}\r\n\r\nconst getAllAirlines = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Administrator/GetAllAirlines',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst updateAirline = async (airline) => {\r\n    try {\r\n        await $.ajax({\r\n            url: \"/api/Administrator/UpdateAirlineDetails\",\r\n            type: \"PUT\",\r\n            contentType: 'application/json',\r\n            data: airline,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst deleteAirline = async (airline) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"DELETE\",\r\n            url: '/api/Administrator/RemoveAirline',\r\n            contentType: 'application/json',\r\n            data: airline,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return error.status\r\n    }\r\n}\r\n\r\nconst createNewAirline = async (airline) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"POST\",\r\n            url: '/api/Administrator/CreateAirlineCompany',\r\n            contentType: 'application/json',\r\n            data: airline,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst GetAllCustomers = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Administrator/GetAllCustomers',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst updateCustomer = async (customer) => {\r\n    try {\r\n        await $.ajax({\r\n            url: \"/api/Administrator/UpdateCustomerDetails\",\r\n            type: \"PUT\",\r\n            contentType: 'application/json',\r\n            data: customer,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst deleteCustomer = async (customer) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"DELETE\",\r\n            url: '/api/Administrator/RemoveCustomer',\r\n            contentType: 'application/json',\r\n            data: customer,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return error.status\r\n    }\r\n}\r\n\r\nconst createNewCustomer = async (customer) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"POST\",\r\n            url: '/api/Administrator/CreateCustomer',\r\n            contentType: 'application/json',\r\n            data: customer,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst GetAllAdmins = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Administrator/GetAllAdmins',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst updateAdmin = async (admin) => {\r\n    try {\r\n        await $.ajax({\r\n            url: \"/api/Administrator/UpdateAdmin\",\r\n            type: \"PUT\",\r\n            contentType: 'application/json',\r\n            data: admin,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst deleteAdmin = async (admin) => {\r\n    try {\r\n        await $.ajax({\r\n            url: '/api/Administrator/RemoveAdmin',\r\n            type: \"DELETE\",\r\n            contentType: 'application/json',\r\n            data: admin,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return error.status\r\n    }\r\n}\r\n\r\nconst createNewAdmin = async (admin) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"POST\",\r\n            url: '/api/Administrator/CreateAdmin',\r\n            contentType: 'application/json',\r\n            data: admin,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst updateCountry = async (country) => {\r\n    try {\r\n        await $.ajax({\r\n            url: \"/api/Administrator/UpdateCountry\",\r\n            type: \"PUT\",\r\n            contentType: 'application/json',\r\n            data: country,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst deleteCountry = async (countryId) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"DELETE\",\r\n            url: `/api/Administrator/RemoveCountry?countryId=${countryId}`,\r\n            contentType: 'application/json',\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return error.status\r\n    }\r\n}\r\n\r\nconst createNewCountry = async (country) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"POST\",\r\n            url: '/api/Administrator/CreateCountry',\r\n            contentType: 'application/json',\r\n            data: country,\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst updatePassword = async (currentPassword, password) => {\r\n    try {\r\n        await $.ajax({\r\n            type: \"PUT\",\r\n            url: `/Administrator/ChangeAdminPassword?oldPassword=${currentPassword}&newPassword=${password}`,\r\n            contentType: 'application/json',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nconst updateMyUser = async (admin) => {\r\n    try {\r\n        await $.ajax({\r\n            url: \"/api/Administrator/UpdateMyDetails\",\r\n            type: \"PUT\",\r\n            contentType: 'application/json',\r\n            data: admin,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + jwt\r\n            }\r\n        })\r\n        return true;\r\n    } catch (error) {\r\n        return { status: error.status, error: error.responseText };\r\n    }\r\n}\r\n\r\nexport default {\r\n    getWaitingAdmins, approveAdmin, rejectAdmin, getWaitingAirlines, approveAirline, rejectAirline,\r\n    getAllAirlines, updateAirline, deleteAirline, createNewAirline, GetAllCustomers, updateCustomer,\r\n    deleteCustomer, createNewCustomer, GetAllAdmins, updateAdmin, deleteAdmin, createNewAdmin,\r\n    updateCountry, deleteCountry, createNewCountry, updatePassword, updateMyUser\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport adminDAL from '../../DAL/adminDAL';\r\nimport '../../tableDesign.css'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AdminsInboxComp = () => {\r\n    let history = useHistory();\r\n    const [admins, setAdmins] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(async () => {\r\n        let res = await adminDAL.getWaitingAdmins();\r\n        if (typeof (res) == 'object') {\r\n            setAdmins(res)\r\n        } else {\r\n            let msg = res === 403 ? 'You are not allowed to watch waiting admins' :\r\n                'There is a problem to present waiting admins';\r\n            setErrorMessage(msg)\r\n        }\r\n    }, [])\r\n\r\n    const approveAdmin = (admin) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"The user will get admin authorization\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Accept the admin'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                try {\r\n                    await adminDAL.approveAdmin(JSON.stringify(admin))\r\n                    Swal.fire(\r\n                        'Admin was accepted succefully!',\r\n                        'Now the admin can login to the system',\r\n                        'success'\r\n                    ).then(() => {\r\n                        history.push('/admin/details')\r\n                        history.push('/admin/adminsInbox')\r\n                    })\r\n                } catch (status) {\r\n                    if (status == 403) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'You are not allowed to accept admin'\r\n                        })\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not approve admin'\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const rejectAdmin = (admin) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"The user will not be created\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, reject the admin'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                try {\r\n                    await adminDAL.rejectAdmin(JSON.stringify(admin))\r\n                    Swal.fire(\r\n                        'Admin was rejected succefully!',\r\n                        'User wasn\\'t created',\r\n                        'success'\r\n                    ).then(() => {\r\n                        history.push('/admin/details')\r\n                        history.push('/admin/adminsInbox')\r\n                    })\r\n                } catch (status) {\r\n                    if (status == 403) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'You are not allowed to reject admin'\r\n                        })\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not reject admin'\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const getRow = (admin, index) => {\r\n        return <tr className=\"popupOpen\" key={index}>\r\n            <td>{admin.First_Name}</td>\r\n            <td>{admin.Last_Name}</td>\r\n            <td>{admin.Level}</td>\r\n            <td>{admin.User.User_Name}</td>\r\n            <td>{admin.User.Password}</td>\r\n            <td>{admin.User.Email}</td>\r\n            <td><input type='button' onClick={() => { approveAdmin(admin) }} style={{ width: '75px' }}\r\n                className=\"button btnBorder btnBlueGreen\" value='Accept' /></td>\r\n            <td><input type='button' onClick={() => { rejectAdmin(admin) }} className=\"button btnBorder btnRed\" value='Reject' /></td>\r\n        </tr>\r\n    }\r\n\r\n    let dataToDisplay;\r\n    if (admins && errorMessage === '') {\r\n        dataToDisplay = <table border='1'>\r\n            <thead>\r\n                <tr>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Level</th>\r\n                    <th>User Name</th>\r\n                    <th>Password</th>\r\n                    <th>Email</th>\r\n                    <th>Accept</th>\r\n                    <th>Reject</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {admins.map((admin, index) => {\r\n                    return getRow(admin, index)\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    } else {\r\n        dataToDisplay = <h1 style={{ color: 'red' }}>{errorMessage}</h1>\r\n    }\r\n\r\n    return (<div>\r\n        {errorMessage === '' && <h1>Admins Inbox</h1>}\r\n        {dataToDisplay}\r\n    </div>)\r\n}\r\n\r\nexport default AdminsInboxComp;","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport adminDAL from '../../DAL/adminDAL';\r\nimport '../../tableDesign.css'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AirlinesInboxComp = () => {\r\n    let history = useHistory();\r\n    const [airlines, setAirlines] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(async () => {\r\n        let res = await adminDAL.getWaitingAirlines();\r\n        if (typeof (res) == 'object') {\r\n            setAirlines(res)\r\n        } else {\r\n            let msg = res === 403 ? 'You are not allowed to watch waiting airlines' :\r\n                'There is a problem to present waiting airlines';\r\n            setErrorMessage(msg)\r\n        }\r\n    }, [])\r\n\r\n    const approveAirline = (airline) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"This action will create new airline company\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Accept the airline company'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                try {\r\n                    await adminDAL.approveAirline(JSON.stringify(airline))\r\n                    Swal.fire(\r\n                        'Airline was accepted succefully!',\r\n                        'Now the airline can login to the system',\r\n                        'success'\r\n                    ).then(() => {\r\n                        history.push('/admin/details')\r\n                        history.push('/admin/airlinesInbox')\r\n                    })\r\n                } catch (status) {\r\n                    if (status == 403) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'You are not allowed to accept airline'\r\n                        })\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not approve airline'\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const rejectAirline = (airline) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"The user will not be created\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, reject the airline'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                try {\r\n                    await adminDAL.rejectAirline(JSON.stringify(airline))\r\n                    Swal.fire(\r\n                        'Airline was rejected succefully!',\r\n                        'User wasn\\'t created',\r\n                        'success'\r\n                    ).then(() => {\r\n                        history.push('/admin/details')\r\n                        history.push('/admin/airlinesInbox')\r\n                    })\r\n                } catch (status) {\r\n                    if (status == 403) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'You are not allowed to reject airline'\r\n                        })\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not reject airline'\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const getRow = (airline, index) => {\r\n        return <tr className=\"popupOpen\" key={index}>\r\n            <td>{airline.Name}</td>\r\n            <td>{airline.Country_Name}</td>\r\n            <td>{airline.User.User_Name}</td>\r\n            <td>{airline.User.Password}</td>\r\n            <td>{airline.User.Email}</td>\r\n            <td><input type='button' onClick={() => { approveAirline(airline) }} style={{ width: '75px' }}\r\n                className=\"button btnBorder btnBlueGreen\" value='Accept' /></td>\r\n            <td><input type='button' onClick={() => { rejectAirline(airline) }} className=\"button btnBorder btnRed\" value='Reject' /></td>\r\n        </tr>\r\n    }\r\n\r\n    let dataToDisplay;\r\n    if (airlines && errorMessage === '') {\r\n        dataToDisplay = <table border='1'>\r\n            <thead>\r\n                <tr>\r\n                    <th>company Name</th>\r\n                    <th>Country</th>\r\n                    <th>User Name</th>\r\n                    <th>Password</th>\r\n                    <th>Email</th>\r\n                    <th>Accept</th>\r\n                    <th>Reject</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {airlines.map((airline, index) => {\r\n                    return getRow(airline, index)\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    } else {\r\n        dataToDisplay = <h1 style={{ color: 'red' }}>{errorMessage}</h1>\r\n    }\r\n\r\n    return (<div>\r\n        {errorMessage === '' && <h1>Airlines Inbox</h1>}\r\n        {dataToDisplay}\r\n    </div>)\r\n}\r\n\r\nexport default AirlinesInboxComp;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport adminDAL from '../../DAL/adminDAL';\r\nimport airlineDAL from '../../DAL/airlineDAL.js'\r\nimport $ from 'jquery';\r\nimport '../../tableDesign.css'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AirlinesComp = () => {\r\n    let history = useHistory();\r\n    const [airlines, setAirlines] = useState([])\r\n    const [countries, setCountries] = useState([])\r\n    const [airlineToUpdate, setAirlineToUpdate] = useState({})\r\n    const [showUpdateDiv, setShowUpdateDiv] = useState(false)\r\n    const [showCreateDiv, setShowCreateDiv] = useState(false)\r\n\r\n    const [companyName, setCompanyName] = useState('')\r\n    const [countryName, setCountryName] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    useEffect(async () => {\r\n        let airlinesArr = await adminDAL.getAllAirlines();\r\n        setAirlines(airlinesArr)\r\n        let countriesArr = await airlineDAL.GetAllCountries();\r\n        setCountries(JSON.parse(countriesArr))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            $(`#countries option:contains(${airlineToUpdate.Country_Name})`).prop('selected', true)\r\n        }, 10)\r\n    }, [airlineToUpdate])\r\n\r\n    if (airlines) {\r\n        airlines.sort((a, b) => (a.Id > b.Id) ? 1 : (a.Id < b.Id) ? -1 : 0)\r\n    }\r\n\r\n    let countriesSelector = <select id=\"countries\" onChange={(e) => setCountryName(e.target.value)}>\r\n        {countries.map(c => {\r\n            return <option value={c.Name}>{c.Name}</option>\r\n        })} </select>\r\n\r\n    const showDiv = (airline) => {\r\n        setAirlineToUpdate(airline)\r\n        setCompanyName(airline.Name)\r\n        setCountryName(airline.Country_Name)\r\n        setUserName(airline.User.User_Name)\r\n        setPassword(airline.User.Password)\r\n        setConfirm(airline.User.Password)\r\n        setEmail(airline.User.Email)\r\n        setShowUpdateDiv(true)\r\n    }\r\n\r\n    const deleteAirline = (airline) => {\r\n        Swal.fire({\r\n            title: 'Are you sure you want to delete this Airline Company?',\r\n            text: \"All it\\'s flights will be canceled\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                let res = await adminDAL.deleteAirline(JSON.stringify(airline))\r\n                if (res === true) {\r\n                    Swal.fire(\r\n                        'Airline has been deleted succefully!',\r\n                        'All it\\'s flights are canceled',\r\n                        'success'\r\n                    ).then(() => {\r\n                        history.push('/admin/details')\r\n                        history.push('/admin/airlines')\r\n                    })\r\n                } else {\r\n                    if (res === 401) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not delete airline'\r\n                        })\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'You are not allowed to delete airline company'\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const getRow = (airline, index) => {\r\n        return <tr className=\"popupOpen\" key={index}>\r\n            <td>{airline.Id}</td>\r\n            <td>{airline.Name}</td>\r\n            <td>{airline.Country_Name}</td>\r\n            <td>{airline.User.User_Name}</td>\r\n            <td>{airline.User.Password}</td>\r\n            <td>{airline.User.Email}</td>\r\n            <td><input type='button' onClick={() => { showDiv(airline) }} className=\"button btnBorder btnBlueGreen\" value='Edit' /></td>\r\n            <td><input type='button' onClick={() => { deleteAirline(airline) }} className=\"button btnBorder btnLightBlue\" value='Delete' /></td>\r\n        </tr>\r\n    }\r\n\r\n    let airlinesToRender;\r\n    if (airlines) {\r\n        airlinesToRender = <table border='1'>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>company Name</th>\r\n                    <th>Country</th>\r\n                    <th>User Name</th>\r\n                    <th>Password</th>\r\n                    <th>Email</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {airlines.map((airline, index) => {\r\n                    return getRow(airline, index)\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    }\r\n\r\n    const validateDetails = () => {\r\n        if (userName.length < 5) {\r\n            return 'User name is too short'\r\n        } else {\r\n            if (userName.length > 20) {\r\n                return 'User name is too long'\r\n            }\r\n        }\r\n        if (password !== confirm) {\r\n            return 'You must confirm your password currectly!'\r\n        }\r\n        if (password.length < 5) {\r\n            return 'Your password is too short'\r\n        } else {\r\n            if (password.length > 20) {\r\n                return 'Your password is too long'\r\n            }\r\n        }\r\n        if (companyName.length < 3) {\r\n            return 'Company name is too short'\r\n        }\r\n        if (!email.includes('@') || email.length < 4) {\r\n            return 'Email must be in right format'\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const updateAirline = () => {\r\n        let result\r\n        Swal.fire({\r\n            title: 'Are you OK with the changes?',\r\n            text: \"You can review then again before accepting\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, change it'\r\n        }).then(async (_result) => {\r\n            if (_result.isConfirmed) {\r\n                let error = validateDetails();\r\n                if (error !== '') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: `${error}`\r\n                    })\r\n                } else {\r\n                    let airline = JSON.stringify({\r\n                        Id: airlineToUpdate.Id,\r\n                        Name: companyName,\r\n                        Country_Name: countryName,\r\n                        User_Id: airlineToUpdate.User_Id,\r\n                        User: {\r\n                            Id: airlineToUpdate.User_Id,\r\n                            User_Name: userName,\r\n                            Password: password,\r\n                            Email: email,\r\n                            User_Role: 2\r\n                        }\r\n                    })\r\n                    result = await adminDAL.updateAirline(airline)\r\n                    if (result === true) {\r\n                        Swal.fire(\r\n                            'Airline was updated succefully!',\r\n                            'You can change it again anytime',\r\n                            'success'\r\n                        ).then(() => {\r\n                            history.push('/admin/details')\r\n                            history.push('/admin/airlines')\r\n                        })\r\n                    } else {\r\n                        if (result.status === 403) {\r\n                            let text = result.error.split(\"_\")[1];\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: `${text} is allready taken`\r\n                            })\r\n                        } else {\r\n                            if (result.status === 401) {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `You are not allowed to update details`\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    let divUpdate\r\n    if (airlineToUpdate !== {}) {\r\n        divUpdate = (\r\n            <div>  <br />\r\n                <span style={{ fontWeight: 'bold' }}> ID: </span> {airlineToUpdate.Id} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Airline Company Name: </span>\r\n                <input type='text' defaultValue={airlineToUpdate.Name} onChange={(e) => setCompanyName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Country: </span> {countriesSelector} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> User Name: </span>\r\n                <input type='text' defaultValue={userName} onChange={(e) => setUserName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                <input type='text' defaultValue={password} onChange={(e) => setPassword(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Confirm Password: </span>\r\n                <input type='text' defaultValue={confirm} onChange={(e) => setConfirm(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Email: </span>\r\n                <input type='text' defaultValue={email} onChange={(e) => setEmail(e.target.value)} /> <br /> <br />\r\n                <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\" onClick={() => { setShowUpdateDiv(false) }} /> {' '}\r\n                <input type='button' value='Update' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => updateAirline()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const createNewAirline = () => {\r\n        let result;\r\n        Swal.fire({\r\n            title: 'Are you sure with the details?',\r\n            text: \"You can review them again before creating\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, create it!'\r\n        }).then(async (_result) => {\r\n            if (_result.isConfirmed) {\r\n                let error = validateDetails();\r\n                if (error !== '') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: `${error}`\r\n                    })\r\n                } else {\r\n                    let airline = JSON.stringify({\r\n                        Name: companyName,\r\n                        Country_Name: countryName,\r\n                        User: {\r\n                            User_Name: userName,\r\n                            Password: password,\r\n                            Email: email,\r\n                            User_Role: 2\r\n                        }\r\n                    })\r\n                    result = await adminDAL.createNewAirline(airline)\r\n                    if (result === true) {\r\n                        Swal.fire(\r\n                            'Airline company was created succefully!',\r\n                            'You can change it again anytime',\r\n                            'success'\r\n                        ).then(() => {\r\n                            history.push('/admin/details')\r\n                            history.push('/admin/airlines')\r\n                        })\r\n                    } else {\r\n                        if (result.status === 400) {\r\n                            let text = result.error.split(\"_\")[1];\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: `${text} is allready taken`\r\n                            })\r\n                        } else {\r\n                            if (result.status === 403) {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `You are not allowed to create airline company`\r\n                                })\r\n                            } else {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `Could not create new airline company`\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    let createDiv\r\n    if (airlineToUpdate !== {}) {\r\n        createDiv = (\r\n            <div>  <br />\r\n                <span style={{ fontWeight: 'bold' }}> Airline Company Name: </span>\r\n                <input type='text' onChange={(e) => setCompanyName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Country: </span> {countriesSelector} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> User Name: </span>\r\n                <input type='text' onChange={(e) => setUserName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                <input type='text' onChange={(e) => setPassword(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Confirm Password: </span>\r\n                <input type='text' onChange={(e) => setConfirm(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Email: </span>\r\n                <input type='text' onChange={(e) => setEmail(e.target.value)} /> <br /> <br />\r\n                <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\" onClick={() => { setShowCreateDiv(false) }} /> {' '}\r\n                <input type='button' value='Create' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => createNewAirline()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showDivCreate = () => {\r\n        setCompanyName('')\r\n        setCountryName(countries[0].Name)\r\n        setUserName('')\r\n        setPassword('')\r\n        setConfirm('')\r\n        setEmail('')\r\n        setShowCreateDiv(true)\r\n    }\r\n\r\n    let createBtn = <input type='button' value='Create New Airline' className=\"button btnBorder btnLightBlue\"\r\n        style={{ width: '150px' }} onClick={() => { showDivCreate() }} />\r\n\r\n    return (<div>\r\n        <h1>Airlines</h1> <br />\r\n        {(!showUpdateDiv && !showCreateDiv) && createBtn}\r\n        {showUpdateDiv ? divUpdate : showCreateDiv ? createDiv : airlinesToRender}\r\n    </div>)\r\n}\r\n\r\nexport default AirlinesComp;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport adminDAL from '../../DAL/adminDAL';\r\nimport '../../tableDesign.css'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst CustomersComp = () => {\r\n    let history = useHistory();\r\n    const [customers, setCustomers] = useState([])\r\n    const [customerToUpdate, setCustomerToUpdate] = useState({})\r\n    const [showUpdateDiv, setShowUpdateDiv] = useState(false)\r\n    const [showCreateDiv, setShowCreateDiv] = useState(false)\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [phoneNum, setPhoneNum] = useState('')\r\n    const [creditCard, setCreditCard] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [prefix, setPrefix] = useState('')\r\n\r\n    useEffect(async () => {\r\n        let customersArr = await adminDAL.GetAllCustomers();\r\n        setCustomers(customersArr)\r\n    }, [])\r\n\r\n    if (customers) {\r\n        customers.sort((a, b) => (a.Id > b.Id) ? 1 : (a.Id < b.Id) ? -1 : 0)\r\n    }\r\n\r\n    const showDiv = (customer) => {\r\n        setCustomerToUpdate(customer)\r\n        setFirstName(customer.First_Name)\r\n        setLastName(customer.Last_Name)\r\n        setAddress(customer.Address)\r\n        setPrefix(customer.Phone_No.split('-')[0])\r\n        setPhoneNum(customer.Phone_No.split('-')[1])\r\n        setCreditCard(customer.Credit_Card_No)\r\n        setUserName(customer.User.User_Name)\r\n        setPassword(customer.User.Password)\r\n        setConfirm(customer.User.Password)\r\n        setEmail(customer.User.Email)\r\n        setShowUpdateDiv(true)\r\n    }\r\n\r\n    const deleteCustomer = (customer) => {\r\n        Swal.fire({\r\n            title: 'Are you sure you want to delete this customer?',\r\n            text: \"The user won\\'t be able to login again\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                let res = await adminDAL.deleteCustomer(JSON.stringify(customer))\r\n                if (res === true) {\r\n                    Swal.fire(\r\n                        'Customer has been deleted succefully!',\r\n                        'The user cannot longer login to the system anymore',\r\n                        'success'\r\n                    ).then(() => {\r\n                        history.push('/admin/details')\r\n                        history.push('/admin/customers')\r\n                    })\r\n                } else {\r\n                    if (res === 401) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not delete customer'\r\n                        })\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'You are not allowed to delete customer'\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const getRow = (customer, index) => {\r\n        return <tr className=\"popupOpen\" key={index}>\r\n            <td>{customer.Id}</td>\r\n            <td>{customer.First_Name}</td>\r\n            <td>{customer.Last_Name}</td>\r\n            <td>{customer.Address}</td>\r\n            <td>{customer.Phone_No}</td>\r\n            <td>{customer.Credit_Card_No}</td>\r\n            <td>{customer.User.User_Name}</td>\r\n            <td>{customer.User.Password}</td>\r\n            <td>{customer.User.Email}</td>\r\n            <td><input type='button' onClick={() => { showDiv(customer) }} className=\"button btnBorder btnBlueGreen\" value='Edit' /></td>\r\n            <td><input type='button' onClick={() => { deleteCustomer(customer) }} className=\"button btnBorder btnLightBlue\" value='Delete' /></td>\r\n        </tr>\r\n    }\r\n\r\n    let customersToRender;\r\n    if (customers) {\r\n        customersToRender = <table border='1'>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Address</th>\r\n                    <th>Phone</th>\r\n                    <th>Credit Card</th>\r\n                    <th>User Name</th>\r\n                    <th>Password</th>\r\n                    <th>Email</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {customers.map((customer, index) => {\r\n                    return getRow(customer, index)\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    }\r\n\r\n    const validateDetails = () => {\r\n        if (userName.length < 5) {\r\n            return 'User name is too short'\r\n        } else {\r\n            if (userName.length > 20) {\r\n                return 'User name is too long'\r\n            }\r\n        }\r\n        if (password !== confirm) {\r\n            return 'You must confirm your password currectly!'\r\n        }\r\n        if (password.length < 5) {\r\n            return 'Your password is too short'\r\n        } else {\r\n            if (password.length > 20) {\r\n                return 'Your password is too long'\r\n            }\r\n        }\r\n        if (firstName.length < 2) {\r\n            return 'First name is too short'\r\n        }\r\n        if (lastName.length < 2) {\r\n            return 'Last name is too short'\r\n        }\r\n        if (address.length < 10) {\r\n            return 'Address is too short'\r\n        }\r\n        if (phoneNum.length !== 7) {\r\n            return 'Phone number must include 7 digits'\r\n        }\r\n        if (creditCard.length !== 16) {\r\n            return 'Credit card number must include 16 digits'\r\n        }\r\n        if (!email.includes('@') || email.length < 4) {\r\n            return 'Email must be in right format'\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const updateCustomer = () => {\r\n        let result\r\n        Swal.fire({\r\n            title: 'Are you OK with the changes?',\r\n            text: \"You can review then again before accepting\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, change it'\r\n        }).then(async (_result) => {\r\n            if (_result.isConfirmed) {\r\n                let error = validateDetails();\r\n                if (error !== '') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: `${error}`\r\n                    })\r\n                } else {\r\n                    let customer = JSON.stringify({\r\n                        Id: customerToUpdate.Id,\r\n                        First_Name: firstName,\r\n                        Last_Name: lastName,\r\n                        Address: address,\r\n                        Phone_No: prefix + '-' + phoneNum,\r\n                        Credit_Card_No: creditCard,\r\n                        User_Id: customerToUpdate.User_Id,\r\n                        User: {\r\n                            Id: customerToUpdate.User_Id,\r\n                            User_Name: userName,\r\n                            Password: password,\r\n                            Email: email,\r\n                            User_Role: 3\r\n                        }\r\n                    })\r\n                    result = await adminDAL.updateCustomer(customer)\r\n                    if (result === true) {\r\n                        Swal.fire(\r\n                            'Customer was updated succefully!',\r\n                            'You can change it again anytime',\r\n                            'success'\r\n                        ).then(() => {\r\n                            history.push('/admin/details')\r\n                            history.push('/admin/customers')\r\n                        })\r\n                    } else {\r\n                        if (result.status === 403) {\r\n                            let text = result.error.split(\"_\")[1];\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: `${text} is allready taken`\r\n                            })\r\n                        } else {\r\n                            if (result.status === 401) {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `You are not allowed to update details`\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    let divUpdate\r\n    if (customerToUpdate !== {}) {\r\n        divUpdate = (\r\n            <div>  <br />\r\n                <span style={{ fontWeight: 'bold' }}> ID: </span> {customerToUpdate.Id} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> First Name: </span>\r\n                <input type='text' defaultValue={firstName} onChange={(e) => setFirstName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Last Name: </span>\r\n                <input type='text' defaultValue={lastName} onChange={(e) => setLastName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Address: </span>\r\n                <input type='text' defaultValue={address} onChange={(e) => setAddress(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Phone: </span>\r\n                <select id=\"prefixNum\" value={prefix} onChange={(e) => setPrefix(e.target.value)}>\r\n                    <option value=\"050\">050</option>\r\n                    <option value=\"051\">051</option>\r\n                    <option value=\"052\">052</option>\r\n                    <option value=\"053\">053</option>\r\n                    <option value=\"054\">054</option>\r\n                    <option value=\"055\">055</option>\r\n                </select>\r\n                <input type='text' defaultValue={phoneNum} onChange={(e) => setPhoneNum(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Credit Card: </span>\r\n                <input type='text' defaultValue={creditCard} onChange={(e) => setCreditCard(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> User Name: </span>\r\n                <input type='text' defaultValue={userName} onChange={(e) => setUserName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                <input type='text' defaultValue={password} onChange={(e) => setPassword(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Confirm Password: </span>\r\n                <input type='text' defaultValue={confirm} onChange={(e) => setConfirm(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Email: </span>\r\n                <input type='text' defaultValue={email} onChange={(e) => setEmail(e.target.value)} /> <br /> <br />\r\n                <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\" onClick={() => { setShowUpdateDiv(false) }} /> {' '}\r\n                <input type='button' value='Update' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => updateCustomer()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const createNewCustomer = () => {\r\n        let result;\r\n        Swal.fire({\r\n            title: 'Are you sure with the details?',\r\n            text: \"You can review them again before creating\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, create it!'\r\n        }).then(async (_result) => {\r\n            if (_result.isConfirmed) {\r\n                let error = validateDetails();\r\n                if (error !== '') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: `${error}`\r\n                    })\r\n                } else {\r\n                    let customer = JSON.stringify({\r\n                        First_Name: firstName,\r\n                        Last_Name: lastName,\r\n                        Address: address,\r\n                        Phone_No: prefix + '-' + phoneNum,\r\n                        Credit_Card_No: creditCard,\r\n                        User: {\r\n                            User_Name: userName,\r\n                            Password: password,\r\n                            Email: email,\r\n                            User_Role: 3\r\n                        }\r\n                    })\r\n                    result = await adminDAL.createNewCustomer(customer)\r\n                    if (result === true) {\r\n                        Swal.fire(\r\n                            'Customer was created succefully!',\r\n                            'You can change it again anytime',\r\n                            'success'\r\n                        ).then(() => {\r\n                            history.push('/admin/details')\r\n                            history.push('/admin/customers')\r\n                        })\r\n                    } else {\r\n                        if (result.status === 400) {\r\n                            let text = result.error.split(\"_\")[1];\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: `${text} is allready taken`\r\n                            })\r\n                        } else {\r\n                            if (result.status === 403) {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `You are not allowed to create customer`\r\n                                })\r\n                            } else {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `Could not create new customer`\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    let createDiv\r\n    if (customerToUpdate !== {}) {\r\n        createDiv = (\r\n            <div>  <br />\r\n                <span style={{ fontWeight: 'bold' }}> First Name: </span>\r\n                <input type='text' onChange={(e) => setFirstName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Last Name: </span>\r\n                <input type='text' onChange={(e) => setLastName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Address: </span>\r\n                <input type='text' onChange={(e) => setAddress(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Phone: </span>\r\n                <select onChange={(e) => setPrefix(e.target.value)}>\r\n                    <option value=\"050\">050</option>\r\n                    <option value=\"051\">051</option>\r\n                    <option value=\"052\">052</option>\r\n                    <option value=\"053\">053</option>\r\n                    <option value=\"054\">054</option>\r\n                    <option value=\"055\">055</option>\r\n                </select>\r\n                <input type='text' onChange={(e) => setPhoneNum(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Credit Card: </span>\r\n                <input type='text' onChange={(e) => setCreditCard(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> User Name: </span>\r\n                <input type='text' onChange={(e) => setUserName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                <input type='text' onChange={(e) => setPassword(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Confirm Password: </span>\r\n                <input type='text' onChange={(e) => setConfirm(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Email: </span>\r\n                <input type='text' onChange={(e) => setEmail(e.target.value)} /> <br /> <br />\r\n                <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\" onClick={() => { setShowCreateDiv(false) }} /> {' '}\r\n                <input type='button' value='Create' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => createNewCustomer()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showDivCreate = () => {\r\n        setFirstName('')\r\n        setLastName('')\r\n        setAddress('')\r\n        setPrefix('050')\r\n        setPhoneNum('')\r\n        setCreditCard('')\r\n        setUserName('')\r\n        setPassword('')\r\n        setConfirm('')\r\n        setEmail('')\r\n        setShowCreateDiv(true)\r\n    }\r\n\r\n    let createBtn = <input type='button' value='Create New Customer' className=\"button btnBorder btnLightBlue\"\r\n        style={{ width: '170px' }} onClick={() => { showDivCreate() }} />\r\n\r\n    return (<div>\r\n        <h1>Customers</h1> <br />\r\n        {(!showUpdateDiv && !showCreateDiv) && createBtn}\r\n        {showUpdateDiv ? divUpdate : showCreateDiv ? createDiv : customersToRender}\r\n    </div>)\r\n}\r\n\r\nexport default CustomersComp;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport adminDAL from '../../DAL/adminDAL';\r\nimport '../../tableDesign.css'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst DetailsComp = () => {\r\n    let history = useHistory();\r\n    const [admin, setAdmin] = useState({})\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n    const [notAllowed, setNotAllowed] = useState(false)\r\n\r\n    const getUserId = () => {\r\n        const jwt = localStorage.getItem('JWT')\r\n        var base64Url = jwt.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n        return JSON.parse(jsonPayload).mainUserId;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let adminsArr = await adminDAL.GetAllAdmins();\r\n        let id = getUserId()\r\n        if (id != 0) {\r\n            let _admin = adminsArr.find(admin => admin.Id == id);\r\n            setAdmin(_admin)\r\n            setFirstName(_admin.First_Name)\r\n            setLastName(_admin.Last_Name)\r\n            if (_admin.User !== undefined) {\r\n                setUserName(_admin.User.User_Name)\r\n                setPassword(_admin.User.Password)\r\n                setConfirm(_admin.User.Password)\r\n                setCurrentPassword(_admin.User.Password)\r\n                setEmail(_admin.User.Email)\r\n            }\r\n        } else {\r\n            setNotAllowed(true)\r\n        }\r\n    }, [])\r\n\r\n    const validateDetails = () => {\r\n        if (userName.length < 5) {\r\n            return 'User name is too short'\r\n        } else {\r\n            if (userName.length > 20) {\r\n                return 'User name is too long'\r\n            }\r\n        }\r\n        if (password !== confirm) {\r\n            return 'You must confirm your password currectly!'\r\n        }\r\n        if (password.length < 5) {\r\n            return 'Your password is too short'\r\n        } else {\r\n            if (password.length > 20) {\r\n                return 'Your password is too long'\r\n            }\r\n        }\r\n        if (firstName.length < 2) {\r\n            return 'First name is too short'\r\n        }\r\n        if (lastName.length < 2) {\r\n            return 'Last name is too short'\r\n        }\r\n        if (!email.includes('@') || email.length < 4) {\r\n            return 'Email must be in right format'\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const updateAdmin = async () => {\r\n        let result\r\n        let _admin = JSON.stringify({\r\n            Id: admin.Id,\r\n            First_Name: firstName,\r\n            Last_Name: lastName,\r\n            Level: admin.Level,\r\n            User_Id: admin.User_Id,\r\n            User: {\r\n                Id: admin.User_Id,\r\n                User_Name: userName,\r\n                Password: password,\r\n                Email: email,\r\n                User_Role: 1\r\n            }\r\n        })\r\n        result = await adminDAL.updateMyUser(_admin)\r\n        if (result === true) {\r\n            Swal.fire(\r\n                'Your details have been updated succefully!',\r\n                'You can change it again anytime',\r\n                'success'\r\n            ).then(() => {\r\n                history.push('/admin/airlines')\r\n                history.push('/admin/details')\r\n            })\r\n        } else {\r\n            if (result.status === 403) {\r\n                let text = result.error.split(\"_\")[1];\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: `${text} is allready taken`\r\n                })\r\n            }\r\n            if (result.status === 401) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: `You are not allowed to update details`\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateDetails = async () => {\r\n        let result;\r\n        let error = validateDetails();\r\n        if (error !== '') {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: `${error}`\r\n            })\r\n        } else {\r\n            if (currentPassword !== password) {\r\n                result = await adminDAL.updatePassword(currentPassword, password)\r\n                if (result === true) {\r\n                    updateAdmin();\r\n                } else {\r\n                    if (result.status === 403) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: `New password can\\'t be like the old one`\r\n                        }).then(() => {\r\n                            history.push('/airline/flights')\r\n                            history.push('/airline/details')\r\n                        })\r\n                    }\r\n                    if (result.status === 401) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: `You are not allowed to change password`\r\n                        }).then(() => {\r\n                            history.push('/admin/airlines')\r\n                            history.push('/admin/details')\r\n                        })\r\n                    }\r\n                }\r\n            } else {\r\n                updateAdmin();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        {!notAllowed ?\r\n            <div>\r\n                <h1>Personal Details</h1>\r\n                <span style={{ fontWeight: 'bold' }}> ID: </span> {admin.Id} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> First Name: </span>\r\n                <input type='text' defaultValue={firstName} onChange={(e) => setFirstName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Last Name: </span>\r\n                <input type='text' defaultValue={lastName} onChange={(e) => setLastName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Level: </span> {admin.Level} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> User Name: </span>\r\n                <input type='text' defaultValue={userName} onChange={(e) => setUserName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                <input type='text' defaultValue={password} onChange={(e) => setPassword(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Confirm Password: </span>\r\n                <input type='text' defaultValue={confirm} onChange={(e) => setConfirm(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Email: </span>\r\n                <input type='text' defaultValue={email} onChange={(e) => setEmail(e.target.value)} /> <br /> <br />\r\n                <input type='button' value='Update' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => updateDetails()} />\r\n            </div>\r\n            : <h1 style={{ color: 'red' }}>Main Admin is not allowed to update details</h1>\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default DetailsComp;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport adminDAL from '../../DAL/adminDAL';\r\nimport '../../tableDesign.css'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AdminsComp = () => {\r\n    let history = useHistory();\r\n    const [admins, setAdmins] = useState([])\r\n    const [adminToUpdate, setAdminToUpdate] = useState({})\r\n    const [showUpdateDiv, setShowUpdateDiv] = useState(false)\r\n    const [showCreateDiv, setShowCreateDiv] = useState(false)\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [level, setLevel] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const getUserId = () => {\r\n        const jwt = localStorage.getItem('JWT')\r\n        var base64Url = jwt.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n        return JSON.parse(jsonPayload).mainUserId;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let adminsArr = await adminDAL.GetAllAdmins();\r\n        let id = getUserId()\r\n        adminsArr = adminsArr.filter(admin => admin.Id != id);\r\n        setAdmins(adminsArr)\r\n    }, [])\r\n\r\n    if (admins) {\r\n        admins.sort((a, b) => (a.Id > b.Id) ? 1 : (a.Id < b.Id) ? -1 : 0)\r\n    }\r\n\r\n    const showDiv = (admin) => {\r\n        setAdminToUpdate(admin)\r\n        setFirstName(admin.First_Name)\r\n        setLastName(admin.Last_Name)\r\n        setUserName(admin.User.User_Name)\r\n        setPassword(admin.User.Password)\r\n        setConfirm(admin.User.Password)\r\n        setEmail(admin.User.Email)\r\n        setShowUpdateDiv(true)\r\n    }\r\n\r\n    const deleteAdmin = (admin) => {\r\n        Swal.fire({\r\n            title: 'Are you sure you want to delete this admin?',\r\n            text: \"The user won\\'t be able to login anymore\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                let res = await adminDAL.deleteAdmin(JSON.stringify(admin))\r\n                if (res === true) {\r\n                    Swal.fire(\r\n                        'Admin has been deleted succefully!',\r\n                        'The user cannot longer login to the system',\r\n                        'success'\r\n                    ).then(() => {\r\n                        history.push('/admin/details')\r\n                        history.push('/admin/admins')\r\n                    })\r\n                } else {\r\n                    if (res === 401) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not delete amdin'\r\n                        })\r\n                    } else {\r\n                        if (res === 403) {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'You are not allowed to delete admin'\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const getRow = (admin, index) => {\r\n        return <tr className=\"popupOpen\" key={index}>\r\n            <td>{admin.Id}</td>\r\n            <td>{admin.First_Name}</td>\r\n            <td>{admin.Last_Name}</td>\r\n            <td>{admin.Level}</td>\r\n            <td>{admin.User.User_Name}</td>\r\n            <td>{admin.User.Password}</td>\r\n            <td>{admin.User.Email}</td>\r\n            <td><input type='button' onClick={() => { showDiv(admin) }} className=\"button btnBorder btnBlueGreen\" value='Edit' /></td>\r\n            <td><input type='button' onClick={() => { deleteAdmin(admin) }} className=\"button btnBorder btnLightBlue\" value='Delete' /></td>\r\n        </tr>\r\n    }\r\n\r\n    let adminsToRender;\r\n    if (admins) {\r\n        adminsToRender = <table border='1'>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Level</th>\r\n                    <th>User Name</th>\r\n                    <th>Password</th>\r\n                    <th>Email</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {admins.map((admin, index) => {\r\n                    return getRow(admin, index)\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    }\r\n\r\n    const validateDetails = () => {\r\n        if (userName.length < 5) {\r\n            return 'User name is too short'\r\n        } else {\r\n            if (userName.length > 20) {\r\n                return 'User name is too long'\r\n            }\r\n        }\r\n        if (password !== confirm) {\r\n            return 'You must confirm your password currectly!'\r\n        }\r\n        if (password.length < 5) {\r\n            return 'Your password is too short'\r\n        } else {\r\n            if (password.length > 20) {\r\n                return 'Your password is too long'\r\n            }\r\n        }\r\n        if (firstName.length < 2) {\r\n            return 'First name is too short'\r\n        }\r\n        if (lastName.length < 2) {\r\n            return 'Last name is too short'\r\n        }\r\n        if (!email.includes('@') || email.length < 4) {\r\n            return 'Email must be in right format'\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const updateAdmin = () => {\r\n        let result\r\n        Swal.fire({\r\n            title: 'Are you OK with the changes?',\r\n            text: \"You can review then again before accepting\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, change it'\r\n        }).then(async (_result) => {\r\n            if (_result.isConfirmed) {\r\n                let error = validateDetails();\r\n                if (error !== '') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: `${error}`\r\n                    })\r\n                } else {\r\n                    let admin = JSON.stringify({\r\n                        Id: adminToUpdate.Id,\r\n                        First_Name: firstName,\r\n                        Last_Name: lastName,\r\n                        Level: adminToUpdate.Level,\r\n                        User_Id: adminToUpdate.User_Id,\r\n                        User: {\r\n                            Id: adminToUpdate.User_Id,\r\n                            User_Name: userName,\r\n                            Password: password,\r\n                            Email: email,\r\n                            User_Role: 1\r\n                        }\r\n                    })\r\n                    result = await adminDAL.updateAdmin(admin)\r\n                    if (result === true) {\r\n                        Swal.fire(\r\n                            'Airline was updated succefully!',\r\n                            'You can change it again anytime',\r\n                            'success'\r\n                        ).then(() => {\r\n                            history.push('/admin/details')\r\n                            history.push('/admin/admins')\r\n                        })\r\n                    } else {\r\n                        if (result.status === 400) {\r\n                            let text = result.error.split(\"_\")[1];\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: `${text} is allready taken`\r\n                            })\r\n                        } else {\r\n                            if (result.status === 403) {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `You are not allowed to update details`\r\n                                })\r\n                            } else {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `Could not update details`\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    let divUpdate\r\n    if (adminToUpdate !== {}) {\r\n        divUpdate = (\r\n            <div>  <br />\r\n                <span style={{ fontWeight: 'bold' }}> ID: </span> {adminToUpdate.Id} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> First Name: </span>\r\n                <input type='text' defaultValue={firstName} onChange={(e) => setFirstName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Last Name: </span>\r\n                <input type='text' defaultValue={lastName} onChange={(e) => setLastName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Level: </span> {adminToUpdate.Level} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> User Name: </span>\r\n                <input type='text' defaultValue={userName} onChange={(e) => setUserName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                <input type='text' defaultValue={password} onChange={(e) => setPassword(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Confirm Password: </span>\r\n                <input type='text' defaultValue={confirm} onChange={(e) => setConfirm(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Email: </span>\r\n                <input type='text' defaultValue={email} onChange={(e) => setEmail(e.target.value)} /> <br /> <br />\r\n                <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\" onClick={() => { setShowUpdateDiv(false) }} /> {' '}\r\n                <input type='button' value='Update' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => updateAdmin()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const createNewAdmin = () => {\r\n        let result;\r\n        Swal.fire({\r\n            title: 'Are you sure with the details?',\r\n            text: \"You can review them again before creating\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, create it!'\r\n        }).then(async (_result) => {\r\n            if (_result.isConfirmed) {\r\n                let error = validateDetails();\r\n                if (error !== '') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: `${error}`\r\n                    })\r\n                } else {\r\n                    let admin = JSON.stringify({\r\n                        First_Name: firstName,\r\n                        Last_Name: lastName,\r\n                        Level: level,\r\n                        User_Id: adminToUpdate.User_Id,\r\n                        User: {\r\n                            User_Name: userName,\r\n                            Password: password,\r\n                            Email: email,\r\n                            User_Role: 1\r\n                        }\r\n                    })\r\n                    result = await adminDAL.createNewAdmin(admin)\r\n                    if (result === true) {\r\n                        Swal.fire(\r\n                            'Admin was created succefully!',\r\n                            'You can change it again anytime',\r\n                            'success'\r\n                        ).then(() => {\r\n                            history.push('/admin/details')\r\n                            history.push('/admin/admins')\r\n                        })\r\n                    } else {\r\n                        if (result.status === 400) {\r\n                            let text = result.error.split(\"_\")[1];\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: `${text} is allready taken`\r\n                            })\r\n                        } else {\r\n                            if (result.status === 403) {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `You are not allowed to create admin`\r\n                                })\r\n                            } else {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `Could not create new admin`\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    let createDiv\r\n    if (adminToUpdate !== {}) {\r\n        createDiv = (\r\n            <div>  <br />\r\n                <span style={{ fontWeight: 'bold' }}> ID: </span> {adminToUpdate.Id} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> First Name: </span>\r\n                <input type='text' defaultValue={firstName} onChange={(e) => setFirstName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Last Name: </span>\r\n                <input type='text' defaultValue={lastName} onChange={(e) => setLastName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Level: </span>\r\n                <select id=\"level\" onChange={(e) => setLevel(e.target.value)}>\r\n                    <option value=\"1\" selected>Lowest Level</option>\r\n                    <option value=\"2\">Medium Level</option>\r\n                    <option value=\"3\">Highest Level</option>\r\n                </select> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> User Name: </span>\r\n                <input type='text' defaultValue={userName} onChange={(e) => setUserName(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                <input type='text' defaultValue={password} onChange={(e) => setPassword(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Confirm Password: </span>\r\n                <input type='text' defaultValue={confirm} onChange={(e) => setConfirm(e.target.value)} /> <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Email: </span>\r\n                <input type='text' defaultValue={email} onChange={(e) => setEmail(e.target.value)} /> <br /> <br />\r\n                <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\" onClick={() => { setShowCreateDiv(false) }} /> {' '}\r\n                <input type='button' value='Create' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => createNewAdmin()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showDivCreate = () => {\r\n        setFirstName('')\r\n        setLastName('')\r\n        setLevel('1')\r\n        setUserName('')\r\n        setPassword('')\r\n        setConfirm('')\r\n        setEmail('')\r\n        setShowCreateDiv(true)\r\n    }\r\n\r\n    let createBtn = <input type='button' value='Create New Admin' className=\"button btnBorder btnLightBlue\"\r\n        style={{ width: '150px' }} onClick={() => { showDivCreate() }} />\r\n\r\n    return (<div>\r\n        <h1>Admins</h1> <br />\r\n        {(!showUpdateDiv && !showCreateDiv) && createBtn}\r\n        {showUpdateDiv ? divUpdate : showCreateDiv ? createDiv : adminsToRender}\r\n    </div>)\r\n}\r\n\r\nexport default AdminsComp;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport adminDAL from '../../DAL/adminDAL';\r\nimport airlineDAL from '../../DAL/airlineDAL.js'\r\nimport '../../tableDesign.css'\r\nimport '../designedSelect.css'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst CountriesComp = () => {\r\n    let history = useHistory()\r\n    const [countries, setCountries] = useState([])\r\n    const [country, setCountry] = useState('')\r\n    const [editedCountry, setEditedcountry] = useState('')\r\n    const [createdCountry, setCreatedCountry] = useState('')\r\n    const [showUpdateDiv, setShowUpdateDiv] = useState(false)\r\n    const [showCreateDiv, setShowCreateDiv] = useState(false)\r\n\r\n    useEffect(async () => {\r\n        let countriesArr = await airlineDAL.GetAllCountries();\r\n        setCountries(JSON.parse(countriesArr))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (showUpdateDiv === true) {\r\n            setEditedcountry(country)\r\n        }\r\n    }, [showUpdateDiv])\r\n\r\n    let countriesSelector = <select class=\"select-text\" id=\"countries\"\r\n        onChange={(e) => {\r\n            setCountry(e.target.value)\r\n            setShowUpdateDiv(false)\r\n        }}>\r\n        <option value='' disabled selected></option>\r\n        {countries.map(c => {\r\n            return <option value={c.Name}>{c.Name}</option>\r\n        })} </select>\r\n\r\n    const updateCountry = () => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"Changing Country Name will make many changes in the system\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, change it'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                if (editedCountry.length < 2) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: `Country Name is too short!`\r\n                    })\r\n                } else {\r\n                    let countryToUpdate = countries.find(_country => _country.Name === country)\r\n                    countryToUpdate.Name = editedCountry\r\n                    let res = await adminDAL.updateCountry(JSON.stringify(countryToUpdate))\r\n                    if (res === true) {\r\n                        Swal.fire(\r\n                            'Country Name was updated succefully!',\r\n                            'You can change it again anytime',\r\n                            'success'\r\n                        ).then(() => {\r\n                            history.push('/admin/details')\r\n                            history.push('/admin/countries')\r\n                        })\r\n                    } else {\r\n                        countryToUpdate.Name = country\r\n                        if (res.status === 400) {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: `Country Name is allready taken`\r\n                            })\r\n                        } else {\r\n                            if (res.status === 403) {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `You are not allowed to update country`\r\n                                })\r\n                            } else {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `Could not update country`\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const deleteCountry = () => {\r\n        Swal.fire({\r\n            title: 'Are you sure you want to delete this country?',\r\n            text: \"This action will cause many changes to all users!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                let countryToDelete = countries.find(_country => _country.Name === country)\r\n                let res = await adminDAL.deleteCountry(JSON.stringify(countryToDelete.Id))\r\n                if (res === true) {\r\n                    Swal.fire(\r\n                        'Country has been deleted succefully!',\r\n                        'All changes will be updated in the website',\r\n                        'success'\r\n                    ).then(() => {\r\n                        history.push('/admin/details')\r\n                        history.push('/admin/countries')\r\n                    })\r\n                } else {\r\n                    if (res === 401) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Something wrong happend',\r\n                            text: 'Could not delete country'\r\n                        })\r\n                    } else {\r\n                        if (res === 403) {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'You are not allowed to delete country'\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    let countryDiv\r\n    if (country !== '') {\r\n        let countryToPresent = !showUpdateDiv ? country : <input type='text' defaultValue={country}\r\n            onChange={(e) => { setEditedcountry(e.target.value) }} />\r\n        countryDiv = <div>\r\n            <span style={{ fontWeight: 'bold' }}> Name: </span> {countryToPresent} <br />  <br />\r\n            {!showUpdateDiv ? <input type='button' onClick={() => { setShowUpdateDiv(true) }} className=\"button btnBorder btnBlueGreen\"\r\n                value='Edit' /> : <input type='button' value='Update' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\"\r\n                    onClick={() => { updateCountry() }} />} {' '}\r\n            {!showUpdateDiv ? <input type='button' className=\"button btnBorder btnLightBlue\" value='Delete'\r\n                onClick={() => { deleteCountry() }} />\r\n                : <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\" onClick={() => { setShowUpdateDiv(false) }} />}\r\n        </div>\r\n    }\r\n\r\n    const createNewCountry = () => {\r\n        let result;\r\n        Swal.fire({\r\n            title: 'Are you sure with country name?',\r\n            text: \"You can review it again before creating\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, create it!'\r\n        }).then(async (_result) => {\r\n            if (_result.isConfirmed) {\r\n                if (createdCountry.length < 2) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: `Country name is too short!`\r\n                    })\r\n                } else {\r\n                    let country = JSON.stringify({\r\n                        Name: createdCountry\r\n                    })\r\n                    result = await adminDAL.createNewCountry(country)\r\n                    if (result === true) {\r\n                        Swal.fire(\r\n                            'country was created succefully!',\r\n                            'You can change it again anytime',\r\n                            'success'\r\n                        ).then(() => {\r\n                            history.push('/admin/details')\r\n                            history.push('/admin/countries')\r\n                        })\r\n                    } else {\r\n                        if (result.status === 400) {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: `Country name is allready taken`\r\n                            })\r\n                        } else {\r\n                            if (result.status === 403) {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `You are not allowed to create country`\r\n                                })\r\n                            } else {\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: `Could not create new country`\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    let createDiv = <div>\r\n        <h2>Create New Country</h2> <br />\r\n        <span style={{ fontWeight: 'bold' }}> Name: </span>\r\n        <input type='text' onChange={(e) => { setCreatedCountry(e.target.value) }} /> <br />  <br />\r\n        <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\"\r\n            onClick={() => {\r\n                setShowCreateDiv(false)\r\n                setCreatedCountry('')\r\n            }} /> {' '}\r\n        <input type='button' value='Create' style={{ width: '70px' }} className=\"button btnBorder btnLightBlue\" onClick={() => createNewCountry()} />\r\n    </div>\r\n\r\n    let mainDiv = <div>\r\n        <p>Select country to watch</p> <br />\r\n        <div class=\"wrap\">\r\n            <div class=\"select\">\r\n                {countriesSelector}\r\n                <span class=\"select-highlight\"></span>\r\n                <span class=\"select-bar\"></span>\r\n                <label class=\"select-label\">Select</label>\r\n            </div>\r\n        </div> <br /> <br /> <br />\r\n        {countryDiv} <br /> <br />\r\n        {!showUpdateDiv && <input type='button' value='Create New Country' className=\"button btnBorder btnLightBlue\"\r\n            style={{ width: '160px' }}\r\n            onClick={() => {\r\n                setShowCreateDiv(true)\r\n                setCreatedCountry('')\r\n            }} />}\r\n    </div>\r\n\r\n    return (<div>\r\n        <h1>Countries</h1> <br />\r\n        {!showCreateDiv ? mainDiv : createDiv}\r\n    </div>)\r\n}\r\n\r\nexport default CountriesComp;","import React, { Component } from 'react'\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nconst Navigation = styled.header`\r\n  width: 100%;\r\n  border-bottom: 10px solid #222;\r\n  z-index: 1;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0px 100px 0;\r\n  height: 140px;\r\n  margin-bottom: 60px;\r\n  background: #f8f8f8;\r\n\r\n  .logo a {\r\n    padding-top: 33px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    clear: both;\r\n    padding-bottom: 30px;\r\n    text-decoration: none;\r\n\r\n    p {\r\n      width: 500px;\r\n      display: block;\r\n    }\r\n    em {\r\n      font-size: 0.5em;\r\n      float: left;\r\n      display: block;\r\n      img {\r\n        display: inline-block;\r\n        margin-top: 5px;\r\n        width: 15px;\r\n        float: left;\r\n      }\r\n      .letterhead {\r\n        display: inline-block;\r\n        line-height: 260%;\r\n        float: left;\r\n      }\r\n    }\r\n  }\r\n  .gray {\r\n    color: #ccc;\r\n  }\r\n  a {\r\n    color: #222;\r\n    opacity: 0.55;\r\n    transition: all 0.6s;\r\n    color: #222;\r\n    font-size: 1em;\r\n  }\r\n  a:hover {\r\n    opacity: 1;\r\n  }\r\n  .fa-bars {\r\n    display: none;\r\n    color: #222;\r\n    font-size: 2rem;\r\n  }\r\n  nav {\r\n    ul {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    li {\r\n      margin: 0 15px;\r\n      justify-content: space-between;\r\n      font-size: 1em;\r\n    }\r\n    a {\r\n      font-size: 1em;\r\n      text-decoration: none;\r\n      .active {\r\n        color: tomato;\r\n      }\r\n    }\r\n    a.active {\r\n      color: #222;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    padding: 0px;\r\n    .logo {\r\n      padding-left: 15px;\r\n      padding-top: 0px !important;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    height: auto;\r\n    min-height: 50px;\r\n    display: block;\r\n    position: relative;\r\n    .logo {\r\n      width: 100%;\r\n      display: block;\r\n      padding-top: 20px;\r\n      margin: 0px;\r\n      margin-left: -5px;\r\n      a {\r\n        padding: 20px 0px;\r\n      }\r\n    }\r\n    .fa-bars {\r\n      display: inline-block;\r\n      position: absolute;\r\n      top: 10px;\r\n      right: 10px;\r\n      cursor: pointer;\r\n    }\r\n    ul.collapsed {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      flex-wrap: wrap;\r\n\r\n      overflow: hidden;\r\n      max-height: 0;\r\n      -moz-transition-duration: 0.4s;\r\n      -webkit-transition-duration: 0.4s;\r\n      -o-transition-duration: 0.4s;\r\n      transition-duration: 0.4s;\r\n      -moz-transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n      -webkit-transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n      -o-transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n      transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n\r\n      &.is-expanded {\r\n        overflow: hidden;\r\n        max-height: 500px; /* approximate max height */\r\n        -moz-transition-duration: 0.4s;\r\n        -webkit-transition-duration: 0.4s;\r\n        -o-transition-duration: 0.4s;\r\n        transition-duration: 0.4s;\r\n        -moz-transition-timing-function: ease-in;\r\n        -webkit-transition-timing-function: ease-in;\r\n        -o-transition-timing-function: ease-in;\r\n        transition-timing-function: ease-in;\r\n      }\r\n      li {\r\n        padding: 15px 10px;\r\n        margin: 0px 0px;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass AdminNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isExpanded: false\r\n    };\r\n  }\r\n\r\n  handleToggle(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded\r\n    });\r\n  }\r\n  render() {\r\n    const { isExpanded } = this.state;\r\n    return (\r\n      <Navigation>\r\n        <nav className=\"nav\">\r\n          <i\r\n            className=\"fa fa-bars\"\r\n            aria-hidden=\"true\"\r\n            onClick={e => this.handleToggle(e)}\r\n          />\r\n          <ul className={`collapsed ${isExpanded ? \"is-expanded\" : \"\"}`}>\r\n            <NavLink activeClassName=\"active\" to=\"/admin/adminsInbox\">\r\n              <li>Admins Inbox</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/admin/airlinesInbox\">\r\n              <li>Airlines Inbox</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/admin/airlines\">\r\n              <li>Airlines</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/admin/customers\">\r\n              <li>Customers</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/admin/admins\">\r\n              <li>Admins</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/admin/countries\">\r\n              <li>Countries</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/admin/details\">\r\n              <li>Details</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/flights\">\r\n              <li>Flights</li>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/FlightPages/loginPage.html\">\r\n              <li>Log Out</li>\r\n            </NavLink>\r\n            <button onClick={() => window.location.href = '/FlightPages/loginPage.html'}>Log Out 2</button>\r\n          </ul>\r\n        </nav>\r\n      </Navigation>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(AdminNavbar)","import React, { useEffect } from 'react'\r\nimport { Route, useHistory, Switch } from 'react-router-dom';\r\nimport AdminsInboxComp from './AdminsInboxComp'\r\nimport AirlinesInboxComp from './AirlinesInboxComp'\r\nimport AirlinesComp from './AirlinesComp'\r\nimport CustomersComp from './CustomersComp'\r\nimport DetailsComp from './DetailsComp'\r\nimport AdminsComp from './AdminsComp'\r\nimport CountriesComp from './CountriesComp'\r\nimport Navbar from './AdminNavbar'\r\nimport '../navbar.css'\r\nimport '../background.css'\r\n\r\nconst MainAdminComp = () => {\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        history.push('/admin/details')\r\n    }, [])\r\n\r\n    return (<div>\r\n        <Navbar />\r\n        <Switch>\r\n            <div className=\"container\">\r\n                <Route path='/admin/adminsInbox'> <AdminsInboxComp /> </Route>\r\n                <Route path='/admin/airlinesInbox'> <AirlinesInboxComp /> </Route>\r\n                <Route path='/admin/airlines'> <AirlinesComp /> </Route>\r\n                <Route path='/admin/customers'> <CustomersComp /> </Route>\r\n                <Route path='/admin/admins'> <AdminsComp /> </Route>\r\n                <Route path='/admin/countries'> <CountriesComp /> </Route>\r\n                <Route path='/admin/details'> <DetailsComp /> </Route>\r\n            </div>\r\n        </Switch>\r\n    </div>)\r\n}\r\n\r\nexport default MainAdminComp;","import $ from 'jquery';\r\n\r\nconst getAllAirlineCompanies = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Anonymous/GetAllAirlineCompanies',\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getAllFlights = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Anonymous/GetAllFlights',\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getAllFlightsVacancy = async () => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: '/api/Anonymous/GetAllFlightsVacancy',\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getFlightsByDepatrureDate = async (date) => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: `/api/Anonymous/GetFlightsByDepatrureDate?date=${date}`,\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getFlightsByLandingDate = async (date) => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: `/api/Anonymous/GetFlightsByLandingDate?date=${date}`,\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getFlightsByDestinationCountry = async (countryName) => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: `/api/Anonymous/GetFlightsByDestinationCountry?countryName=${countryName}`,\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getFlightsByOrigionCountry = async (countryName) => {\r\n    let result;\r\n    try {\r\n        result = await $.ajax({\r\n            type: \"GET\",\r\n            url: `/api/Anonymous/GetFlightsByOriginCountry?countryName=${countryName}`,\r\n            contentType: 'application/json',\r\n            dataType: 'json'\r\n        })\r\n        return result\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport default {\r\n    getAllAirlineCompanies, getAllFlights, getAllFlightsVacancy, getFlightsByDepatrureDate,\r\n    getFlightsByLandingDate, getFlightsByDestinationCountry, getFlightsByOrigionCountry\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport flightsDAL from '../../DAL/flightsDAL';\r\nimport airlineDAL from '../../DAL/airlineDAL';\r\nimport customerDAL from '../../DAL/customerDAL';\r\nimport '../../tableDesign.css'\r\nimport '../designedSelect.css'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst FlightsComp = () => {\r\n    let history = useHistory()\r\n    const [flights, setFlights] = useState([])\r\n    const [mainFligthsArr, setMainFligthsArr] = useState([])\r\n    const [airlines, setAirlines] = useState([])\r\n    const [countries, setCountries] = useState([])\r\n    const [showPurchaseDiv, setShowPurchaseDiv] = useState(false)\r\n    const [selectedFlight, setSelectedFlight] = useState({})\r\n\r\n    useEffect(async () => {\r\n        let countriesArr = await airlineDAL.GetAllCountries();\r\n        setCountries(JSON.parse(countriesArr))\r\n        let flightsArr = await flightsDAL.getAllFlights();\r\n        setFlights(flightsArr)\r\n        setMainFligthsArr(flightsArr)\r\n        let airlinesArr = await flightsDAL.getAllAirlineCompanies();\r\n        setAirlines(airlinesArr)\r\n    }, [])\r\n\r\n    if (flights) {\r\n        flights.sort((a, b) => (a.Id > b.Id) ? 1 : (a.Id < b.Id) ? -1 : 0)\r\n    }\r\n\r\n    const getFlightsByOrigionCountry = async (country) => {\r\n        document.getElementById('airline').value = 'Airline Name'\r\n        document.getElementById('destination').value = 'Destination Country'\r\n        let flightsArr = await flightsDAL.getFlightsByOrigionCountry(country)\r\n        setFlights(flightsArr)\r\n    }\r\n\r\n    const getFlightsByDestinationCountry = async (country) => {\r\n        document.getElementById('airline').value = 'Airline Name'\r\n        document.getElementById('origion').value = 'Origion Country'\r\n        let flightsArr = await flightsDAL.getFlightsByDestinationCountry(country)\r\n        setFlights(flightsArr)\r\n    }\r\n\r\n    const getFlightsByAirlineCompany = (airline) => {\r\n        document.getElementById('origion').value = 'Origion Country'\r\n        document.getElementById('destination').value = 'Destination Country'\r\n        let flightsArr = mainFligthsArr.filter(flight => flight.AirlineCompanyName == airline)\r\n        setFlights(flightsArr)\r\n    }\r\n\r\n    const getFlightsByDepatrureDate = async (date) => {\r\n        document.getElementById('airline').value = 'Airline Name'\r\n        document.getElementById('origion').value = 'Origion Country'\r\n        document.getElementById('destination').value = 'Destination Country'\r\n        let flightsArr = await flightsDAL.getFlightsByDepatrureDate(date)\r\n        setFlights(flightsArr)\r\n    }\r\n\r\n    const getFlightsByLandingDate = async (date) => {\r\n        document.getElementById('airline').value = 'Airline Name'\r\n        document.getElementById('origion').value = 'Origion Country'\r\n        document.getElementById('destination').value = 'Destination Country'\r\n        let flightsArr = await flightsDAL.getFlightsByLandingDate(date)\r\n        setFlights(flightsArr)\r\n    }\r\n\r\n    let airlinesSelector = <select style={{ backgroundColor: 'white' }} class=\"select-text\" id='airline'\r\n        onChange={(e) => { getFlightsByAirlineCompany(e.target.value) }}>\r\n        <option disabled selected>Airline Name</option>\r\n        {airlines.map(a => {\r\n            return <option value={a.Name}>{a.Name}</option>\r\n        })} </select>\r\n\r\n    let origionCountriesSelector = <select style={{ backgroundColor: 'white' }} class=\"select-text\" id='origion'\r\n        onChange={(e) => { getFlightsByOrigionCountry(e.target.value) }}>\r\n        <option disabled selected>Origion Country</option>\r\n        {countries.map(c => {\r\n            return <option value={c.Name}>{c.Name}</option>\r\n        })} </select>\r\n\r\n    let destinationCountriesSelector = <select style={{ backgroundColor: 'white' }} class=\"select-text\" id='destination'\r\n        onChange={(e) => { getFlightsByDestinationCountry(e.target.value) }}>\r\n        <option disabled selected>Destination Country</option>\r\n        {countries.map(c => {\r\n            return <option value={c.Name}>{c.Name}</option>\r\n        })} </select>\r\n\r\n    const designDate = (date) => {\r\n        let part1 = date.split(':')[0]\r\n        let part2 = date.split(':')[1]\r\n        date = part1 + ':' + part2\r\n        date = date.replace('T', ' ')\r\n        return date\r\n    }\r\n\r\n    const showToPurchaseDiv = (flight) => {\r\n        let currentDate = new Date();\r\n        let detpartureDate = new Date(flight.Departure_Time)\r\n        if (detpartureDate.getTime() > currentDate.getTime()) {\r\n            let role = localStorage.getItem('JWT')\r\n            if (role !== 'Customer') {\r\n                Swal.fire({\r\n                    title: 'Only customer can buy tickets',\r\n                    showClass: {\r\n                        popup: 'animate__animated animate__fadeInDown'\r\n                    },\r\n                    hideClass: {\r\n                        popup: 'animate__animated animate__fadeOutUp'\r\n                    }\r\n                })\r\n            } else {\r\n                setShowPurchaseDiv(true)\r\n                setSelectedFlight(flight)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'You can\\'t buy ticket to this flight',\r\n                text: `The flight has already taken off`\r\n            })\r\n        }\r\n    }\r\n\r\n    const getRow = (flight, index) => {\r\n        return <tr onClick={() => { showToPurchaseDiv(flight) }} className=\"popupOpen\" key={index}>\r\n            <td>{flight.Id}</td>\r\n            <td>{flight.AirlineCompanyName}</td>\r\n            <td>{flight.OrigionCountry}</td>\r\n            <td>{flight.DestinationCountry}</td>\r\n            <td>{designDate(flight.Departure_Time)}</td>\r\n            <td>{designDate(flight.Landing_Time)}</td>\r\n            <td>{flight.RemainingTickets}</td>\r\n        </tr>\r\n    }\r\n\r\n    let flightsToRender;\r\n    if (flights) {\r\n        flightsToRender = <table id='flightsTbl' border='1'>\r\n            {/* Creating table header */}\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Airline Company</th>\r\n                    <th>Origion Country</th>\r\n                    <th>Destination Country</th>\r\n                    <th>Departure Time</th>\r\n                    <th>Landing Time</th>\r\n                    <th>Remaining Tickets</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {flights.map((flight, index) => {\r\n                    return getRow(flight, index)\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    }\r\n\r\n    const resetAll = () => {\r\n        document.getElementById('airline').value = 'Airline Name'\r\n        document.getElementById('origion').value = 'Origion Country'\r\n        document.getElementById('destination').value = 'Destination Country'\r\n        document.getElementById('departure').value = ''\r\n        document.getElementById('landing').value = ''\r\n        setFlights(mainFligthsArr)\r\n    }\r\n\r\n    const buyTicket = () => {\r\n        let flight = JSON.stringify({\r\n            Id: selectedFlight.Id,\r\n            AirlineCompanyName: selectedFlight.AirlineCompanyName,\r\n            OrigionCountry: selectedFlight.OrigionCountry,\r\n            DestinationCountry: selectedFlight.DestinationCountry,\r\n            Departure_Time: selectedFlight.Departure_Time,\r\n            Landing_Time: selectedFlight.Landing_Time,\r\n            RemainingTickets: selectedFlight.RemainingTickets\r\n        })\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You can only buy one ticket to this flight\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, buy it!'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                let res = await customerDAL.purchaseTicket(flight)\r\n                if (res === true) {\r\n                    Swal.fire(\r\n                        'Ticket was purchased succefully!',\r\n                        'You can see it on the website',\r\n                        'success'\r\n                    ).then(() => {\r\n                        let flightsArr = flights\r\n                        let index = flightsArr.findIndex(flight => flight.Id === selectedFlight.Id)\r\n                        flightsArr[index].RemainingTickets--\r\n                        setFlights(flightsArr)\r\n                        setSelectedFlight({})\r\n                        setShowPurchaseDiv(false)\r\n                    })\r\n                } else {\r\n                    if (res === 403) {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Can buy ticket only once!',\r\n                            text: 'Could not purchase ticket again'\r\n                        })\r\n                    } else {\r\n                        if (res === 406) {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'No tickets left',\r\n                                text: 'Could not purchase ticket again'\r\n                            })\r\n                        } else {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Something wrong happend',\r\n                                text: 'Could not purchase ticket'\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const goBack = () => {\r\n        let role = localStorage.getItem('JWT')\r\n        switch (role) {\r\n            case 'Administrator':\r\n                history.push(\"/admin/details\")\r\n                break;\r\n            case 'Airline Company':\r\n                history.push('/airline/details')\r\n                break;\r\n            case 'Customer':\r\n                history.push('/customer/tickets')\r\n                break;\r\n            default: \r\n                window.location.href = \"/FlightPages/loginPage.html\"\r\n        }\r\n    }\r\n\r\n    let buyDiv\r\n    if (JSON.stringify(selectedFlight) !== '{}') {\r\n        buyDiv = (\r\n            <div>  <br /> <br />\r\n                <h1>Purchase Ticket</h1> <br />\r\n                <span style={{ fontWeight: 'bold' }}> ID: </span> {selectedFlight.Id} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Airline Company Name: </span> {selectedFlight.AirlineCompanyName} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Origion Country: </span> {selectedFlight.OrigionCountry} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Destination Country: </span> {selectedFlight.DestinationCountry} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Departure Time: </span> {designDate(selectedFlight.Departure_Time)}<br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Landing Time: </span> {designDate(selectedFlight.Landing_Time)} <br /> <br />\r\n                <span style={{ fontWeight: 'bold' }}> Remaining Tickets: </span> {selectedFlight.RemainingTickets} <br /> <br />\r\n                <input type='button' value='Close' style={{ width: '70px' }} className=\"button btnBorder btnBlueGreen\" onClick={() => { setShowPurchaseDiv(false) }} /> {' '}\r\n                <input type='button' value='Purchase' style={{ width: '80px' }} className=\"button btnBorder btnLightBlue\" onClick={() => buyTicket()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div> <br />\r\n        {!showPurchaseDiv ?\r\n            <div>\r\n                <h1>Flights</h1>  <br /> <br />\r\n                <input type='button' onClick={() => { resetAll() }}\r\n                    className=\"button btnBorder btnLightBlue\" style={{ width: '80px' }} value='Reset All' /> {' '}\r\n                <input type='button' style={{ width: '85px' }} className=\"button btnBorder btnBlueGreen\" value='Go back'\r\n                    onClick={() => { goBack() }} /> <br /> <br />\r\n                {airlinesSelector} {' '}\r\n                {origionCountriesSelector} {' '}\r\n                {destinationCountriesSelector} {' '} <br /> <br />\r\n                <label>Departure Date: </label>\r\n                <input type='date' id='departure' onChange={(e) => { getFlightsByDepatrureDate(e.target.value) }} /> {' '}\r\n                <label>Landing Date: </label>\r\n                <input type='date' id='landing' onChange={(e) => { getFlightsByLandingDate(e.target.value) }} /> <br /> <br />\r\n                {flightsToRender}\r\n            </div>\r\n            : buyDiv}\r\n    </div>)\r\n}\r\n\r\nexport default FlightsComp","import React, { Component, useEffect } from 'react'\r\nimport { Route, useHistory, Switch } from 'react-router-dom';\r\nimport MainCustomerComp from '../customerComponents/MainCustomerComp.js';\r\nimport MainAirlineComp from '../airlineComponents/MainAirlineComp.js';\r\nimport MainAdminComp from '../adminComponents/MainAdminComp.js';\r\nimport FlightsComp from '../mainComponents/FlightsComp.js'\r\n\r\nconst MainComp = () => {\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let role = localStorage.getItem('role')\r\n        switch (role) {\r\n            case 'Administrator':\r\n                history.push(\"/admin/details\")\r\n                break;\r\n            case 'Airline Company':\r\n                history.push('/airline/details')\r\n                break;\r\n            case 'Customer':\r\n                history.push('/customer/details')\r\n                break;\r\n            default:\r\n                history.push('/flights')\r\n        }\r\n    }, [])\r\n\r\n    return (<div id=\"bg\">\r\n        <Switch>\r\n            <Route path='/customer'> <MainCustomerComp /> </Route>\r\n            <Route path='/airline'> <MainAirlineComp /> </Route>\r\n            <Route path='/admin' > <MainAdminComp /> </Route>\r\n            <Route path='/flights' > <FlightsComp /> </Route>\r\n        </Switch>\r\n    </div>)\r\n}\r\n\r\nexport default MainComp;","import logo from './logo.svg';\nimport './App.css';\nimport MainComp from './flightComponents/mainComponents/MainComp.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}